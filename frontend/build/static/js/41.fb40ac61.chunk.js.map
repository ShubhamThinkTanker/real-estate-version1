{"version":3,"sources":["admin/components/complex/list/Table.js","admin/components/complex/list/index.js"],"names":["CustomHeader","props","className","Row","Col","xl","Label","for","Input","id","type","value","onChange","e","preventDefault","handleFilter","Button","Ripple","color","tag","Link","to","Table","columns","dispatch","useDispatch","useSelector","state","getAllComplexRecord","getAllComplexLoading","loading","getAllComplexData","error","useState","deletedRow","setDeletedRow","datatable_per_page","limit","setPerPage","sort_order","setSort_order","Complex_Data_Message","filter_value","setFilter_value","table_data","page","order_column","per_page","queryString","setQueryString","useEffect","ComplexListAction","tableChangeHandler","data","queryStr","Object","keys","map","key","encodeURIComponent","join","BootstrapCheckbox","forwardRef","ref","onClick","rest","Card","length","swal","title","text","icon","buttons","dangerMode","then","willDelete","deleteObj","ele","_id","MultiDeleteAction","noHeader","pagination","selectableRows","onSelectedRowsChange","selectedRow","selectedRows","paginationServer","paginationRowsPerPageOptions","datatable_per_raw","paginationPerPage","paginationTotalRows","TotalCount","sortIcon","size","selectableRowsComponent","onChangeRowsPerPage","newPerPage","console","log","onChangePage","onSort","column","sortDirection","selector","fixedHeader","fixedHeaderScrollHeight","sortServer","striped","progressPending","subHeaderComponent","target","subHeader","UsersList","name","minWidth","cell","row","realestate_name","sortable","country","city","UncontrolledDropdown","style","cursor","UserDeleteAction","marginRight"],"mappings":"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","file":"static/js/41.fb40ac61.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect, forwardRef } from \"react\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ChevronDown } from \"react-feather\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport swal from \"sweetalert\";\r\nimport { Card, Input, Row, Col, Label, Button } from \"reactstrap\";\r\n\r\n// ** Styles\r\nimport \"@styles/react/libs/react-select/_react-select.scss\";\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { MultiDeleteAction } from \"../../../../redux/actions/apislogic/userapis\";\r\nimport {\r\n  datatable_per_page,\r\n  datatable_per_raw\r\n} from \"../../../../configs/constant_array\";\r\nimport { Complex_Data_Message } from \"../../../../configs/Toast_Message\";\r\nimport { ComplexListAction } from \"../../../../redux/actions/apislogic/complexapi\";\r\n\r\n// ** Table Header\r\n\r\nconst CustomHeader = (props) => {\r\n  const onSearch = (e) => {\r\n    e.preventDefault();\r\n    props.handleFilter(e);\r\n  };\r\n\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\"></Col>\r\n        <Col\r\n          xl=\"6\"\r\n          className=\"d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1\"\r\n        >\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 mr-1 search-chairman-btn\">\r\n            <Label className=\"mb-0\" for=\"search-invoice\">\r\n              Search:\r\n            </Label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ml-50 w-100\"\r\n              type=\"text\"\r\n              value={props.value}\r\n              onChange={onSearch}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Button.Ripple color=\"primary\" tag={Link} to={\"/complex/add\"}>\r\n              Create Realestate\r\n            </Button.Ripple>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Table = ({ columns }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    loading: getAllComplexLoading,\r\n    error: getAllComplexError,\r\n    getAllComplexData\r\n  } = useSelector((state) => state.getAllComplexRecord);\r\n\r\n  const [deletedRow, setDeletedRow] = useState([]);\r\n\r\n  const [limit, setPerPage] = useState(datatable_per_page);\r\n  const [sort_order, setSort_order] = useState(\"desc\");\r\n\r\n  {\r\n    Complex_Data_Message(setDeletedRow);\r\n  }\r\n\r\n  const handelDelete = (selectedRow) => {\r\n    setDeletedRow(selectedRow);\r\n  };\r\n\r\n  const DeleteAll = (e) => {\r\n    deletedRow.length != 0\r\n      ? swal({\r\n          title: \"Are you sure?\",\r\n          text: \"Once deleted, you will not be able to recover this data!\",\r\n          icon: \"warning\",\r\n          buttons: true,\r\n          dangerMode: true\r\n        }).then((willDelete) => {\r\n          if (willDelete) {\r\n            let multiRecordDelete = deletedRow.map((ele) => ele._id);\r\n            let deleteObj = {\r\n              id: multiRecordDelete\r\n            };\r\n            dispatch(MultiDeleteAction(deleteObj));\r\n          } else {\r\n            swal(\"Your data  is safe!\");\r\n          }\r\n        })\r\n      : swal(\"Please Select One Data\");\r\n  };\r\n\r\n  const [filter_value, setFilter_value] = useState(\"\");\r\n  const table_data = {\r\n    page: 1,\r\n    limit: limit,\r\n    filter_value: filter_value,\r\n    sort_order: sort_order,\r\n    order_column: \"updated_at\"\r\n  };\r\n\r\n  const [queryString, setQueryString] = useState(\r\n    `page=${table_data.page}&limit=${table_data.per_page}&filter_value=${table_data.filter_value}&sort_order=${table_data.sort_order}&order_column=${table_data.order_column}`\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(ComplexListAction(queryString));\r\n  }, [dispatch, queryString]);\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort_order(sortDirection);\r\n    tableChangeHandler({\r\n      ...table_data,\r\n      sort_order: sortDirection,\r\n      order_column: column.selector\r\n    });\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    console.log(page, \"set page\");\r\n    tableChangeHandler({ ...table_data, page: page });\r\n  };\r\n\r\n  const handlePerRowsChange = (newPerPage, page) => {\r\n    console.log(newPerPage, \"newpage\");\r\n    console.log(page, \"page \");\r\n    setPerPage(newPerPage);\r\n    tableChangeHandler({ ...table_data, page: page, limit: newPerPage });\r\n  };\r\n\r\n  const tableChangeHandler = (data) => {\r\n    let queryStr = Object.keys(data)\r\n      .map((key) => {\r\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]);\r\n      })\r\n      .join(\"&\");\r\n    setQueryString(queryStr);\r\n  };\r\n\r\n  const handleFilter = (e) => {\r\n    let value = e.target.value;\r\n    tableChangeHandler({ ...table_data, filter_value: value });\r\n    setFilter_value(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(ComplexListAction());\r\n  }, []);\r\n\r\n  const BootstrapCheckbox = forwardRef(({ onClick, ...rest }, ref) => (\r\n    <div className=\"custom-control custom-checkbox\">\r\n      <input\r\n        type=\"checkbox\"\r\n        className=\"custom-control-input\"\r\n        ref={ref}\r\n        {...rest}\r\n      />\r\n      <label className=\"custom-control-label\" onClick={onClick} />\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <div className=\"app-user-list list\">\r\n          <div className=\"btn-delete\">\r\n            {deletedRow.length != 0 ? (\r\n              <Button.Ripple color=\"danger\" onClick={(e) => DeleteAll(e)}>\r\n                Delete\r\n              </Button.Ripple>\r\n            ) : null}\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            selectableRows\r\n            onSelectedRowsChange={(e) => handelDelete(e.selectedRows)}\r\n            columns={columns}\r\n            data={getAllComplexData?.data}\r\n            paginationServer\r\n            paginationRowsPerPageOptions={datatable_per_raw}\r\n            paginationPerPage={table_data.limit}\r\n            paginationTotalRows={getAllComplexData?.data.TotalCount}\r\n            sortIcon={<ChevronDown size={5} />}\r\n            selectableRowsComponent={BootstrapCheckbox}\r\n            onChangeRowsPerPage={handlePerRowsChange}\r\n            onChangePage={handlePageChange}\r\n            onSort={handleSort}\r\n            fixedHeader\r\n            fixedHeaderScrollHeight=\"400px\"\r\n            sortServer={true}\r\n            striped={true}\r\n            progressPending={getAllComplexLoading}\r\n            subHeaderComponent={\r\n              <CustomHeader value={filter_value} handleFilter={handleFilter} />\r\n            }\r\n            subHeader\r\n          />\r\n        </div>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","// ** User List Component\r\nimport Table from \"./Table\";\r\n// ** Styles\r\nimport \"@styles/react/apps/app-users.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { UncontrolledDropdown } from \"reactstrap\";\r\nimport { Edit, Eye, Home, Trash2 } from \"react-feather\";\r\nimport \"../../../../components-css/userandchairman.css\";\r\nimport { UserDeleteAction } from \"../../../../redux/actions/apislogic/userapis\";\r\nimport { ComplexListAction } from \"../../../../redux/actions/apislogic/complexapi\";\r\n\r\nconst UsersList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const OneDeleteRecord = (id) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this data!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        dispatch(UserDeleteAction(id));\r\n      } else {\r\n        swal(\"Your data  is safe!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(ComplexListAction());\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Realestate Name\",\r\n      minWidth: \"200px\",\r\n      selector: \"realestate_name\",\r\n      cell: (row) => row.realestate_name,\r\n      sortable: true\r\n    },\r\n    // {\r\n    //   name: \"Address\",\r\n    //   minWidth: \"240px\",\r\n    //   selector: \"address\",\r\n    //   cell: (row) => row.address,\r\n    //   sortable: true\r\n    // },\r\n\r\n    {\r\n      name: \"Country\",\r\n      minWidth: \"100px\",\r\n      selector: \"country\",\r\n      cell: (row) => row.country,\r\n      sortable: false\r\n    },\r\n\r\n    {\r\n      name: \"State\",\r\n      minWidth: \"100px\",\r\n      selector: \"state\",\r\n      cell: (row) => row.state,\r\n      sortable: false\r\n    },\r\n\r\n    {\r\n      name: \"City\",\r\n      minWidth: \"100px\",\r\n      selector: \"city\",\r\n      cell: (row) => row.city,\r\n      sortable: false\r\n    },\r\n\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => {\r\n        return (\r\n          <div className=\"d-flex \">\r\n            <UncontrolledDropdown>\r\n              <Link to={`/complex/view/${row._id}`} style={{ color: \"black\" }}>\r\n                <Eye size={18} />\r\n              </Link>\r\n\r\n              <Link to={`/complex/edit/${row._id}`} style={{ color: \"black\" }}>\r\n                <Edit size={18} className=\"edit-btn\" />\r\n              </Link>\r\n\r\n              <Trash2\r\n                size={18}\r\n                className=\"delete-btn\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => OneDeleteRecord(row._id)}\r\n              />\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"app-user-list\">\r\n      <h3>\r\n        <Home style={{ marginRight: \"20px\" }} />\r\n        Complex List\r\n      </h3>\r\n      <Table columns={columns} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n"],"sourceRoot":""}