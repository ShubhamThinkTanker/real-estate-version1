{"version":3,"sources":["admin/AuthComponents/ChangePassword.js","@core/components/breadcrumbs/index.js","redux/actions/apislogic/userapis.js"],"names":["ChangePassword","useState","breadCrumbTitle","breadCrumbActive","sm","className","for","addonType","size","id","placeholder","Ripple","type","color","BreadCrumbs","props","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","tag","to","active","UserRegisterAction","registerdata","dispatch","a","USER_REGISTER_REQUEST","axios","post","configHeader","data","USER_REGISTER_SUCCESS","payload","toast","success","USER_REGISTER_RESET","USER_REGISTER_ERROR","response","errors","message","EditRegisterAction","updateid","userdata","USER_EDIT_REQUEST","put","USER_EDIT_SUCCESS","USER_EDIT_RESET","USER_EDIT_ERROR","UserDeleteAction","deleteid","USER_DELETE_REQUEST","delete","USER_DELETE_SUCCESS","USER_DELETE_RESET","UserListAction","USER_DELETE_ERROR","MultiDeleteAction","multiid","MULTI_DELETE_REQUEST","MULTI_DELETE_SUCCESS","MULTI_DELETE_RESET","setDeletedRow","MULTI_DELETE_ERROR","queryString","USER_LIST_REQUEST","get","USER_LIST_SUCCESS","USER_LIST_ERROR","UserGetAction","userid","USER_GET_REQUEST","USER_GET_SUCCESS","USER_GET_ERROR"],"mappings":"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","file":"static/js/35.0c449adb.chunk.js","sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport { Trash2 } from \"react-feather\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Lock, User, Share2 } from 'react-feather';\r\nimport {\r\n    Button,\r\n    Media,\r\n    Label,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardBody,\r\n    Input,\r\n    FormGroup,\r\n    Alert,\r\n    Form,\r\n    InputGroup,\r\n    InputGroupText,\r\n    InputGroupAddon,\r\n    CustomInput,\r\n    CardText,\r\n    Nav, NavItem, NavLink, TabContent, TabPane,\r\n} from \"reactstrap\";\r\n\r\nimport { userdatas } from \"../../localstorage/localdata\";\r\nimport { EditRegisterAction } from \"../../redux/actions/apislogic/userapis\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { UPDATE_PROFILE_RESET, USER_EDIT_RESET } from \"../../redux/Constants/userConstants\";\r\nimport BreadCrumbs from \"../../@core/components/breadcrumbs\";\r\nimport { Link } from \"react-router-dom\";\r\n// import BreadCrumbs from '../../../@core/components/breadcrumbs';\r\n\r\nconst ChangePassword = () => {\r\n    const [activeTab, setActiveTab] = useState('1')\r\n\r\n    // ** Function to toggle tabs\r\n    const toggle = tab => setActiveTab(tab)\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n\r\n                <BreadCrumbs\r\n                    breadCrumbTitle='Account Setting '\r\n                    breadCrumbActive='Account Setting'\r\n                />\r\n\r\n                {/* <Nav pills>\r\n                    <NavItem>\r\n                        <NavLink active={activeTab === '1'} onClick={() => toggle('1')} tag={Link} to='/profile'>\r\n                            <User size={14} />\r\n                            <span className='align-middle d-none d-sm-block'>Account</span>\r\n                        </NavLink>\r\n                    </NavItem>\r\n\r\n                    <NavItem>\r\n                        <NavLink active={activeTab === '2'} onClick={() => toggle('2')} tag={Link} to='/changepassword'>\r\n                            <Share2 size={14} />\r\n                            <span className='align-middle d-none d-sm-block'>Security</span>\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav> */}\r\n\r\n                \r\n            </div>\r\n\r\n            <Card>\r\n\r\n                <CardBody>\r\n\r\n                    <h3>Change Password</h3>\r\n                    <hr />\r\n\r\n                    <Form>\r\n                        <Row>\r\n                            <Col sm=\"6\">\r\n                                <FormGroup>\r\n                                    <Label\r\n                                        className='form-label'\r\n                                        for='login-password'>\r\n                                        Current Password\r\n                                    </Label>\r\n                                    <InputGroup\r\n                                        className='input-group-merge'\r\n                                    >\r\n                                        <InputGroupAddon addonType='prepend'>\r\n                                            <InputGroupText>\r\n                                                <Lock size={15} />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n\r\n                                            className='input-group-merge form-control'\r\n                                            id='login-password'\r\n                                            placeholder='Enter Current Password'\r\n                                        />\r\n                                        <InputGroupAddon\r\n                                            addonType='append'\r\n                                        >\r\n                                            <InputGroupText className='cursor-pointer'>\r\n\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                    </InputGroup>\r\n\r\n                                </FormGroup>\r\n                            </Col >\r\n\r\n                            <Col sm=\"6\">\r\n                                <FormGroup>\r\n                                    <Label\r\n                                        className='form-label'\r\n                                        for='login-password'>\r\n                                        New  Password\r\n                                    </Label>\r\n                                    <InputGroup\r\n                                        className='input-group-merge'\r\n                                    >\r\n                                        <InputGroupAddon addonType='prepend'>\r\n                                            <InputGroupText>\r\n                                                <Lock size={15} />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n\r\n                                            className='input-group-merge form-control'\r\n                                            id='login-password'\r\n                                            placeholder='Enter New Password'\r\n                                        />\r\n                                        <InputGroupAddon\r\n                                            addonType='append'\r\n                                        >\r\n                                            <InputGroupText className='cursor-pointer'>\r\n\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                    </InputGroup>\r\n\r\n                                </FormGroup>\r\n                            </Col >\r\n\r\n                            <Col sm=\"6\">\r\n                                <FormGroup>\r\n                                    <Label\r\n                                        className='form-label'\r\n                                        for='login-password'>\r\n                                        Retype New Password\r\n                                    </Label>\r\n                                    <InputGroup\r\n                                        className='input-group-merge'\r\n                                    >\r\n                                        <InputGroupAddon addonType='prepend'>\r\n                                            <InputGroupText>\r\n                                                <Lock size={15} />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n\r\n                                            className='input-group-merge form-control'\r\n                                            id='login-password'\r\n                                            placeholder='Enter Retype New Password'\r\n                                        />\r\n                                        <InputGroupAddon\r\n                                            addonType='append'\r\n                                        >\r\n                                            <InputGroupText className='cursor-pointer'>\r\n\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                    </InputGroup>\r\n\r\n                                </FormGroup>\r\n                            </Col >\r\n\r\n\r\n\r\n\r\n                            <p><b>Password requirements</b></p>\r\n\r\n                            <ul>\r\n                                <li>Minimum 8 characters long - the more, the better</li>\r\n                                <li>At least one lowercase character</li>\r\n                                <li> At least one number, symbol, or whitespace character</li>\r\n                            </ul>\r\n\r\n                            <Col className=\"mt-2\" sm=\"12\">\r\n                                <Button.Ripple type=\"submit\" className=\"mr-1\" color=\"primary\">\r\n                                    Save changes\r\n                                </Button.Ripple>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Form>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\nexport default ChangePassword;\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom';\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types';\r\nimport {\r\n\tGrid,\r\n\tCheckSquare,\r\n\tMessageSquare,\r\n\tMail,\r\n\tCalendar,\r\n} from 'react-feather';\r\nimport {\r\n\tBreadcrumb,\r\n\tBreadcrumbItem,\r\n\tUncontrolledButtonDropdown,\r\n\tDropdownMenu,\r\n\tDropdownItem,\r\n\tDropdownToggle,\r\n} from 'reactstrap';\r\n\r\nconst BreadCrumbs = (props) => {\r\n\t// ** Props\r\n\tconst {\r\n\t\tbreadCrumbTitle,\r\n\t\tbreadCrumbParent,\r\n\t\tbreadCrumbParent2,\r\n\t\tbreadCrumbParent3,\r\n\t\tbreadCrumbActive,\r\n\t} = props;\r\n\r\n\treturn (\r\n\t\t<div className='content-header row'>\r\n\t\t\t<div className='content-header-left col-md-9 col-12 mb-2'>\r\n\t\t\t\t<div className='row breadcrumbs-top'>\r\n\t\t\t\t\t<div className='col-12'>\r\n\t\t\t\t\t\t{breadCrumbTitle ? (\r\n\t\t\t\t\t\t\t<h2 className='content-header-title float-left mb-0'>\r\n\t\t\t\t\t\t\t\t{breadCrumbTitle}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n\t\t\t\t\t\t\t<Breadcrumb>\r\n\t\t\t\t\t\t\t\t<BreadcrumbItem tag='li'>\r\n\t\t\t\t\t\t\t\t\t<Link to='/'>Home</Link>\r\n\t\t\t\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t\t\t\t\t<BreadcrumbItem\r\n\t\t\t\t\t\t\t\t\ttag='li'\r\n\t\t\t\t\t\t\t\t\tclassName='text-primary'>\r\n\t\t\t\t\t\t\t\t\t{breadCrumbParent}\r\n\t\t\t\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t\t\t\t\t{breadCrumbParent2 ? (\r\n\t\t\t\t\t\t\t\t\t<BreadcrumbItem\r\n\t\t\t\t\t\t\t\t\t\ttag='li'\r\n\t\t\t\t\t\t\t\t\t\tclassName='text-primary'>\r\n\t\t\t\t\t\t\t\t\t\t{breadCrumbParent2}\r\n\t\t\t\t\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{breadCrumbParent3 ? (\r\n\t\t\t\t\t\t\t\t\t<BreadcrumbItem\r\n\t\t\t\t\t\t\t\t\t\ttag='li'\r\n\t\t\t\t\t\t\t\t\t\tclassName='text-primary'>\r\n\t\t\t\t\t\t\t\t\t\t{breadCrumbParent3}\r\n\t\t\t\t\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<BreadcrumbItem tag='li' active>\r\n\t\t\t\t\t\t\t\t\t{breadCrumbActive}\r\n\t\t\t\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t\t\t\t</Breadcrumb>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div> */}\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default BreadCrumbs;\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n\tbreadCrumbTitle: Proptypes.string.isRequired,\r\n\tbreadCrumbActive: Proptypes.string.isRequired,\r\n};\r\n","import axios from 'axios';\r\nimport { configHeader, userdatas } from '../../../localstorage/localdata';\r\nimport { toast } from 'react-toastify';\r\nimport '../../.././index.css';\r\nimport {\r\n\tMULTI_DELETE_ERROR,\r\n\tMULTI_DELETE_REQUEST,\r\n\tMULTI_DELETE_SUCCESS,\r\n\tUSER_DELETE_ERROR,\r\n\tUSER_DELETE_REQUEST,\r\n\tUSER_DELETE_RESET,\r\n\tUSER_DELETE_SUCCESS,\r\n\tUSER_EDIT_ERROR,\r\n\tUSER_EDIT_REQUEST,\r\n\tUSER_EDIT_SUCCESS,\r\n\tUSER_EDIT_RESET,\r\n\tUSER_GET_ERROR,\r\n\tUSER_GET_REQUEST,\r\n\tUSER_GET_SUCCESS,\r\n\tUSER_LIST_ERROR,\r\n\tUSER_LIST_REQUEST,\r\n\tUSER_LIST_SUCCESS,\r\n\tUSER_REGISTER_ERROR,\r\n\tUSER_REGISTER_REQUEST,\r\n\tUSER_REGISTER_RESET,\r\n\tUSER_REGISTER_SUCCESS,\r\n\tMULTI_DELETE_RESET,\r\n} from '../../Constants/userConstants';\r\n\r\nexport const UserRegisterAction = (registerdata) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t`/api/user_register/`,\r\n\t\t\tregisterdata,\r\n\t\t\tconfigHeader\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\r\n\t\tif (data) {\r\n\t\t\ttoast.success('User Created Successfully');\r\n\t\t}\r\n\t\tdispatch({ type: USER_REGISTER_RESET });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.errors\r\n\t\t\t\t\t? error.response.data.errors\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const EditRegisterAction = (updateid, userdata) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_EDIT_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst { data } = await axios.put(`/api/update/${updateid}`, userdata, {\r\n\t\t\tconfigHeader,\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_EDIT_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t\tif (data) {\r\n\t\t\ttoast.success('User Updated Successfully');\r\n\t\t}\r\n\t\tdispatch({ type: USER_EDIT_RESET });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_EDIT_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.errors\r\n\t\t\t\t\t? error.response.data.errors\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const UserDeleteAction = (deleteid) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DELETE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst { data } = await axios.delete(\r\n\t\t\t`/api/delete/${deleteid}`,\r\n\t\t\tconfigHeader\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DELETE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t\tif (data) {\r\n\t\t\ttoast.success('User Deleted Successfully');\r\n\t\t}\r\n\t\tdispatch({ type: USER_DELETE_RESET });\r\n\t\tdispatch(UserListAction());\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DELETE_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.errors\r\n\t\t\t\t\t? error.response.data.errors\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const MultiDeleteAction = (multiid) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: MULTI_DELETE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t`/api/delete_many/`,\r\n\t\t\tmultiid,\r\n\t\t\tconfigHeader\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: MULTI_DELETE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t\tif (data) {\r\n\t\t\ttoast.success('User Deleted Successfully');\r\n\t\t}\r\n\t\tdispatch({ type: MULTI_DELETE_RESET });\r\n\t\tdispatch(UserListAction());\r\n\t\tsetDeletedRow([]);\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: MULTI_DELETE_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.errors\r\n\t\t\t\t\t? error.response.data.errors\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const UserListAction = (queryString) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst { data } = await axios.get(\r\n\t\t\t'/api/get_all_user?' + queryString,\r\n\t\t\tconfigHeader\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.errors\r\n\t\t\t\t\t? error.response.data.errors\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const UserGetAction = (userid) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_GET_REQUEST,\r\n\t\t});\r\n\t\tconst { data } = await axios.get(\r\n\t\t\t`/api/get_data/${userid}`,\r\n\t\t\tconfigHeader\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_GET_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_GET_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.errors\r\n\t\t\t\t\t? error.response.data.errors\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n"],"sourceRoot":""}