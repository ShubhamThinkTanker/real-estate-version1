{"version":3,"sources":["admin/AuthComponents/Profile.js","redux/actions/apislogic/userapis.js"],"names":["Profile","dispatch","useDispatch","useState","name","mobile_no","profile_image","gender","_id","user","setUser","sendimage","setimage","email","profileimage","setprofileimg","onInputChange","e","target","value","EditDatMessage","useSelector","state","EditUSerData","UserEditData","error","console","log","useEffect","userdatas","User_Details","toast","className","type","UPDATE_PROFILE_RESET","USER_EDIT_RESET","onSubmit","preventDefault","formData","FormData","append","undefined","EditRegisterAction","Token","for","left","src","height","width","body","Ripple","tag","Label","size","color","onChange","files","reader","FileReader","onload","result","readAsDataURL","hidden","accept","outline","onClick","sm","disabled","UserRegisterAction","registerdata","a","USER_REGISTER_REQUEST","axios","post","configHeader","data","USER_REGISTER_SUCCESS","payload","USER_REGISTER_ERROR","response","errors","message","updateid","userdata","USER_EDIT_REQUEST","put","USER_EDIT_SUCCESS","USER_EDIT_ERROR","UserDeleteAction","deleteid","USER_DELETE_REQUEST","delete","USER_DELETE_SUCCESS","USER_DELETE_ERROR","MultiDeleteAction","multiid","MULTI_DELETE_REQUEST","MULTI_DELETE_SUCCESS","MULTI_DELETE_ERROR","UserListAction","queryString","USER_LIST_REQUEST","get","USER_LIST_SUCCESS","USER_LIST_ERROR","UserGetAction","userid","USER_GET_REQUEST","USER_GET_SUCCESS","USER_GET_ERROR"],"mappings":"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","file":"static/js/37.c5689884.chunk.js","sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport { Trash2 } from \"react-feather\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Media,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  FormGroup,\r\n  Alert,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport { userdatas } from \"../../localstorage/localdata\";\r\nimport { EditRegisterAction } from \"../../redux/actions/apislogic/userapis\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { UPDATE_PROFILE_RESET, USER_EDIT_RESET } from \"../../redux/Constants/userConstants\";\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    mobile_no: \"\",\r\n    profile_image: \"\",\r\n    gender: \"\",\r\n    _id: \"\",\r\n  });\r\n  const [sendimage, setimage] = useState();\r\n  const { name, mobile_no, email, profile_image, gender, _id } = user;\r\n\r\n  const [profileimage, setprofileimg] = useState();\r\n\r\n  const onInputChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setimage(e.target.files[0]);\r\n    const reader = new FileReader(),\r\n      files = e.target.files;\r\n    reader.onload = function () {\r\n      setprofileimg(reader.result);\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"mobile_no\", mobile_no);\r\n    formData.append(\"gender\", gender);\r\n    sendimage != undefined ? formData.append(\"profile_image\", sendimage) : null;\r\n    dispatch(EditRegisterAction(_id, formData,userdatas.Token));\r\n  };\r\n\r\n  const EditDatMessage = useSelector((state) => state.EditUSerData);\r\n  const { error: errorUserEditData, UserEditData } = EditDatMessage;\r\n  console.log(UserEditData, \"SET NEW\");\r\n  useEffect(() => {\r\n    setUser(userdatas.User_Details);\r\n    if (UserEditData) {\r\n      toast.error(\"Profile updated successfully!\", {\r\n        className: \"toast-success-btn\",\r\n      });\r\n      dispatch({ type: UPDATE_PROFILE_RESET });\r\n      dispatch({ type: USER_EDIT_RESET });\r\n      // localStorage.setItem(\"userData\")\r\n    }\r\n  }, [UserEditData]);\r\n\r\n  const renderimagefun = () => {\r\n    if (profileimage != null) {\r\n      return (\r\n        <img\r\n          className=\"user-avatar rounded mr-2 my-25 cursor-pointer\"\r\n          src={profileimage}\r\n          height=\"90\"\r\n          width=\"90\"\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <img\r\n          className=\"user-avatar rounded mr-2 my-25 cursor-pointer\"\r\n          src={\r\n            user.profile_image === undefined\r\n              ? \"https://bootdey.com/img/Content/avatar/avatar7.png\"\r\n              : user.profile_image\r\n          }\r\n          height=\"90\"\r\n          width=\"90\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Form className=\"mt-2\" onSubmit={(e) => onSubmit(e)}>\r\n        <Label for=\"username\">Profile Image</Label>\r\n        <Media>\r\n          <Media className=\"mr-25\" left>\r\n            {renderimagefun()}\r\n          </Media>\r\n\r\n          <Media className=\"mt-75 ml-1\" body>\r\n            <Button.Ripple\r\n              tag={Label}\r\n              className=\"mr-75\"\r\n              size=\"sm\"\r\n              color=\"primary\"\r\n            >\r\n              Upload\r\n              <Input type=\"file\" onChange={onChange} hidden accept=\"image/*\" />\r\n            </Button.Ripple>\r\n            <Button.Ripple\r\n              tag={Label}\r\n              className=\"mr-75\"\r\n              size=\"sm\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => setprofileimg(null)}\r\n            >\r\n              Remove\r\n            </Button.Ripple>\r\n          </Media>\r\n        </Media>\r\n\r\n        <Row>\r\n          <Col sm=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"username\">Name</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={(e) => onInputChange(e)}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col sm=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"name\">Email</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={email}\r\n                disabled={true}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n\r\n          <Col sm=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"mobile_no\">Mobile No</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                name=\"mobile_no\"\r\n                value={mobile_no}\r\n                onChange={(e) => onInputChange(e)}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n\r\n          <Col sm=\"6\"></Col>\r\n          <Col className=\"mt-2\" sm=\"12\">\r\n            <Button.Ripple type=\"submit\" className=\"mr-1\" color=\"primary\">\r\n              Save changes\r\n            </Button.Ripple>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Profile;\r\n","import axios from \"axios\";\r\nimport { configHeader, userdatas } from \"../../../localstorage/localdata\";\r\n\r\nimport {\r\n  MULTI_DELETE_ERROR,\r\n  MULTI_DELETE_REQUEST,\r\n  MULTI_DELETE_SUCCESS,\r\n  USER_DELETE_ERROR,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_RESET,\r\n  USER_DELETE_SUCCESS,\r\n  USER_EDIT_ERROR,\r\n  USER_EDIT_REQUEST,\r\n  USER_EDIT_SUCCESS,\r\n  USER_GET_ERROR,\r\n  USER_GET_REQUEST,\r\n  USER_GET_SUCCESS,\r\n  USER_LIST_ERROR,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_REGISTER_ERROR,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_RESET,\r\n  USER_REGISTER_SUCCESS\r\n} from \"../../Constants/userConstants\";\r\n\r\nexport const UserRegisterAction = (registerdata) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST\r\n    });\r\n\r\n    const { data } = await axios.post(\r\n      `/api/user_register/`,\r\n      registerdata,\r\n      configHeader\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_ERROR,\r\n      payload:\r\n        error.response && error.response.data.errors\r\n          ? error.response.data.errors\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const EditRegisterAction = (updateid, userdata) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_EDIT_REQUEST\r\n    });\r\n    \r\n    const { data } = await axios.put(`/api/update/${updateid}`, userdata, {\r\n      configHeader\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_EDIT_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_EDIT_ERROR,\r\n      payload:\r\n        error.response && error.response.data.errors\r\n          ? error.response.data.errors\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const UserDeleteAction = (deleteid) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST\r\n    });\r\n\r\n    const { data } = await axios.delete(\r\n      `/api/delete/${deleteid}`,\r\n      configHeader\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_ERROR,\r\n      payload:\r\n        error.response && error.response.data.errors\r\n          ? error.response.data.errors\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const MultiDeleteAction = (multiid) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: MULTI_DELETE_REQUEST\r\n    });\r\n\r\n    const { data } = await axios.post(\r\n      `/api/delete_many/`,\r\n      multiid,\r\n      configHeader\r\n    );\r\n\r\n    dispatch({\r\n      type: MULTI_DELETE_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MULTI_DELETE_ERROR,\r\n      payload:\r\n        error.response && error.response.data.errors\r\n          ? error.response.data.errors\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const UserListAction = (queryString) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST\r\n    });\r\n\r\n    const { data } = await axios.get(\r\n      \"/api/get_all_user?\" + queryString,\r\n      configHeader\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_ERROR,\r\n      payload:\r\n        error.response && error.response.data.errors\r\n          ? error.response.data.errors\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const UserGetAction = (userid) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_GET_REQUEST\r\n    });\r\n    const { data } = await axios.get(`/api/get_data/${userid}`, configHeader);\r\n\r\n    dispatch({\r\n      type: USER_GET_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_GET_ERROR,\r\n      payload:\r\n        error.response && error.response.data.errors\r\n          ? error.response.data.errors\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n"],"sourceRoot":""}