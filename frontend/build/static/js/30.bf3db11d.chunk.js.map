{"version":3,"sources":["admin/AuthComponents/Profile.js","redux/actions/apislogic/userapis.js"],"names":["Profile","dispatch","useDispatch","useState","name","mobile_no","profile_image","gender","_id","user","setUser","sendimage","setimage","email","profileimage","setprofileimg","onInputChange","e","target","value","EditDatMessage","useSelector","state","EditUSerData","UserEditData","error","useEffect","userdatas","User_Details","toast","className","type","UPDATE_PROFILE_RESET","USER_EDIT_RESET","onSubmit","preventDefault","formData","FormData","append","undefined","EditRegisterAction","Token","for","left","src","height","width","body","Ripple","tag","Label","size","color","onChange","files","reader","FileReader","onload","result","readAsDataURL","hidden","accept","outline","onClick","sm","disabled","UserRegisterAction","registerdata","a","USER_REGISTER_REQUEST","axios","post","configHeader","data","USER_REGISTER_SUCCESS","payload","success","USER_REGISTER_RESET","USER_REGISTER_ERROR","response","errors","message","updateid","userdata","USER_EDIT_REQUEST","put","USER_EDIT_SUCCESS","USER_EDIT_ERROR","UserDeleteAction","deleteid","USER_DELETE_REQUEST","delete","USER_DELETE_SUCCESS","USER_DELETE_RESET","UserListAction","USER_DELETE_ERROR","MultiDeleteAction","multiid","MULTI_DELETE_REQUEST","MULTI_DELETE_SUCCESS","MULTI_DELETE_RESET","setDeletedRow","MULTI_DELETE_ERROR","queryString","USER_LIST_REQUEST","get","USER_LIST_SUCCESS","USER_LIST_ERROR","UserGetAction","userid","USER_GET_REQUEST","USER_GET_SUCCESS","USER_GET_ERROR"],"mappings":"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","file":"static/js/30.bf3db11d.chunk.js","sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport { Trash2 } from \"react-feather\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Media,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  FormGroup,\r\n  Alert,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport { userdatas } from \"../../localstorage/localdata\";\r\nimport { EditRegisterAction } from \"../../redux/actions/apislogic/userapis\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { UPDATE_PROFILE_RESET, USER_EDIT_RESET } from \"../../redux/Constants/userConstants\";\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    mobile_no: \"\",\r\n    profile_image: \"\",\r\n    gender: \"\",\r\n    _id: \"\",\r\n  });\r\n  const [sendimage, setimage] = useState();\r\n  const { name, mobile_no, email, profile_image, gender, _id } = user;\r\n\r\n  const [profileimage, setprofileimg] = useState();\r\n\r\n  const onInputChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setimage(e.target.files[0]);\r\n    const reader = new FileReader(),\r\n      files = e.target.files;\r\n    reader.onload = function () {\r\n      setprofileimg(reader.result);\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"mobile_no\", mobile_no);\r\n    formData.append(\"gender\", gender);\r\n    sendimage != undefined ? formData.append(\"profile_image\", sendimage) : null;\r\n    dispatch(EditRegisterAction(_id, formData,userdatas.Token));\r\n  };\r\n\r\n  const EditDatMessage = useSelector((state) => state.EditUSerData);\r\n  const { error: errorUserEditData, UserEditData } = EditDatMessage;\r\n  // console.log(UserEditData, \"SET NEW\");\r\n  useEffect(() => {\r\n    setUser(userdatas.User_Details);\r\n    if (UserEditData) {\r\n      toast.error(\"Profile updated successfully!\", {\r\n        className: \"toast-success-btn\",\r\n      });\r\n      dispatch({ type: UPDATE_PROFILE_RESET });\r\n      dispatch({ type: USER_EDIT_RESET });\r\n      // localStorage.setItem(\"userData\")\r\n    }\r\n  }, [UserEditData]);\r\n\r\n  const renderimagefun = () => {\r\n    if (profileimage != null) {\r\n      return (\r\n        <img\r\n          className=\"user-avatar rounded mr-2 my-25 cursor-pointer\"\r\n          src={profileimage}\r\n          height=\"90\"\r\n          width=\"90\"\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <img\r\n          className=\"user-avatar rounded mr-2 my-25 cursor-pointer\"\r\n          src={\r\n            user.profile_image === undefined\r\n              ? \"https://bootdey.com/img/Content/avatar/avatar7.png\"\r\n              : user.profile_image\r\n          }\r\n          height=\"90\"\r\n          width=\"90\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Form className=\"mt-2\" onSubmit={(e) => onSubmit(e)}>\r\n        <Label for=\"username\">Profile Image</Label>\r\n        <Media>\r\n          <Media className=\"mr-25\" left>\r\n            {renderimagefun()}\r\n          </Media>\r\n\r\n          <Media className=\"mt-75 ml-1\" body>\r\n            <Button.Ripple\r\n              tag={Label}\r\n              className=\"mr-75\"\r\n              size=\"sm\"\r\n              color=\"primary\"\r\n            >\r\n              Upload\r\n              <Input type=\"file\" onChange={onChange} hidden accept=\"image/*\" />\r\n            </Button.Ripple>\r\n            <Button.Ripple\r\n              tag={Label}\r\n              className=\"mr-75\"\r\n              size=\"sm\"\r\n              color=\"secondary\"\r\n              outline\r\n              onClick={() => setprofileimg(null)}\r\n            >\r\n              Remove\r\n            </Button.Ripple>\r\n          </Media>\r\n        </Media>\r\n\r\n        <Row>\r\n          <Col sm=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"username\">Name</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={(e) => onInputChange(e)}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col sm=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"name\">Email</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={email}\r\n                disabled={true}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n\r\n          <Col sm=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"mobile_no\">Mobile No</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                name=\"mobile_no\"\r\n                value={mobile_no}\r\n                onChange={(e) => onInputChange(e)}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n\r\n          <Col sm=\"6\"></Col>\r\n          <Col className=\"mt-2\" sm=\"12\">\r\n            <Button.Ripple type=\"submit\" className=\"mr-1\" color=\"primary\">\r\n              Save changes\r\n            </Button.Ripple>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Profile;\r\n","import axios from 'axios';\r\nimport { configHeader, userdatas } from '../../../localstorage/localdata';\r\nimport { toast } from 'react-toastify';\r\nimport '../../.././index.css';\r\nimport {\r\n\tMULTI_DELETE_ERROR,\r\n\tMULTI_DELETE_REQUEST,\r\n\tMULTI_DELETE_SUCCESS,\r\n\tUSER_DELETE_ERROR,\r\n\tUSER_DELETE_REQUEST,\r\n\tUSER_DELETE_RESET,\r\n\tUSER_DELETE_SUCCESS,\r\n\tUSER_EDIT_ERROR,\r\n\tUSER_EDIT_REQUEST,\r\n\tUSER_EDIT_SUCCESS,\r\n\tUSER_EDIT_RESET,\r\n\tUSER_GET_ERROR,\r\n\tUSER_GET_REQUEST,\r\n\tUSER_GET_SUCCESS,\r\n\tUSER_LIST_ERROR,\r\n\tUSER_LIST_REQUEST,\r\n\tUSER_LIST_SUCCESS,\r\n\tUSER_REGISTER_ERROR,\r\n\tUSER_REGISTER_REQUEST,\r\n\tUSER_REGISTER_RESET,\r\n\tUSER_REGISTER_SUCCESS,\r\n\tMULTI_DELETE_RESET,\r\n} from '../../Constants/userConstants';\r\n\r\nexport const UserRegisterAction = (registerdata) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t`/api/user_register/`,\r\n\t\t\tregisterdata,\r\n\t\t\tconfigHeader\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\r\n\t\tif (data) {\r\n\t\t\ttoast.success('User Created Successfully');\r\n\t\t}\r\n\t\tdispatch({ type: USER_REGISTER_RESET });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.errors\r\n\t\t\t\t\t? error.response.data.errors\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const EditRegisterAction = (updateid, userdata) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_EDIT_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst { data } = await axios.put(`/api/update/${updateid}`, userdata, {\r\n\t\t\tconfigHeader,\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_EDIT_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t\tif (data) {\r\n\t\t\ttoast.success('User Updated Successfully');\r\n\t\t}\r\n\t\tdispatch({ type: USER_EDIT_RESET });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_EDIT_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.errors\r\n\t\t\t\t\t? error.response.data.errors\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const UserDeleteAction = (deleteid) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DELETE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst { data } = await axios.delete(\r\n\t\t\t`/api/delete/${deleteid}`,\r\n\t\t\tconfigHeader\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DELETE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t\tif (data) {\r\n\t\t\ttoast.error('User Deleted Successfully');\r\n\t\t}\r\n\t\tdispatch({ type: USER_DELETE_RESET });\r\n\t\tdispatch(UserListAction());\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DELETE_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.errors\r\n\t\t\t\t\t? error.response.data.errors\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const MultiDeleteAction = (multiid) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: MULTI_DELETE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t`/api/delete_many/`,\r\n\t\t\tmultiid,\r\n\t\t\tconfigHeader\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: MULTI_DELETE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t\tif (data) {\r\n\t\t\ttoast.error('User Deleted Successfully');\r\n\t\t}\r\n\t\tdispatch({ type: MULTI_DELETE_RESET });\r\n\t\tdispatch(UserListAction());\r\n\t\tsetDeletedRow([]);\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: MULTI_DELETE_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.errors\r\n\t\t\t\t\t? error.response.data.errors\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const UserListAction = (queryString) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst { data } = await axios.get(\r\n\t\t\t'/api/get_all_user?' + queryString,\r\n\t\t\tconfigHeader\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.errors\r\n\t\t\t\t\t? error.response.data.errors\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const UserGetAction = (userid) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_GET_REQUEST,\r\n\t\t});\r\n\t\tconst { data } = await axios.get(\r\n\t\t\t`/api/get_data/${userid}`,\r\n\t\t\tconfigHeader\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_GET_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_GET_ERROR,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.errors\r\n\t\t\t\t\t? error.response.data.errors\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n"],"sourceRoot":""}