{"version":3,"sources":["@core/components/avatar/index.js","@core/auth/jwt/jwtDefaultConfig.js","@core/auth/jwt/jwtService.js","auth/jwt/useJwt.js","@core/auth/jwt/useJwt.js","utility/context/Can.js","redux/actions/layout/index.js","@core/layouts/components/layout-wrapper/index.js","router/routes/index.js","utility/hooks/useSkin.js","@core/layouts/BlankLayout.js","@core/components/customizer/index.js","@core/layouts/components/footer/index.js","redux/actions/auth/index.js","assets/images/portrait/small/avatar-s-11.jpg","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","navigation/vertical/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","layouts/VerticalLayout.js","navigation/horizontal/index.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","layouts/HorizontalLayout.js","LogoutTime/Logout.js","router/Router.js","utility/hooks/useLayout.js","utility/hooks/useRouterTransition.js","App.js","localstorage/localdata.js","utility/Utils.js"],"names":["Avatar","forwardRef","props","ref","color","className","imgClassName","initials","size","badgeUp","content","icon","badgeColor","badgeText","img","imgHeight","imgWidth","status","Tag","tag","contentStyles","rest","classnames","undefined","style","str","results","split","forEach","e","push","join","getInitials","pill","src","alt","height","width","defaultProps","loginEndpoint","registerEndpoint","refreshEndpoint","logoutEndpoint","tokenType","storageTokenKeyName","storageRefreshTokenKeyName","JwtService","jwtOverrideConfig","jwtConfig","jwtDefaultConfig","isAlreadyFetchingAccessToken","subscribers","this","axios","interceptors","request","use","config","accessToken","getToken","headers","Authorization","error","Promise","reject","response","originalRequest","refreshToken","then","r","setToken","data","setRefreshToken","onAccessTokenFetched","resolve","addSubscriber","filter","callback","localStorage","getItem","value","setItem","args","post","getRefreshToken","jwt","AbilityContext","createContext","createContextualCan","Consumer","handleContentWidth","dispatch","type","handleMenuCollapsed","handleMenuHidden","LayoutWrapper","layout","children","appLayout","wrapperClass","transition","routeMeta","useDispatch","store","useSelector","state","navbarStore","navbar","contentWidth","Fragment","useEffect","menuCollapsed","menuHidden","query","length","DefaultRoute","Routes","path","component","lazy","meta","authRoute","useSkin","useState","item","window","JSON","parse","themeConfig","skin","console","log","setSkin","element","document","body","classList","remove","add","dark","bordered","valueToStore","Function","stringify","BlankLayout","isMounted","setIsMounted","Customizer","isRtl","setIsRtl","setLayout","navbarType","setNavbarType","footerType","setFooterType","navbarColor","setNavbarColor","isHidden","setIsHidden","setContentWidth","setMenuCollapsed","setTransition","openCustomizer","setOpenCustomizer","handleToggle","preventDefault","transitionOptions","label","transitionValue","find","i","open","href","onClick","FormGroup","skinsArr","name","checked","map","radio","index","marginCondition","CustomInput","id","onChange","renderSkinsRadio","theme","selectThemeColors","classNamePrefix","defaultValue","options","isClearable","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","Footer","Date","getFullYear","target","rel","useJwt","UserDropdown","userAvatar","userdatas","User_Details","profile_image","UncontrolledDropdown","DropdownToggle","charAt","toUpperCase","slice","DropdownMenu","right","to","DropdownItem","Link","removeItem","NavbarUser","setMenuVisibility","ThemeToggler","NavItem","NavLink","ThemeNavbar","rolecheck","role","title","navLink","VerticalMenuHeader","setGroupOpen","menuHover","Toggler","app","appLogoImage","appName","isNavLinkActive","link","currentURL","routerProps","isNavGroupActive","some","child","search","navigation","result","getAllParents","obj","match","res","recurse","current","key","VerticalNavMenuLink","setGroupActive","groupActive","activeItem","setActiveItem","groupOpen","toggleActiveGroup","parentItem","currentActiveItem","LinkTag","externalLink","location","useLocation","pathname","matchPath","exact","strict","arr","parents","searchParents","disabled","active","newTab","isActive","url","resetActiveGroup","badge","Badge","VerticalNavMenuGroup","allParents","activeArr","includes","splice","indexOf","openArr","val","onCollapseClick","pop","toggleOpenGroup","Collapse","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","header","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","Sidebar","menu","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","wheelPropagation","onScrollY","container","scrollTop","contains","scrollMenu","useRTL","isRTL","getElementsByTagName","setAttribute","handleRTL","useNavbarType","useFooterType","footer","useNavbarColor","backgroundColor","VerticalLayout","menuVisibility","innerWidth","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","addEventListener","footerClasses","static","sticky","hidden","bgColorCondition","floating","Navbar","expand","light","show","customizer","showUnder","bottom","Button","HorizontalNavMenuLink","setOpenDropdown","isChild","HorizontalNavMenuGroup","submenu","openDropdown","menuModifiers","setMaxHeight","enabled","fn","stylesObj","pageHeight","innerHeight","ddTop","instance","reference","getBoundingClientRect","top","popper","maxHeight","overflowY","ddRef","left","closest","styles","Dropdown","toggle","modifiers","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","pageYOffset","navbarClasses","Logout","decoded","jwt_decode","Token","currentTime","now","exp","clear","Router","lastLayout","setLastLayout","handleLayout","useLayout","routerTransition","useRouterTransition","DefaultLayout","useContext","Layouts","NotAuthorized","Error","FinalRoute","route","action","resource","isUserLoggedIn","publicRoute","basename","process","render","Object","keys","LayoutTag","LayoutRoutes","LayoutPaths","LayoutRoutesAndPaths","assign","fallback","App","configHeader","colors","primary25","primary","neutral10","neutral20","neutral30"],"mappings":"8XAQMA,EAASC,sBAAW,SAACC,EAAOC,GAAS,IAAD,IAGtCC,EAiBEF,EAjBFE,MACAC,EAgBEH,EAhBFG,UACAC,EAeEJ,EAfFI,aACAC,EAcEL,EAdFK,SACAC,EAaEN,EAbFM,KACAC,EAYEP,EAZFO,QACAC,EAWER,EAXFQ,QACAC,EAUET,EAVFS,KACAC,EASEV,EATFU,WACAC,EAQEX,EARFW,UACAC,EAOEZ,EAPFY,IACAC,EAMEb,EANFa,UACAC,EAKEd,EALFc,SACAC,EAIEf,EAJFe,OACKC,EAGHhB,EAHFiB,IACAC,EAEElB,EAFFkB,cACGC,EAjBL,YAkBInB,EAlBJ,GA8BA,OACE,eAACgB,EAAD,yBACEb,UAAWiB,IAAW,UAAD,mBAClBjB,EAAYA,GADM,2BAEZD,GAAUA,GAFE,+BAGRI,GAASA,GAHD,IAKrBL,IAAKA,GACDkB,GAPN,eASW,IAARP,QAAyBS,IAART,EAChB,uBACET,UAAWiB,IAAW,iBAAkB,CACtC,oBAAqBb,IAEvBe,MAAOJ,EAJT,UAMGb,EA1BW,SAAAkB,GAClB,IAAMC,EAAU,GAKhB,OAJkBD,EAAIE,MAAM,KAClBC,SAAQ,SAAAC,GAChBH,EAAQI,KAAKD,EAAE,OAEVH,EAAQK,KAAK,IAoBFC,CAAYtB,GAAWA,EAElCC,GAAc,KACdF,EACC,cAAC,IAAD,CAAOL,MAAOQ,GAA0B,UAAWP,UAAU,oBAAoB4B,MAAI,EAArF,SACGpB,GAAwB,MAEzB,QAGN,qBACER,UAAWiB,IAAW,eACnBhB,EAAeA,IAElB4B,IAAKpB,EACLqB,IAAI,YACJC,OAAQrB,IAAcP,EAAOO,EAAY,GACzCsB,MAAOrB,IAAaR,EAAOQ,EAAW,KAGzCC,EACC,sBACEZ,UAAWiB,KAAU,2CACDL,GAAWA,GADV,sCAEDT,GAASA,GAFR,MAKrB,YAKKR,MA+DfA,EAAOsC,aAAe,CACpBnB,IAAK,Q,+ECxJQ,GACboB,cAAe,aACfC,iBAAkB,gBAClBC,gBAAiB,qBACjBC,eAAgB,cAIhBC,UAAW,SAGXC,oBAAqB,cACrBC,2BAA4B,gBCVTC,E,WAUnB,WAAYC,GAAoB,IAAD,gCAR/BC,UAQ+B,eARdC,GAQc,KAL/BC,8BAA+B,EAKA,KAF/BC,YAAc,GAGZC,KAAKJ,UAAL,2BAAsBI,KAAKJ,WAAcD,GAGzCM,IAAMC,aAAaC,QAAQC,KACzB,SAAAC,GAEE,IAAMC,EAAc,EAAKC,WAOzB,OAJID,IAEFD,EAAOG,QAAQC,cAAf,UAAkC,EAAKb,UAAUL,UAAjD,YAA8De,IAEzDD,KAET,SAAAK,GAAK,OAAIC,QAAQC,OAAOF,MAI1BT,IAAMC,aAAaW,SAAST,KAC1B,SAAAS,GAAQ,OAAIA,KACZ,SAAAH,GAEE,IAAQL,EAAqBK,EAArBL,OAAQQ,EAAaH,EAAbG,SACVC,EAAkBT,EAGxB,OAAIQ,GAAgC,MAApBA,EAAShD,QAClB,EAAKiC,+BACR,EAAKA,8BAA+B,EACpC,EAAKiB,eAAeC,MAAK,SAAAC,GACvB,EAAKnB,8BAA+B,EAGpC,EAAKoB,SAASD,EAAEE,KAAKb,aACrB,EAAKc,gBAAgBH,EAAEE,KAAKJ,cAE5B,EAAKM,qBAAqBJ,EAAEE,KAAKb,iBAGR,IAAIK,SAAQ,SAAAW,GACvC,EAAKC,eAAc,SAAAjB,GAIjBQ,EAAgBN,QAAQC,cAAxB,UAA2C,EAAKb,UAAUL,UAA1D,YAAuEe,GACvEgB,EAAQ,EAAKrB,MAAMa,WAKlBH,QAAQC,OAAOF,M,wDAK5B,SAAqBJ,GACnBN,KAAKD,YAAcC,KAAKD,YAAYyB,QAAO,SAAAC,GAAQ,OAAIA,EAASnB,Q,2BAGlE,SAAcmB,GACZzB,KAAKD,YAAYrB,KAAK+C,K,sBAGxB,WACE,OAAOC,aAAaC,QAAQ3B,KAAKJ,UAAUJ,uB,6BAG7C,WACE,OAAOkC,aAAaC,QAAQ3B,KAAKJ,UAAUH,8B,sBAG7C,SAASmC,GACPF,aAAaG,QAAQ7B,KAAKJ,UAAUJ,oBAAqBoC,K,6BAG3D,SAAgBA,GACdF,aAAaG,QAAQ7B,KAAKJ,UAAUH,2BAA4BmC,K,mBAGlE,WAAgB,IAAD,uBAANE,EAAM,yBAANA,EAAM,gBACb,OAAO7B,IAAM8B,KAAN,MAAA9B,IAAK,CAAMD,KAAKJ,UAAUT,eAArB,OAAuC2C,M,sBAGrD,WAAmB,IAAD,uBAANA,EAAM,yBAANA,EAAM,gBAChB,OAAO7B,IAAM8B,KAAN,MAAA9B,IAAK,CAAMD,KAAKJ,UAAUR,kBAArB,OAA0C0C,M,0BAGxD,WACE,OAAO7B,IAAM8B,KAAK/B,KAAKJ,UAAUP,gBAAiB,CAChD0B,aAAcf,KAAKgC,wB,KCrGzB,IAAQC,ECIC,CACLA,IAHU,IAAIvC,EDFK,KAAfuC,IAEOA,O,0KEEFC,EAAiBC,0B,GAGXC,YAAoBF,EAAeG,U,+BCTzCC,EAAqB,SAAAV,GAAK,OAAI,SAAAW,GAAQ,OAAIA,EAAS,CAAEC,KAAM,uBAAwBZ,YAGnFa,EAAsB,SAAAb,GAAK,OAAI,SAAAW,GAAQ,OAAIA,EAAS,CAAEC,KAAM,wBAAyBZ,YAGrFc,EAAmB,SAAAd,GAAK,OAAI,SAAAW,GAAQ,OAAIA,EAAS,CAAEC,KAAM,qBAAsBZ,Y,gBCiF7Ee,EA3EO,SAAA7F,GAAU,IAAD,EAErB8F,EAAqE9F,EAArE8F,OAAQC,EAA6D/F,EAA7D+F,SAAUC,EAAmDhG,EAAnDgG,UAAWC,EAAwCjG,EAAxCiG,aAAcC,EAA0BlG,EAA1BkG,WAAYC,EAAcnG,EAAdmG,UAGzDV,EAAWW,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,KAC7BC,EAAcH,EAAMI,OACpBC,EAAeL,EAAMP,OAAOY,aAG5B1F,EAAiB,qBAAX8E,GAAkCE,EAAoBW,WAAR,MAiC1D,OAfAC,qBAAU,WAYR,OAXIT,IACEA,EAAUO,cACZjB,EAASD,EAAmBW,EAAUO,eAEpCP,EAAUU,eACZpB,EAASE,EAAoBQ,EAAUU,gBAErCV,EAAUW,YACZrB,EAASG,EAAiBO,EAAUW,cAGjC,WA1BHX,IACEA,EAAUO,cACZjB,EAASD,EAAmB,SAE1BW,EAAUU,eACZpB,EAASE,GAAqBQ,EAAUU,gBAEtCV,EAAUW,YACZrB,EAASG,GAAkBO,EAAUW,iBAmBxC,IAGD,sBACE3G,UAAWiB,IAAW,uCAAD,mBAClB6E,EAAeA,GADG,cAEnB,eAAgBO,EAAYO,MAAMC,QAFf,IADvB,UAME,qBAAK7G,UAAU,oBACf,qBAAKA,UAAU,yBACf,qBACEA,UAAWiB,IAAW,aACpB,mBAAoB4E,EACpB,uBAAwBA,EACxB,gBAAkC,UAAjBU,GAHE,qCAIYR,GAA8B,SAAfA,GAAyBA,EAAWc,SALtF,SAQE,cAAChG,EAAD,2BAEkB,qBAAX8E,GAAkCE,EAEnC,GADA,CAAE7F,UAAWiB,IAAW,CAAE,gBAAiB4E,MAHjD,aAOGD,W,gBCxELkB,G,OAAe,cAEfC,EAAS,CACd,CACCC,KAAM,aACNC,UAAWC,gBAAK,kBAAM,mCAEvB,CACCF,KAAM,iBACNC,UAAWC,gBAAK,kBAAM,8EAEvB,CACCF,KAAM,gBACNC,UAAWC,gBAAK,kBACf,gEAGF,CACCF,KAAM,qBACNC,UAAWC,gBAAK,kBACf,gEAGF,CACCF,KAAM,qBACNC,UAAWC,gBAAK,kBACf,iEAIF,CACCF,KAAM,aACNC,UAAWC,gBAAK,kBAAM,8EAEvB,CACCF,KAAM,YACNC,UAAWC,gBAAK,kBAAM,gEAGvB,CACCF,KAAM,iBACNC,UAAWC,gBAAK,kBAAM,gEAEvB,CACCF,KAAM,iBACNC,UAAWC,gBAAK,kBAAM,iEAGvB,CACCF,KAAM,eACNC,UAAWC,gBAAK,kBAAM,8EAEvB,CACCF,KAAM,cACNC,UAAWC,gBAAK,kBACf,iEAGF,CACCF,KAAM,mBACNC,UAAWC,gBAAK,kBACf,iEAGF,CACCF,KAAM,mBACNC,UAAWC,gBAAK,kBACf,yDAIF,CACCF,KAAM,qBACNC,UAAWC,gBAAK,kBACf,8EAIF,CACCF,KAAM,oBACNC,UAAWC,gBAAK,kBACf,mCAGF,CACCF,KAAM,yBACNC,UAAWC,gBAAK,kBACf,mCAGF,CACCF,KAAM,yBACNC,UAAWC,gBAAK,kBACf,mCAIF,CACCF,KAAM,eACNC,UAAWC,gBAAK,kBACf,iEAGF,CACCF,KAAM,oBACNC,UAAWC,gBAAK,kBACf,iEAIF,CACCF,KAAM,WACNC,UAAWC,gBAAK,kBAAM,wEAGvB,CACCF,KAAM,gBACNC,UAAWC,gBAAK,kBAAM,8EAGvB,CACCF,KAAM,SACNC,UAAWC,gBAAK,kBAAM,+DACtBvB,OAAQ,cACRwB,KAAM,CACLC,WAAW,IAIb,CACCJ,KAAM,uBACNC,UAAWC,gBAAK,kBACf,+DAEDvB,OAAQ,cAERwB,KAAM,CACLC,WAAW,IAIb,CACCJ,KAAM,kBACNC,UAAWC,gBAAK,kBACf,+DAEDvB,OAAQ,cAERwB,KAAM,CACLC,WAAW,IAGb,CACCJ,KAAM,SACNC,UAAWC,gBAAK,kBAAM,iCACtBvB,OAAQ,gB,gBC9JG0B,EAAU,WAErB,MAAwBC,oBAAS,WAC/B,IAEE,IAAMC,EAAOC,OAAO/C,aAAaC,QAAQ,QAEzC,OAAO6C,EAAOE,KAAKC,MAAMH,GAAQI,IAAYhC,OAAOiC,KACpD,MAAOnE,GAGP,OADAoE,QAAQC,IAAIrE,GACLkE,IAAYhC,OAAOiC,SAT9B,mBAAOA,EAAP,KAAaG,EAAb,KAgDA,OApBAtB,qBAAU,WAAO,IAAD,EAERuB,EAAUR,OAAOS,SAASC,MAUhC,EAAAF,EAAQG,WAAUC,OAAlB,oBAA4BJ,EAAQG,YAGvB,UAATP,GACFI,EAAQG,UAAUE,IAXD,CACjBC,KAAM,cACNC,SAAU,kBACV,YAAa,oBAQoBX,MAElC,CAACA,IAEG,CAACA,EAlCS,SAAAjD,GACf,IAEE,IAAM6D,EAAe7D,aAAiB8D,SAAW9D,EAAMiD,GAAQjD,EAE/DoD,EAAQS,GAERhB,OAAO/C,aAAaG,QAAQ,OAAQ6C,KAAKiB,UAAUF,IACnD,MAAO/E,GAEPoE,QAAQC,IAAIrE,O,eCEHkF,EA5BK,SAAC,GAA2B,IAAzB/C,EAAwB,EAAxBA,SAErB,GAF6C,iBAErByB,KAAxB,mBAGA,GAHA,UAGkCC,oBAAS,IAA3C,mBAAOsB,EAAP,KAAkBC,EAAlB,KAQA,OALApC,qBAAU,WAER,OADAoC,GAAa,GACN,kBAAMA,GAAa,MACzB,IAEED,EAKH,qBAAK5I,UAAU,aAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,eAAf,SAA+B4F,UAP9B,M,mHCgVIkD,G,MAtVI,SAAAjJ,GAEjB,IACE+H,EAoBE/H,EApBF+H,KACAG,EAmBElI,EAnBFkI,QACAgB,EAkBElJ,EAlBFkJ,MACAC,EAiBEnJ,EAjBFmJ,SACArD,EAgBE9F,EAhBF8F,OACAsD,EAeEpJ,EAfFoJ,UACAC,EAcErJ,EAdFqJ,WACAC,EAaEtJ,EAbFsJ,cACAC,EAYEvJ,EAZFuJ,WACAC,EAWExJ,EAXFwJ,cACAC,EAUEzJ,EAVFyJ,YACAC,EASE1J,EATF0J,eACAC,EAQE3J,EARF2J,SACAC,EAOE5J,EAPF4J,YACAlD,EAME1G,EANF0G,aACAmD,EAKE7J,EALF6J,gBACAhD,EAIE7G,EAJF6G,cACAiD,EAGE9J,EAHF8J,iBACA5D,EAEElG,EAFFkG,WACA6D,EACE/J,EADF+J,cAIF,EAA4CtC,oBAAS,GAArD,mBAAOuC,EAAP,KAAuBC,EAAvB,KAGMC,EAAe,SAAAvI,GACnBA,EAAEwI,iBACFF,GAAmBD,IAqJfI,EAAoB,CACxB,CAAEtF,MAAO,SAAUuF,MAAO,QAC1B,CAAEvF,MAAO,aAAcuF,MAAO,gBAC9B,CAAEvF,MAAO,SAAUuF,MAAO,WAC1B,CAAEvF,MAAO,OAAQuF,MAAO,SAIpBC,EAAkBF,EAAkBG,MAAK,SAAAC,GAAC,OAAIA,EAAE1F,QAAUoB,KAEhE,OACE,sBACE/F,UAAWiB,IAAW,+BAAgC,CACpDqJ,KAAMT,IAFV,UAKE,mBAAGU,KAAK,IAAIvK,UAAU,qEAAqEwK,QAAST,EAApG,SACE,cAAC,IAAD,CAAU5J,KAAM,GAAIH,UAAU,cAEhC,eAAC,IAAD,CAAkBA,UAAU,qBAA5B,UACE,sBAAKA,UAAU,qDAAf,UACE,oBAAIA,UAAU,OAAd,8BACA,mBAAGA,UAAU,MAAb,8CACA,mBAAGuK,KAAK,IAAIvK,UAAU,mBAAmBwK,QAAST,EAAlD,SACE,cAAC,IAAD,SAIJ,uBAEA,sBAAK/J,UAAU,OAAf,UACE,eAACyK,EAAA,EAAD,CAAWzK,UAAU,OAArB,UACE,mBAAGA,UAAU,mBAAb,kBACA,qBAAKA,UAAU,SAAf,SAlLe,WACvB,IAAM0K,EAAW,CACf,CACEC,KAAM,QACNT,MAAO,QACPU,QAAkB,UAAThD,GAEX,CACE+C,KAAM,WACNT,MAAO,WACPU,QAAkB,aAAThD,GAEX,CACE+C,KAAM,OACNT,MAAO,OACPU,QAAkB,SAAThD,GAEX,CACE+C,KAAM,YACNT,MAAO,YACPU,QAAkB,cAAThD,IAIb,OAAO8C,EAASG,KAAI,SAACC,EAAOC,GAC1B,IAAMC,EAAkBD,IAAUL,EAAS7D,OAAS,EAEpD,MAAe,qBAAXlB,GAAgD,cAAfmF,EAAMH,KAClC,KAIP,cAACM,EAAA,EAAD,CAEE1F,KAAK,QACL2F,GAAIJ,EAAMH,KACVT,MAAOY,EAAMZ,MACbU,QAASE,EAAMF,QACfO,SAAU,kBAAMpD,EAAQ+C,EAAMH,OAC9B3K,UAAWiB,IAAW,CAAE,OAAQ+J,KAN3BD,MAiJsBK,QAG3B,eAACX,EAAA,EAAD,CAAWzK,UAAU,OAArB,UACE,mBAAGA,UAAU,mBAAb,2BACA,sBAAKA,UAAU,SAAf,UACE,cAACiL,EAAA,EAAD,CACE1F,KAAK,QACL2F,GAAG,aACHlL,UAAU,OACVkK,MAAM,aACNU,QAA0B,SAAjBrE,EACT4E,SAAU,kBAAMzB,EAAgB,WAElC,cAACuB,EAAA,EAAD,CACE1F,KAAK,QACL2F,GAAG,QACHhB,MAAM,QACNU,QAA0B,UAAjBrE,EACT4E,SAAU,kBAAMzB,EAAgB,kBAKtC,cAACe,EAAA,EAAD,CAAWzK,UAAU,OAArB,SACE,sBAAKA,UAAU,SAAf,UACE,mBAAGA,UAAU,gCAAb,iBACA,cAACiL,EAAA,EAAD,CAAa1F,KAAK,SAAS2F,GAAG,MAAMP,KAAK,MAAMC,QAAS7B,EAAOoC,SAAU,kBAAMnC,GAAUD,WAI7F,cAAC0B,EAAA,EAAD,CAAWzK,UAAU,OAArB,SACE,sBAAKA,UAAU,oDAAf,UACE,mBAAGA,UAAU,wBAAb,+BACA,cAAC,IAAD,CACEqL,MAAOC,IACPtL,UAAU,eACVuL,gBAAgB,SAChBC,aAAcvB,EAAkB,GAChCtF,MAAOwF,EACPsB,QAASxB,EACTyB,aAAa,EACbP,SAAU,gBAAGxG,EAAH,EAAGA,MAAH,OAAeiF,EAAcjF,cAM/C,uBAEA,sBAAK3E,UAAU,OAAf,UACE,mBAAGA,UAAU,mBAAb,yBACA,cAACyK,EAAA,EAAD,CAAWzK,UAAU,OAArB,SACE,sBAAKA,UAAU,4BAAf,UACE,cAACiL,EAAA,EAAD,CACE1F,KAAK,QACL2F,GAAG,kBACHhB,MAAM,WACNU,QAAoB,mBAAXjF,EACTwF,SAAU,kBAAMlC,EAAU,aAC1BjJ,UAAU,SAEZ,cAACiL,EAAA,EAAD,CACE1F,KAAK,QACL2F,GAAG,oBACHhB,MAAM,aACNU,QAAoB,qBAAXjF,EACTwF,SAAU,kBAAMlC,EAAU,sBAIpB,qBAAXtD,EACC,cAAC8E,EAAA,EAAD,CAAWzK,UAAU,OAArB,SACE,sBAAKA,UAAU,4BAAf,UACE,mBAAGA,UAAU,gCAAb,4BACA,cAACiL,EAAA,EAAD,CACE1F,KAAK,SACL2F,GAAG,iBACHP,KAAK,iBACLC,QAASlE,EACTyE,SAAU,kBAAMxB,GAAkBjD,WAItC,KAEJ,cAAC+D,EAAA,EAAD,CAAWzK,UAAU,OAArB,SACE,sBAAKA,UAAU,4BAAf,UACE,mBAAGA,UAAU,gCAAb,yBACA,cAACiL,EAAA,EAAD,CACE1F,KAAK,SACL2F,GAAG,cACHP,KAAK,cACLC,QAASpB,EACT2B,SAAU,kBAAM1B,GAAaD,cAMrC,uBAEA,sBAAKxJ,UAAU,OAAf,UACc,qBAAX2F,EACC,eAAC8E,EAAA,EAAD,CAAWzK,UAAU,OAArB,UACE,mBAAGA,UAAU,mBAAb,0BACA,oBAAIA,UAAU,4BAAd,SA7OQ,CAAC,QAAS,UAAW,YAAa,UAAW,SAAU,OAAQ,UAAW,QAE3E6K,KAAI,SAAA9K,GAAK,OACxB,oBAEEC,UAAWiB,IAAW,gBAAD,OAAiBlB,GAAS,CAC7C4L,SAAUrC,IAAgBvJ,EAC1B6L,OAAkB,UAAV7L,IAEVyK,QAAS,kBAAMjB,EAAexJ,KALzBA,WA2OC,KAEJ,eAAC0K,EAAA,EAAD,CAAWzK,UAAU,OAArB,UACE,oBAAGA,UAAU,mBAAb,UAA4C,qBAAX2F,EAAgC,OAAS,SAA1E,WACA,qBAAK3F,UAAU,SAAf,SApOoB,WAC5B,IAAM6L,EAAgB,CACpB,CACElB,KAAM,WACNT,MAAO,WACPU,QAAwB,aAAf1B,GAEX,CACEyB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAf1B,GAEX,CACEyB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAf1B,GAEX,CACEyB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAf1B,IAIb,OAAO2C,EAAchB,KAAI,SAACC,EAAOC,GAC/B,IAAMC,EAAkBD,IAAUc,EAAchF,OAAS,EAEzD,MAAe,qBAAXlB,GAAgD,WAAfmF,EAAMH,KAClC,KAIP,cAACM,EAAA,EAAD,CAEE1F,KAAK,QACL2F,GAAIJ,EAAMH,KACVT,MAAOY,EAAMZ,MACbU,QAASE,EAAMF,QACfO,SAAU,kBAAMhC,EAAc2B,EAAMH,OACpC3K,UAAWiB,IAAW,CAAE,OAAQ+J,KAN3BD,MAmMsBe,WAI7B,uBAEA,qBAAK9L,UAAU,OAAf,SACE,eAACyK,EAAA,EAAD,CAAWzK,UAAU,OAArB,UACE,mBAAGA,UAAU,mBAAb,yBACA,qBAAKA,UAAU,SAAf,SA/LoB,WAC5B,IAAM+L,EAAgB,CACpB,CACEpB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAfxB,GAEX,CACEuB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAfxB,GAEX,CACEuB,KAAM,SACNT,MAAO,SACPU,QAAwB,WAAfxB,IAIb,OAAO2C,EAAclB,KAAI,SAACC,EAAOC,GAC/B,IAAMC,EAAkBD,IAAUgB,EAAclF,OAAS,EAEzD,OACE,cAACoE,EAAA,EAAD,CAEE1F,KAAK,QACL2F,GAAE,iBAAYJ,EAAMH,MACpBT,MAAOY,EAAMZ,MACbU,QAASE,EAAMF,QACfO,SAAU,kBAAM9B,EAAcyB,EAAMH,OACpC3K,UAAWiB,IAAW,CAAE,OAAQ+J,KAN3BD,MAuKsBiB,kB,SCvUtBC,EAlBA,WACb,OACE,oBAAGjM,UAAU,gBAAb,UACE,uBAAMA,UAAU,gDAAhB,6BACe,IAAIkM,MAAOC,cAAe,IACvC,mBAAG5B,KAAK,8CAA8C6B,OAAO,SAASC,IAAI,sBAA1E,uBAGA,sBAAMrM,UAAU,2BAAhB,sCAEF,uBAAMA,UAAU,mCAAhB,qCAEE,cAAC,IAAD,CAAOG,KAAM,Y,SCZfiD,E,OAASkJ,EAAO3J,U,yDCHP,I,OCyFA4J,EArDM,WAEnB,IAAMjH,EAAWW,cAIXuG,GAAsB,OAATC,UAAS,IAATA,SAAA,EAAAA,IAAWC,aAAaC,eACvCF,IAAUC,aAAaC,cAFzB,6EAIF,OACE,eAACC,EAAA,EAAD,CAAsB9L,IAAI,KAAKd,UAAU,yBAAzC,UACE,eAAC6M,EAAA,EAAD,CACEtC,KAAK,IACLzJ,IAAI,IACJd,UAAU,8BACVwK,QAAS,SAAChJ,GAAD,OAAOA,EAAEwI,kBAJpB,UAME,sBAAKhK,UAAU,4BAAf,UACE,sBAAMA,UAAU,6BAAhB,SACIyM,KACAA,IAAUC,aAAa/B,KAAKmC,OAAO,GAAGC,cACpCN,IAAUC,aAAa/B,KAAKqC,MAAM,IACpC,UAEJ,sBAAMhN,UAAU,cAAhB,SACIyM,KACAA,IAAUC,aAAa/B,KAAKmC,OAAO,GAAGC,cACpCN,IAAUC,aAAa/B,KAAKqC,MAAM,IACpC,aAGN,cAAC,IAAD,CAAQvM,IAAK+L,EAAY9L,UAAU,KAAKC,SAAS,KAAKC,OAAO,cAE/D,eAACqM,EAAA,EAAD,CAAcC,OAAK,EAAnB,UACE,cAAC,IAAD,CAAMC,GAAG,WAAT,SACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAMjN,KAAM,GAAIH,UAAU,UAC1B,sBAAMA,UAAU,eAAhB,0BAGJ,eAACoN,EAAA,EAAD,CACEtM,IAAKuM,IACLF,GAAG,SACH3C,QAAS,kBAAMlF,GF/ChB,SAACA,GAAc,IAAD,EACnBA,GAAQ,GACNC,KAAM,UADA,cAELnC,EAAOb,oBAAsB,MAFxB,cAGLa,EAAOZ,2BAA6B,MAH/B,IAMRiC,aAAa6I,WAAW,YACxB7I,aAAa6I,WAAWlK,EAAOb,qBAC/BkC,aAAa6I,WAAWlK,EAAOZ,gCEmC3B,UAKE,cAAC,IAAD,CAAOrC,KAAM,GAAIH,UAAU,UAC3B,sBAAMA,UAAU,eAAhB,8B,kDCtCKuN,GAnCI,SAAA1N,GAEjB,IAAQ+H,EAAqC/H,EAArC+H,KAAMG,EAA+BlI,EAA/BkI,QAASyF,EAAsB3N,EAAtB2N,kBAGjBC,EAAe,WACnB,MAAa,SAAT7F,EACK,cAAC,KAAD,CAAK5H,UAAU,QAAQwK,QAAS,kBAAMzC,EAAQ,YAE9C,cAAC,KAAD,CAAM/H,UAAU,QAAQwK,QAAS,kBAAMzC,EAAQ,YAI1D,OACE,eAAC,WAAD,WACE,oBAAI/H,UAAU,iDAAd,SACE,cAAC0N,GAAA,EAAD,CAAS1N,UAAU,sBAAnB,SACE,cAAC2N,GAAA,EAAD,CAAS3N,UAAU,gDAAgDwK,QAAS,kBAAMgD,GAAkB,IAApG,SACE,cAAC,KAAD,CAAMxN,UAAU,gBAItB,qBAAKA,UAAU,6CAAf,SACE,cAAC0N,GAAA,EAAD,CAAS1N,UAAU,oBAAnB,SACE,cAAC2N,GAAA,EAAD,CAAS3N,UAAU,iBAAnB,SACE,cAACyN,EAAD,UAIN,oBAAIzN,UAAU,4CAAd,SACE,cAAC,EAAD,UCtBO4N,GAXK,SAAA/N,GAElB,IAAQ+H,EAAqC/H,EAArC+H,KAAMG,EAA+BlI,EAA/BkI,QAASyF,EAAsB3N,EAAtB2N,kBAEvB,OACE,cAAC,WAAD,UACE,cAAC,GAAD,CAAY5F,KAAMA,EAAMG,QAASA,EAASyF,kBAAmBA,O,kDCA/DK,GAAS,OAAGpB,UAAH,IAAGA,KAAH,UAAGA,IAAWC,oBAAd,aAAG,EAAyBoB,KAE1B,IACd,CACC5C,GAAI,YACJ6C,MAAO,YACPzN,KAAM,cAAC,KAAD,CAAMH,KAAM,KAClB6N,QAAS,cAGG,SAAbH,GACG,CACA3C,GAAI,cACJ6C,MAAO,WACPzN,KAAM,cAAC,KAAD,CAAOH,KAAM,KACnByF,SAAU,CACT,CACCsF,GAAI,aACJ6C,MAAO,QACPzN,KAAM,cAAC,KAAD,CAAQH,KAAM,KACpB6N,QAAS,oBAIX,CACA9C,GAAI,UACJ6C,MAAO,OACPzN,KAAM,cAAC,IAAD,CAAMH,KAAM,KAClByF,SAAU,CACT,CACCsF,GAAI,aACJ6C,MAAO,QACPzN,KAAM,cAAC,KAAD,CAAQH,KAAM,KACpB6N,QAAS,gBAKd,CACC9C,GAAI,aACJ6C,MAAO,UACPzN,KAAM,cAAC,KAAD,CAAMH,KAAM,KAClByF,SAAU,CACT,CACCsF,GAAI,gBACJ6C,MAAO,QACPzN,KAAM,cAAC,KAAD,CAAQH,KAAM,KACpB6N,QAAS,mBAKZ,CACC9C,GAAI,YACJ6C,MAAO,SACPzN,KAAM,cAAC,KAAD,CAAMH,KAAM,KAClByF,SAAU,CACT,CACCsF,GAAI,gBACJ6C,MAAO,QACPzN,KAAM,cAAC,KAAD,CAAQH,KAAM,KACpB6N,QAAS,kBAKZ,CACC9C,GAAI,kBACJ6C,MAAO,eACPzN,KAAM,cAAC,KAAD,CAASH,KAAM,KACrByF,SAAU,CACT,CACCsF,GAAI,qBACJ6C,MAAO,QACPzN,KAAM,cAAC,KAAD,CAAQH,KAAM,KACpB6N,QAAS,yB,UCvBEC,GAtDY,SAAApO,GAEzB,IAAQ6G,EAAgF7G,EAAhF6G,cAAeiD,EAAiE9J,EAAjE8J,iBAAkB6D,EAA+C3N,EAA/C2N,kBAAmBU,EAA4BrO,EAA5BqO,aAAcC,EAActO,EAAdsO,UAG1E1H,qBAAU,YACH0H,GAAazH,GAAewH,EAAa,MAC7C,CAACC,EAAWzH,IAGf,IAAM0H,EAAU,WACd,OAAK1H,EAWD,cAAC,KAAD,CACEvG,KAAM,GACN,YAAU,cACVH,UAAU,6CACVwK,QAAS,kBAAMb,GAAiB,MAblC,cAAC,KAAD,CACExJ,KAAM,GACN,YAAU,cACVH,UAAU,6CACVwK,QAAS,kBAAMb,GAAiB,OAexC,OACE,qBAAK3J,UAAU,gBAAf,SACE,qBAAIA,UAAU,0BAAd,UACE,oBAAIA,UAAU,mBAAd,SACE,eAAC,IAAD,CAASmN,GAAG,IAAInN,UAAU,eAA1B,UACE,sBAAMA,UAAU,aAAhB,SACE,qBAAK6B,IAAK8F,IAAY0G,IAAIC,aAAcxM,IAAI,WAE9C,oBAAI9B,UAAU,kBAAd,SAAiC2H,IAAY0G,IAAIE,eAGrD,oBAAIvO,UAAU,sBAAd,SACE,sBAAKA,UAAU,4CAAf,UACE,cAACoO,EAAD,IACA,cAAC,IAAD,CAAG5D,QAAS,kBAAMgD,GAAkB,IAAQxN,UAAU,uCAAuCG,KAAM,gB,UCpBlGqO,GAAkB,SAACC,EAAMC,EAAYC,GAChD,OACED,IAAeD,GACdE,GAAeA,EAAYxH,MAAQwH,EAAYxH,KAAK6G,SAAWW,EAAYxH,KAAK6G,UAAYS,GAmBpFG,GAAmB,SAAnBA,EAAoBhJ,EAAU8I,EAAYC,GACrD,OAAO/I,EAASiJ,MAAK,SAAAC,GAEnB,OAAIA,EAAMlJ,SACDgJ,EAAiBE,EAAMlJ,SAAU8I,EAAYC,GAG/CH,GAAgBM,EAAMd,QAASU,EAAYC,OA+BzCI,GAAS,SAATA,EAAUC,EAAYN,EAAYC,GAC7C,IAAIM,EAkBJ,OAjBAD,EAAWH,MAAK,SAAAC,GACd,IAAIlJ,EAEJ,OAAIkJ,EAAMlJ,WAAaA,EAAWmJ,EAAOD,EAAMlJ,SAAU8I,EAAYC,IAC3DM,EAAS,CACf/D,GAAI4D,EAAM5D,GACVtF,YAKA4I,GAAgBM,EAAMd,QAASU,EAAYC,GACrCM,EAAS,CACf/D,GAAI4D,EAAM5D,SAFd,KAMK+D,GAOIC,GAAgB,SAACC,EAAKC,GACjC,IAAMC,EAAM,GAgBZ,OAfgB,SAAVC,EAAWH,EAAKI,GACpB,IAAK,IAAMC,KAAOL,EAAK,CACrB,IAAMxK,EAAQwK,EAAIK,QACJtO,IAAVyD,IACEA,GAA0B,kBAAVA,EAClB2K,EAAQ3K,EAAO6K,GAEXA,IAAQJ,GACVC,EAAI5N,KAAKkD,KAMnB2K,CAAQH,GACDE,GCrBMI,GAxGa,SAAC,GAYtB,IAXLlI,EAWI,EAXJA,KAEAmI,GASI,EAVJC,YAUI,EATJD,gBACAE,EAQI,EARJA,WACAC,EAOI,EAPJA,cAEA3B,GAKI,EANJ4B,UAMI,EALJ5B,cACA6B,EAII,EAJJA,kBACAC,EAGI,EAHJA,WACArB,EAEI,EAFJA,YACAsB,EACI,EADJA,kBAGMC,EAAU3I,EAAK4I,aAAe,IAAMxC,IAGpCyC,EAAWC,cACX3B,EAAa0B,EAASE,SAGtBlB,EAAQmB,YAAU7B,EAAY,CAClC1H,KAAK,GAAD,OAAKO,EAAKyG,QAAV,WACJwC,OAAO,EACPC,QAAQ,IA+BV,OARAhK,qBAAU,WACR,GAA0B,OAAtBwJ,EAA4B,CAC9BJ,EAAcI,GACd,IAAMS,EAtBY,SAAC1B,EAAYN,GACjC,IAAMiC,EAAU5B,GAAOC,EAAYN,EAAYC,GAE/C,OADmBO,GAAcyB,EAAS,MAoB5BC,CAAc5B,GAAYN,GACtCgB,EAAe,YAAIgB,OAEpB,CAACN,IAGF,oBACEpQ,UAAWiB,IAAW,CACpB,YAAasG,EAAK3B,SAClBiL,SAAUtJ,EAAKsJ,SACfC,OAAQvJ,EAAKyG,UAAY4B,IAJ7B,SAOE,eAACM,EAAD,yBACElQ,UAAU,4BACVoM,OAAQ7E,EAAKwJ,OAAS,cAAW7P,IAEN,IAAtBqG,EAAK4I,aACN,CACE5F,KAAMhD,EAAKyG,SAAW,KAExB,CACEb,GAAI5F,EAAKyG,SAAW,IACpBgD,SAAU,SAAC5B,EAAOgB,GAChB,IAAKhB,EACH,OAAO,EAGLA,EAAM6B,KAAqB,KAAd7B,EAAM6B,KAAc7B,EAAM6B,MAAQ1J,EAAKyG,UACtDiC,EAAoB1I,EAAKyG,YAhBrC,IAqBExD,QAAS,SAAAhJ,GACF+F,EAAKyG,QAAQnH,QAChBrF,EAAEwI,iBAEJgG,EArDiB,SAAAhC,GACvB,IAAM2C,EAAU5B,GAAOC,GAAYhB,EAASoB,GAC5CW,EAAkBxI,EAAK2D,GAAIyF,GAmDRO,CAAiB3J,EAAKyG,UA9CzC0B,EAAe,IACfxB,EAAa,MAoBX,UA4BG3G,EAAKjH,KACN,sBAAMN,UAAU,0BAAhB,SAA2CuH,EAAKwG,QAE/CxG,EAAK4J,OAAS5J,EAAK/G,UAClB,cAAC4Q,GAAA,EAAD,CAAOpR,UAAU,eAAeD,MAAOwH,EAAK4J,MAAOvP,MAAI,EAAvD,SACG2F,EAAK/G,YAEN,Y,UC6BG6Q,GAhIc,SAAC,GAavB,IA4DsBnG,EAxE3B3D,EAYI,EAZJA,KACAoI,EAWI,EAXJA,YACAD,EAUI,EAVJA,eACAE,EASI,EATJA,WACAC,EAQI,EARJA,cACAC,EAOI,EAPJA,UACA5B,EAMI,EANJA,aACA8B,EAKI,EALJA,WACAtJ,EAII,EAJJA,cACAyH,EAGI,EAHJA,UACAQ,EAEI,EAFJA,YACAsB,EACI,EADJA,kBAGMvB,EAAa2B,cAAcC,SA2B3BP,EAAoB,SAACxI,EAAMyI,GAC/B,IACIsB,EADAC,EAAY5B,EAGZK,GACFsB,EAAapC,GAAcc,EAAY,MACvCuB,EAAYD,GAEZC,EAAUC,SAASjK,GAAQgK,EAAUE,OAAOF,EAAUG,QAAQnK,GAAO,GAAKgK,EAAU9P,KAAK8F,GAI3F,IAAMoK,EAAU7B,EAAUvL,QAAO,SAAAqN,GAAG,OAAKL,EAAUC,SAASI,MAC5D1D,EAAa,YAAIyD,IAGjBjC,EAAe,YAAI6B,KAIfM,EAAkB,SAACrQ,EAAG+F,GACrBoI,GAAeA,EAAY6B,SAASjK,EAAK2D,KAAQ0D,GAAiBrH,EAAK3B,SAAU8I,EAAYC,GAChGoB,EAAkBxI,EAAK2D,IA9CH,SAAC3D,EAAMyI,GAC7B,IACIsB,EADAK,EAAU7B,EAGVE,IACFsB,EAAapC,GAAcc,EAAY,OAC5B8B,MAIThC,GAAawB,GAAcxB,EAAU,KAAOwB,EAAW,GACzDxB,EAAU0B,SAASjK,GAAQoK,EAAQF,OAAOE,EAAQD,QAAQnK,GAAO,GAAKoK,EAAQlQ,KAAK8F,IAEnFoK,EAAU,GACL7B,EAAU0B,SAASjK,IACtBoK,EAAQlQ,KAAK8F,IAKjB2G,EAAa,YAAIyD,IA4BfI,CAAgBxK,EAAK2D,GAAI8E,GAG3BxO,EAAEwI,kBAgBJ,OACE,qBACEhK,UAAWiB,IAAW,mBAAoB,CACxCqJ,MAfqBY,EAeI3D,EAAK2D,GAd7BxE,GAAiByH,IAAgC,IAAlBzH,KAC9BiJ,EAAY6B,SAAStG,KAAO4E,EAAU0B,SAASjK,EAAK2D,WAAxD,IAGSyE,EAAY6B,SAAStG,KAAOxE,IAA+B,IAAdyH,IAG/C,MAQL,sBAAuBwB,EAAY6B,SAASjK,EAAK2D,IACjD,uBAAwByE,EAAY6B,SAASjK,EAAK2D,KAAO4E,EAAU0B,SAASjK,EAAK2D,MAJrF,UAOE,eAAC,IAAD,CAAMlL,UAAU,4BAA4BmN,GAAG,IAAI3C,QAAS,SAAAhJ,GAAC,OAAIqQ,EAAgBrQ,EAAG+F,IAApF,UACGA,EAAKjH,KACN,sBAAMN,UAAU,2BAAhB,SAA4CuH,EAAKwG,QAEhDxG,EAAK4J,OAAS5J,EAAK/G,UAClB,cAAC4Q,GAAA,EAAD,CAAOpR,UAAU,eAAeD,MAAOwH,EAAK4J,MAAOvP,MAAI,EAAvD,SACG2F,EAAK/G,YAEN,QAIN,oBAAIR,UAAU,eAAd,SACE,cAACgS,GAAA,EAAD,CAAUC,OAAStC,GAAeA,EAAY6B,SAASjK,EAAK2D,KAAS4E,GAAaA,EAAU0B,SAASjK,EAAK2D,IAA1G,SACE,cAACgH,GAAD,CACEC,MAAO5K,EAAK3B,SACZ+J,YAAaA,EACbD,eAAgBA,EAChBI,UAAWA,EACX5B,aAAcA,EACd6B,kBAAmBA,EACnBC,WAAYzI,EACZb,cAAeA,EACfyH,UAAWA,EACXQ,YAAaA,EACbsB,kBAAmBA,EACnBL,WAAYA,EACZC,cAAeA,Y,UCvHZuC,GAXsB,SAAC,GAAqB,IAAnB7K,EAAkB,EAAlBA,KAAkB,EAAZwD,MAG5C,OACE,qBAAI/K,UAAU,oBAAd,UACE,+BAAOuH,EAAK8K,SACZ,cAAC,KAAD,CAAgBrS,UAAU,gCCiBjBsS,GAlBc,SAAAzS,GAE3B,IAAM0S,EAAa,CACjBH,gCACAf,wBACA5B,wBAUF,OANuB5P,EAAMsS,MAAMtH,KAAI,SAACtD,EAAMwD,GAC5C,IAAMyH,EAAUD,EJV+B,SAAAhL,GACjD,OAAIA,EAAK8K,OAAe,+BACpB9K,EAAK3B,SAAiB,uBACnB,sBIOsB6M,CAAwBlL,IAEnD,OAAO,cAACiL,EAAD,aAAsCjL,KAAMA,GAAU1H,GAAxC0H,EAAK2D,IAAM3D,EAAK8K,YC6E1BK,GAnFC,SAAA7S,GAEd,IAAQ6G,EAA8D7G,EAA9D6G,cAAeiI,EAA+C9O,EAA/C8O,YAAagE,EAAkC9S,EAAlC8S,KAAM1C,EAA4BpQ,EAA5BoQ,kBAAmBrI,EAAS/H,EAAT+H,KAG7D,EAAkCN,mBAAS,IAA3C,mBAAOwI,EAAP,KAAkB5B,EAAlB,KACA,EAAsC5G,mBAAS,IAA/C,mBAAOqI,EAAP,KAAoBD,EAApB,KACA,EAAoCpI,mBAAS,MAA7C,mBAAOsI,EAAP,KAAmBC,EAAnB,KAGA,EAAkCvI,oBAAS,GAA3C,mBAAO6G,EAAP,KAAkByE,EAAlB,KAGMC,EAAYC,iBAAO,MAsBzB,OACE,cAAC,WAAD,UACE,qBACE9S,UAAWiB,IAAW,kDAAmD,CACvE8R,SAAU5E,IAA+B,IAAlBzH,EACvB,aAAuB,cAATkB,GAAiC,SAATA,EACtC,YAAsB,cAATA,GAAiC,SAATA,IAEvCoL,aA3Be,WACftM,GACFkM,GAAa,IA0BXK,aAAc,kBAAML,GAAa,IAPnC,SASGD,EACCA,EAAK9S,GAEL,eAAC,WAAD,WAEE,cAAC,GAAD,aAAoBqO,aAAcA,EAAcC,UAAWA,GAAetO,IAE1E,qBAAKG,UAAU,gBAAgBF,IAAK+S,IAEpC,cAAC,IAAD,CACE7S,UAAU,oBACVyL,QAAS,CAAEyH,kBAAkB,GAC7BC,UAAW,SAAAC,GAAS,OAnCb,SAAAA,GACbP,GAAaO,EAAUC,UAAY,EAChCR,EAAUtD,QAAQpH,UAAUmL,SAAS,YACxCT,EAAUtD,QAAQpH,UAAUE,IAAI,WAG9BwK,EAAUtD,QAAQpH,UAAUmL,SAAS,YACvCT,EAAUtD,QAAQpH,UAAUC,OAAO,WA4BLmL,CAAWH,IAHrC,SAKE,oBAAIpT,UAAU,6BAAd,SACE,cAACkS,GAAD,CACEC,MAAOnD,GACPW,YAAaA,EACbD,eAAgBA,EAChBE,WAAYA,EACZC,cAAeA,EACfC,UAAWA,EACX5B,aAAcA,EACdS,YAAaA,EACbjI,cAAeA,EACfyH,UAAWA,EACX8B,kBAAmBA,gBC/ExBuD,GAAS,WAEpB,IAAMlO,EAAWW,cACX8C,EAAQ5C,aAAY,SAAAC,GAAK,OAAIA,EAAMT,OAAO8N,SA0BhD,OAZAhN,qBAAU,WAER,IAAMuB,EAAUC,SAASyL,qBAAqB,QAAQ,GAGlD3K,EACFf,EAAQ2L,aAAa,MAAO,OAE5B3L,EAAQ2L,aAAa,MAAO,SAE7B,CAAC5K,IAEG,CAACA,EAvBS,SAAApE,GACf,IAEE,IAAM6D,EAAe7D,aAAiB8D,SAAW9D,EAAMoE,GAASpE,EAChEW,EpBPmB,SAAAX,GAAK,OAAI,SAAAW,GAAQ,OAAIA,EAAS,CAAEC,KAAM,aAAcZ,WoBO9DiP,CAAUpL,IACnB,MAAO/E,GAEPoE,QAAQC,IAAIrE,OCdLoQ,GAAgB,WAE3B,MAAoCvM,oBAAS,WAC3C,IACE,OAAOK,IAAYhC,OAAOW,OAAOf,KACjC,MAAO9B,GAGP,OADAoE,QAAQC,IAAIrE,GACLkE,IAAYhC,OAAOW,OAAOf,SANrC,mBAAO2D,EAAP,KAAmBC,EAAnB,KAwBA,MAAO,CAACD,EAbS,SAAAvE,GACf,IAEE,IAAM6D,EAAe7D,aAAiB8D,SAAW9D,EAAMuE,GAAcvE,EAGrEwE,EAAcX,GACd,MAAO/E,GAEPoE,QAAQC,IAAIrE,OCtBLqQ,GAAgB,WAE3B,MAAoCxM,oBAAS,WAC3C,IACE,OAAOK,IAAYhC,OAAOoO,OAAOxO,KACjC,MAAO9B,GAGP,OADAoE,QAAQC,IAAIrE,GACLkE,IAAYhC,OAAOoO,OAAOxO,SANrC,mBAAO6D,EAAP,KAAmBC,EAAnB,KAwBA,MAAO,CAACD,EAbS,SAAAzE,GACf,IAEE,IAAM6D,EAAe7D,aAAiB8D,SAAW9D,EAAMyE,GAAczE,EAGrE0E,EAAcb,GACd,MAAO/E,GAEPoE,QAAQC,IAAIrE,OCtBLuQ,GAAiB,WAE5B,MAAsC1M,oBAAS,WAC7C,IACE,OAAOK,IAAYhC,OAAOW,OAAO2N,gBACjC,MAAOxQ,GAGP,OADAoE,QAAQC,IAAIrE,GACLkE,IAAYhC,OAAOW,OAAO2N,oBANrC,mBAAO3K,EAAP,KAAoBC,EAApB,KAwBA,MAAO,CAACD,EAbS,SAAA3E,GACf,IAEE,IAAM6D,EAAe7D,aAAiB8D,SAAW9D,EAAM2E,GAAe3E,EAGtE4E,EAAef,GACf,MAAO/E,GAEPoE,QAAQC,IAAIrE,OC4MHyQ,I,cAtMQ,SAAArU,GAErB,IAAQ+F,EAAmE/F,EAAnE+F,SAAUU,EAAyDzG,EAAzDyG,OAAQyN,EAAiDlU,EAAjDkU,OAAQpB,EAAyC9S,EAAzC8S,KAAMhE,EAAmC9O,EAAnC8O,YAAasB,EAAsBpQ,EAAtBoQ,kBAGrD,EAAwB5I,IAAxB,mBAAOO,EAAP,KAAaG,EAAb,KACA,EAA0ByL,KAA1B,mBAAOzK,EAAP,KAAcC,EAAd,KACA,EAAoC6K,KAApC,mBAAO3K,EAAP,KAAmBC,EAAnB,KACA,EAAoC2K,KAApC,mBAAO1K,EAAP,KAAmBC,EAAnB,KACA,EAAsC2K,KAAtC,mBAAO1K,EAAP,KAAoBC,EAApB,KAGA,EAAkCjC,oBAAS,GAA3C,mBAAOsB,EAAP,KAAkBC,EAAlB,KACA,EAA4CvB,oBAAS,GAArD,mBAAO6M,EAAP,KAAuB3G,EAAvB,KACA,EAAsClG,mBAASE,OAAO4M,YAAtD,oBAAOC,GAAP,MAAoBC,GAApB,MAGMhP,GAAWW,cACXsO,GAAcpO,aAAY,SAAAC,GAAK,OAAIA,EAAMT,UAGzC6O,GAAoB,WACxBF,GAAe9M,OAAO4M,aAIlBhE,GAAWC,cACX9J,GAAegO,GAAYhO,aAC3BG,GAAgB6N,GAAY7N,cAC5B8C,GAAW+K,GAAY5N,WAGvBgD,GAAmB,SAAAiI,GAAG,OAAItM,GAASE,EAAoBoM,KAS7DnL,qBAAU,WACJ0N,GAAkBE,GAAc,MAClC7G,GAAkB,KAEnB,CAAC4C,KAGJ3J,qBAAU,gBACOvF,IAAXsG,QACFA,OAAOiN,iBAAiB,SAAUD,MAEnC,CAACH,KAGJ5N,qBAAU,WAER,OADAoC,GAAa,GACN,kBAAMA,GAAa,MACzB,IAGH,IAAM6L,GAAgB,CACpBC,OAAQ,gBACRC,OAAQ,eACRC,OAAQ,iBAiBJC,GAAmC,KAAhBxL,GAAsC,UAAhBA,GAA2C,UAAhBA,EAE1E,OAAKV,EAIH,8CACE5I,UAAWiB,IAAW,2BAAD,OArBI,CAC3B8T,SAAU,kBACVH,OAAQ,gBACRD,OAAQ,gBACRE,OAAQ,iBAkB4C3L,IAAe,kBAD5C,YAEjBwL,GAActL,IAAe,iBAE/B,CAEE,uBAAwBiL,IAAe,KACvC,iBAAkB3N,IAAiB2N,IAAe,KAClD,iBAAkB3N,IAAiB2N,GAAc,KAGjD,wBAAyBA,GAAc,KACvC,aAAcF,GAAkBE,GAAc,KAC9C,YAAaF,GAAkBE,GAAc,QAG5C7K,GAAW,CAAE,WAAY,YAAe,IAjB/C,cAmBIA,GAYE,KAXF,cAAC,GAAD,CACE5B,KAAMA,EACN+K,KAAMA,EACNjM,cAAeA,GACfyN,eAAgBA,EAChBxK,iBAAkBA,GAClB6D,kBAAmBA,EACnBmB,YAAaA,EACbsB,kBAAmBA,IAKvB,cAAC+E,EAAA,EAAD,CACEC,OAAO,KACPC,MAAgB,SAATtN,EACPU,KAAe,SAATV,GAAmBkN,GACzB/U,MAAO+U,GAAmBxL,OAAcpI,EACxClB,UAAWiB,IAAW,2CAAD,OAnDL,CACpB8T,SAAU,eACVH,OAAQ,YACRD,OAAQ,oBACRE,OAAQ,UAgDuD3L,IAAe,eADrD,mBALvB,SASE,qBAAKlJ,UAAU,kCAAf,SACGsG,EACCA,EAAO,CAAEkH,oBAAmB5F,OAAMG,YAElC,cAAC,GAAD,CAAiByF,kBAAmBA,EAAmB5F,KAAMA,EAAMG,QAASA,QAIjFnC,EAGD,qBACE5F,UAAWiB,IAAW,kBAAmB,CACvCkU,KAAMhB,IAER3J,QAAS,kBAAMgD,GAAkB,OAIA,IAAlC7F,IAAYhC,OAAOyP,WAClB,cAAC,EAAD,CACExN,KAAMA,EACNG,QAASA,EACTqB,WAAYA,EACZC,cAAeA,EACfH,WAAYA,EACZC,cAAeA,EACfG,YAAaA,EACbC,eAAgBA,EAChBR,MAAOA,EACPC,SAAUA,EACVrD,OAAQ9F,EAAM8F,OACdsD,UAAWpJ,EAAMoJ,UACjBO,SAAUA,GACVC,YA7HY,SAAAmI,GAAG,OAAItM,GAASG,EAAiBmM,KA8H7CrL,aAAcA,GACdmD,gBAlIgB,SAAAkI,GAAG,OAAItM,GAASD,EAAmBuM,KAmInDlL,cAAeA,GACfiD,iBAAkBA,GAClB5D,WAAYlG,EAAMkG,WAClB6D,cAAe/J,EAAM+J,cACrBjC,YAAaA,MAEb,KACJ,wBACE3H,UAAWiB,IAAW,uBAAD,OAAwByT,GAActL,IAAe,iBAAmB,CAC3F,SAAyB,WAAfA,IAFd,SAKG2K,EACCA,EAAO,CAAE3K,aAAYsL,mBAErB,cAAC,EAAD,CAAiBtL,WAAYA,EAAYsL,cAAeA,QAI1B,IAAjC/M,IAAYhC,OAAO0N,UAClB,qBAAKrT,UAAU,gBAAf,SACE,cAAC,IAAD,CAAaqV,UAAW,IAAKlU,MAAO,CAAEmU,OAAQ,MAA9C,SACE,cAACC,EAAA,EAAD,CAAQvV,UAAU,WAAWD,MAAM,UAAnC,SACE,cAAC,IAAD,CAASI,KAAM,WAInB,SA7GC,OC/FI+T,GAfQ,SAAArU,GAAK,OAE1B,cAAC,GAAD,2BAIMA,GAJN,aAMGA,EAAM+F,a,UCdI,IACb,CACEsF,GAAI,OACJ6C,MAAO,OACPzN,KAAM,cAAC,KAAD,CAAMH,KAAM,KAClB6N,QAAS,SAEX,CACE9C,GAAI,aACJ6C,MAAO,cACPzN,KAAM,cAAC,KAAD,CAAMH,KAAM,KAClB6N,QAAS,iBCgFEwH,GAhFe,SAAC,GASxB,IARLjO,EAQI,EARJA,KACAkO,EAOI,EAPJA,gBACA/F,EAMI,EANJA,eACAE,EAKI,EALJA,WACAC,EAII,EAJJA,cACAlB,EAGI,EAHJA,YACAsB,EAEI,EAFJA,kBACAyF,EACI,EADJA,QAGMxF,EAAU3I,EAAK4I,aAAe,IAAMxC,IAGpCyC,EAAWC,cACX3B,EAAa0B,EAASE,SAEN9B,GAAgBjH,EAAKyG,QAASU,EAAYC,GAsBhE,OARAlI,qBAAU,WACR,GAA0B,OAAtBwJ,EAA4B,CAC9BJ,EAAcI,GACd,IAAMS,EAdY,SAAC1B,EAAYN,GACjC,IAAMiC,EAAU5B,GAAOC,EAAYN,EAAYC,GACzC2C,EAAapC,GAAcyB,EAAS,MAE1C,OADAW,EAAWQ,MACJR,EAUOV,CAAc5B,GAAYN,GACtCgB,EAAe,YAAIgB,OAEpB,CAACN,IAGF,oBACEpQ,UAAWiB,IAAW,WAAY,CAChC6P,OAAQvJ,EAAKyG,UAAY4B,EACzBiB,SAAUtJ,EAAKsJ,WAEjBrG,QAjBuB,kBAAMiL,EAAgB,KAY/C,SAOE,eAACvF,EAAD,yBACElQ,UAAWiB,IAAW,4BAA6B,CACjD,gBAAiByU,EACjB,YAAaA,IAEf5U,IAAKoP,EACL9D,OAAQ7E,EAAKwJ,OAAS,cAAW7P,IAEN,IAAtBqG,EAAK4I,aACN,CACE5F,KAAMhD,EAAKyG,SAAW,KAExB,CACEb,GAAI5F,EAAKyG,SAAW,IACpBgD,SAAU,SAAC5B,EAAOgB,GAChB,IAAKhB,EACH,OAAO,EAGLA,EAAM6B,KAAqB,KAAd7B,EAAM6B,KAAc7B,EAAM6B,MAAQ1J,EAAKyG,UACtDiC,EAAoB1I,EAAKyG,YApBrC,cA0BGzG,EAAKjH,KACN,+BAAOiH,EAAKwG,e,UC6BL4H,GAvGgB,SAAA9V,GAE7B,IACE0H,EAYE1H,EAZF0H,KACAqO,EAWE/V,EAXF+V,QACAjG,EAUE9P,EAVF8P,YACAqD,EASEnT,EATFmT,aACAC,EAQEpT,EARFoT,aACA4C,EAOEhW,EAPFgW,aACAnG,EAME7P,EANF6P,eACAE,EAKE/P,EALF+P,WACAC,EAIEhQ,EAJFgQ,cACAlB,EAGE9O,EAHF8O,YACA8G,EAEE5V,EAFF4V,gBACAxF,EACEpQ,EADFoQ,kBAIIvB,EAAa2B,cAAcC,SAG3BwF,EAAgB,CACpBC,aAAc,CACZC,SAAS,EACTC,GAAI,SAAA/R,GACF,IAGegS,EAHTC,EAAa3O,OAAO4O,YACxBC,EAAQnS,EAAKoS,SAASC,UAAUC,wBAAwBC,IAKtDN,EAAaE,EAJJnS,EAAKwS,OAAO3U,OAIW,GAAK,IAEvCmU,EAAY,CACVS,UAFUR,EAAaE,EAAQ,GAG/BO,UAAW,SAIf,IAAMC,EAAQ3S,EAAKoS,SAASI,OAAOF,wBAOnC,OAJIK,EAAMC,KAAOD,EAAM7U,OAASwF,OAAO4M,WAAa,KAAO,GACzDlQ,EAAKoS,SAASI,OAAOK,QAAQ,aAAa5O,UAAUE,IAAI,YAGnD,2BACFnE,GADL,IAEE8S,OAAO,eACFd,QAMb,OACE,eAACe,GAAA,EAAD,CACEnW,IAAI,KACJd,UAAWiB,IAAW,CACpB,YAAwB,IAAZ2U,EACZ,oBAAgC,IAAZA,EACpB,8BACEhH,GAAiBrH,EAAK3B,SAAU8I,EAAYC,IAAgBgB,EAAY6B,SAASjK,EAAK2D,MAE1F+G,OAAQ4D,EAAarE,SAASjK,EAAK2D,IACnCgM,OAAQ,kBAAMlE,EAAazL,EAAK2D,KAChC8H,aAAc,kBAAMA,EAAazL,EAAK2D,KACtC+H,aAAc,kBAAMA,EAAa1L,EAAK2D,KAXxC,UAaE,eAAC2B,EAAA,EAAD,CACEM,GAAG,IACHrM,IAAKuM,IACLrN,UAAWiB,IAAW,4CAA6C,CACjE,iBAA6B,IAAZ2U,EACjB,YAAwB,IAAZA,IAEdpL,QAAS,SAAAhJ,GAAC,OAAIA,EAAEwI,kBAPlB,UASGzC,EAAKjH,KACN,+BAAOiH,EAAKwG,WAEd,cAACd,EAAA,EAAD,CAAcnM,IAAI,KAAKqW,UAAWrB,EAAlC,SACE,cAAC,GAAD,CACEF,SAAS,EACT5F,WAAYzI,EACZ4K,MAAO5K,EAAK3B,SACZgK,WAAYA,EACZD,YAAaA,EACbhB,YAAaA,EACbkH,aAAcA,EACd7C,aAAcA,EACdC,aAAcA,EACdpD,cAAeA,EACfH,eAAgBA,EAChBgG,SAAS,EACTD,gBAAiBA,EACjBxF,kBAAmBA,UCvFdmH,GAjBgB,SAAAvX,GAE7B,IAAM0S,EAAa,CACjBoD,0BACAH,0BAUF,OANuB3V,EAAMsS,MAAMtH,KAAI,SAACtD,EAAMwD,GAC5C,IAAMyH,EAAUD,EfIiC,SAAAhL,GACnD,OAAIA,EAAK3B,SAAiB,yBACnB,wBeNsB6M,CAAwBlL,IAEnD,OAAO,cAACiL,EAAD,aAASjL,KAAMA,EAAMwD,MAAOA,GAAyBlL,GAAb0H,EAAK2D,QCmCzCmM,GA1CQ,SAAC,GAAwC,IAAtCpH,EAAqC,EAArCA,kBAAmBtB,EAAkB,EAAlBA,YAE3C,EAAoCrH,mBAAS,MAA7C,mBAAOsI,EAAP,KAAmBC,EAAnB,KACA,EAAsCvI,mBAAS,IAA/C,mBAAOqI,EAAP,KAAoBD,EAApB,KACA,EAAwCpI,mBAAS,IAAjD,mBAAOuO,EAAP,KAAqBJ,EAArB,KAgBA,OACE,qBAAKzV,UAAU,qCAAf,SACE,oBAAIA,UAAU,iBAAiBkL,GAAG,uBAAlC,SACE,cAAC,GAAD,CACE0K,SAAS,EACTzD,MAAOnD,GACPY,WAAYA,EACZD,YAAaA,EACbhB,YAAaA,EACbqE,aAtBa,SAAA9H,GACnB,IAAMwF,EAAMmF,EACZnF,EAAIjP,KAAKyJ,GACTuK,EAAgB,YAAI/E,KAoBduC,aAhBa,SAAA/H,GACnB,IAAMwF,EAAMmF,EACZnF,EAAIe,OAAOf,EAAIgB,QAAQxG,GAAK,GAC5BuK,EAAgB,YAAI/E,KAcdmF,aAAcA,EACdhG,cAAeA,EACfH,eAAgBA,EAChB+F,gBAAiBA,EACjBxF,kBAAmBA,SCqKdqH,I,OAhLU,SAAAzX,GAAU,IAAD,EAExB+F,EAAmE/F,EAAnE+F,SAAUU,EAAyDzG,EAAzDyG,OAAQyN,EAAiDlU,EAAjDkU,OAAQpB,EAAyC9S,EAAzC8S,KAAM1C,EAAmCpQ,EAAnCoQ,kBAAmBtB,EAAgB9O,EAAhB8O,YAG3D,EAAwBtH,IAAxB,mBAAOO,EAAP,KAAaG,EAAb,KACA,EAA0ByL,KAA1B,mBAAOzK,EAAP,KAAcC,EAAd,KACA,EAAoC6K,KAApC,mBAAO3K,EAAP,KAAmBC,EAAnB,KACA,EAAoC2K,KAApC,mBAAO1K,EAAP,KAAmBC,EAAnB,KACA,EAAsC2K,KAAtC,mBAAO1K,EAAP,KAAoBC,EAApB,KAGA,EAAkCjC,oBAAS,GAA3C,mBAAOsB,EAAP,KAAkBC,EAAlB,KACA,EAA4CvB,oBAAS,GAArD,mBAAOiQ,EAAP,KAAuBC,EAAvB,KAGMlS,GAAWW,cACXsO,GAAcpO,aAAY,SAAAC,GAAK,OAAIA,EAAMT,UAGzCY,GAAegO,GAAYhO,aAC3BiD,GAAW+K,GAAY5N,WAe7BF,qBAAU,WAUR,OATAoC,GAAa,GACbrB,OAAOiN,iBAAiB,UAAU,WAC5BjN,OAAOiQ,YAAc,KAAyB,IAAnBF,GAC7BC,GAAkB,GAEhBhQ,OAAOiQ,YAAc,IACvBD,GAAkB,MAGf,kBAfP3O,GAAa,QACb2O,GAAkB,MAejB,IAGH,IAAM9C,GAAgB,CACpBC,OAAQ,gBACRC,OAAQ,eACRC,OAAQ,iBASJ6C,GAAgB,CACpB3C,SAAU,eACVH,OAAQ,aAGJE,GAAmC,KAAhBxL,GAAsC,UAAhBA,GAA2C,UAAhBA,EAE1E,OAAKV,EAKH,8CACE5I,UAAWiB,IAAW,6CAAD,OAnBI,CAC3B8T,SAAU,kBACVH,OAAQ,gBACRD,OAAQ,iBAiB8DzL,IAAe,kBAD9D,YAEjBwL,GAActL,IAAe,gBAFZ,oBAKhBI,GAAW,CAAE,WAAY,YAAe,IAN/C,cAQE,eAACwL,EAAA,EAAD,CACEC,OAAO,KACPjV,UAAWiB,IAAW,kFAAmF,CACvG,kBAAmBsW,IAHvB,WAMIjR,GACA,qBAAKtG,UAAU,kCAAf,SACE,oBAAIA,UAAU,iBAAd,SACE,cAAC0N,GAAA,EAAD,UACE,eAAC,IAAD,CAAMP,GAAG,IAAInN,UAAU,eAAvB,UACE,sBAAMA,UAAU,aAAhB,SACE,qBAAK6B,IAAK8F,IAAY0G,IAAIC,aAAcxM,IAAI,WAE9C,oBAAI9B,UAAU,kBAAd,SAAiC2H,IAAY0G,IAAIE,mBAO3D,qBAAKvO,UAAU,kCAAf,SACGsG,EAASA,EAAO,CAAEsB,OAAMG,YAAa,cAAC,GAAD,CAAiBH,KAAMA,EAAMG,QAASA,SAG9EyB,GAmBE,KAlBF,qBAAKxJ,UAAU,0BAAf,SACE,cAACgV,EAAA,EAAD,CACElU,IAAI,MACJmU,OAAO,KACPC,MAAgB,SAATtN,EACPU,KAAe,SAATV,GAAmBkN,GACzB9U,UAAWiB,IAAW,6DAAD,mBAClByW,GAAcxO,GAA6B,WAAfA,GADV,cAEnB,gBAAkBwO,GAAcxO,IAA8B,WAAfA,GAA2C,aAAfA,GAFxD,IALvB,SAUGyJ,EACCA,EAAK,CAAEhE,cAAasB,sBAEpB,cAAC,GAAD,CAAetB,YAAaA,EAAasB,kBAAmBA,QAMnErK,GACkC,IAAlC+B,IAAYhC,OAAOyP,WAClB,cAAC,EAAD,CACExN,KAAMA,EACNG,QAASA,EACTqB,WAAYA,EACZC,cAAeA,EACfH,WAAYA,EACZC,cAAeA,EACfG,YAAaA,EACbC,eAAgBA,EAChBR,MAAOA,EACPC,SAAUA,EACVrD,OAAQ9F,EAAM8F,OACdsD,UAAWpJ,EAAMoJ,UACjBO,SAAUA,GACVC,YArHY,SAAAmI,GAAG,OAAItM,GAASG,EAAiBmM,KAsH7CrL,aAAcA,GACdmD,gBA1HgB,SAAAkI,GAAG,OAAItM,GAASD,EAAmBuM,KA2HnD7L,WAAYlG,EAAMkG,WAClB6D,cAAe/J,EAAM+J,cACrBjC,YAAaA,MAEb,KACJ,wBACE3H,UAAWiB,IAAW,uBAAD,OAAwByT,GAActL,IAAe,iBAAmB,CAC3F,SAAyB,WAAfA,IAFd,SAKG2K,EACCA,EAAO,CAAE3K,aAAYsL,mBAErB,cAAC,EAAD,CAAiBtL,WAAYA,EAAYsL,cAAeA,QAI1B,IAAjC/M,IAAYhC,OAAO0N,UAClB,qBAAKrT,UAAU,gBAAf,SACE,cAAC,IAAD,CAAaqV,UAAW,IAAKlU,MAAO,CAAEmU,OAAQ,MAA9C,SACE,cAACC,EAAA,EAAD,CAAQvV,UAAU,WAAWD,MAAM,UAAnC,SACE,cAAC,IAAD,CAASI,KAAM,WAInB,SAtGC,OCpFImX,GAXU,SAAAzX,GAAK,OAC5B,cAAC,GAAD,2BAIMA,GAJN,aAMGA,EAAM+F,a,iBCTI,SAAS+R,KACvB,IAAMC,EAAUC,aAAWpL,IAAUqL,OAC/BC,EAAc7L,KAAK8L,MAAQ,IAMjC,OALIJ,EAAQK,IAAMF,IACjBtT,aAAayT,QAEb1Q,OAAO4I,SAAS7F,KAAO,UAEjB,6B,aCgOO4N,GA/MA,WAEb,MC3BuB,WAEvB,MAAoC7Q,mBAAS,MAA7C,mBAAO8Q,EAAP,KAAmBC,EAAnB,KACA,EAA4B/Q,oBAAS,WACnC,IACE,OAAOK,IAAYhC,OAAOJ,KAC1B,MAAO9B,GAGP,OADAoE,QAAQC,IAAIrE,GACLkE,IAAYhC,OAAOJ,SAN9B,mBAAOI,EAAP,KAAesD,EAAf,KAwBMqP,EAAe,WAEJ,eAAX3S,GAA2B6B,OAAO4M,YAAc,OAClDnL,EAAU,YACVoP,EAAc,eAGG,eAAfD,GAA+B5Q,OAAO4M,YAAc,MACtDnL,EAAU,eAcd,OATAxC,qBAAU,WACR6R,MACC,IAEH7R,qBAAU,WAERe,OAAOiN,iBAAiB,SAAU6D,KACjC,CAAC3S,EAAQyS,IAEL,CAACzS,EAnCS,SAAAhB,GACf,IAEE,IAAM6D,EAAe7D,aAAiB8D,SAAW9D,EAAMgB,GAAUhB,EAGjEsE,EAAUT,GACV,MAAO/E,GAEPoE,QAAQC,IAAIrE,MDIY8U,GAA5B,mBAAO5S,EAAP,KAAesD,EAAf,KACA,EE5BiC,WAEjC,MAAoC3B,oBAAS,WAC3C,IACE,OAAOK,IAAYhC,OAAO6S,iBAC1B,MAAO/U,GAGP,OADAoE,QAAQC,IAAIrE,GACLkE,IAAYhC,OAAO6S,qBAN9B,mBAAOzS,EAAP,KAAmB6D,EAAnB,KAwBA,MAAO,CAAC7D,EAbS,SAAApB,GACf,IAEE,IAAM6D,EAAe7D,aAAiB8D,SAAW9D,EAAMoB,GAAcpB,EAGrEiF,EAAcpB,GACd,MAAO/E,GAEPoE,QAAQC,IAAIrE,MFMoBgV,GAApC,mBAAO1S,EAAP,KAAmB6D,EAAnB,KAMM8O,GAHUC,qBAAW1T,GAGM,eAAXU,EAA0B,mBAAqB,kBAG/DiT,EAAU,CAAEjQ,cAAauL,kBAAgBoD,qBAuBzCuB,EAAgB3R,gBAAK,kBAAM,kCAG3B4R,EAAQ5R,gBAAK,kBAAM,iCAKnB6R,EAAa,SAAAlZ,GACjB,IAAMmZ,EAAQnZ,EAAMmZ,MASpB,OALIA,EAAM7R,OACC6R,EAAM7R,KAAK8R,OAASD,EAAM7R,KAAK8R,OAAS,KACtCD,EAAM7R,KAAK+R,SAAWF,EAAM7R,KAAK+R,SAAW,OAIrDC,oBAAmCjY,IAAf8X,EAAM7R,OAC1BgS,eAAoBH,EAAM7R,OAAS6R,EAAM7R,KAAKC,YAAc4R,EAAM7R,KAAKiS,YASlE,cAAC,IAAD,CAAUjM,GAAG,WACX6L,EAAM7R,MAAQ6R,EAAM7R,KAAKC,WAAa+R,cAExC,cAAC,IAAD,CAAUhM,GAAG,eAGb,cAAC6L,EAAM/R,UAAP,eAAqBpH,KAoGhC,OAEE,cAAC,IAAD,CAAWwZ,SAAUC,GAArB,SACE,eAAC,IAAD,WAEE,cAAC,IAAD,CACE9I,OAAK,EACLxJ,KAAK,IACLuS,OAAQ,WACN,OAAOJ,cAAmB,cAAC,IAAD,CAAUhM,GAAIrG,IAAmB,cAAC,IAAD,CAAUqG,GAAG,cAG5E,cAAC,IAAD,CACEqD,OAAK,EACLxJ,KAAK,IACLuS,OAAQ,WACN,OAAO,cAAC,IAAD,CAAUpM,GAAIrG,OAIzB,cAAC,IAAD,CACE0J,OAAK,EACLxJ,KAAK,kBACLuS,OAAQ,SAAA1Z,GAAK,OACX,cAAC+Y,EAAQjQ,YAAT,UACE,cAACkQ,EAAD,SAvHHW,OAAOC,KAAKb,GAAS/N,KAAI,SAAClF,EAAQoF,GAMvC,IAAM2O,EAAYd,EAAQjT,GAG1B,EAnEyB,SAAAA,GAC3B,IAAMgU,EAAe,GACfC,EAAc,GAYpB,OAVI7S,GACFA,EAAOxC,QAAO,SAAAyU,IAERA,EAAMrT,SAAWA,QAA4BzE,IAAjB8X,EAAMrT,QAAwB+S,IAAkB/S,KAC9EgU,EAAalY,KAAKuX,GAClBY,EAAYnY,KAAKuX,EAAMhS,UAKtB,CAAE2S,eAAcC,eAqDiBC,CAAqBlU,GAAnDgU,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,YAQhBjL,EAAc,GAEpB,OAEE,eAAC,IAAD,CAAO3H,KAAM4S,EAAb,UACG,cAAC,KAAD,IAGD,cAACF,EAAD,CACE/K,YAAaA,EACbhJ,OAAQA,EACRsD,UAAWA,EACXlD,WAAYA,EACZ6D,cAAeA,EACfqG,kBA5FgB,KAsFlB,SAQE,cAAC,IAAD,UACG0J,EAAa9O,KAAI,SAAAmO,GAChB,OAEE,cAAC,IAAD,CAEEhS,KAAMgS,EAAMhS,KACZwJ,OAAuB,IAAhBwI,EAAMxI,MACb+I,OAAQ,SAAA1Z,GAON,OALA2Z,OAAOM,OAAOnL,EAAd6K,OAAA,IAAAA,QAAA,IAAAA,CAAA,GACK3Z,GADL,IAEEsH,KAAM6R,EAAM7R,QAIZ,eAAC,WAAD,CAAU4S,SAAU,KAApB,UAEE,cAAC,EAAD,iDACEpU,OAAQ+S,EACR3S,WAAYA,EACZ6D,cAAeA,GAGVoP,EAAMnT,UACP,CACEA,UAAWmT,EAAMnT,WAEnB,IACCmT,EAAM7R,KACP,CACEnB,UAAWgT,EAAM7R,MAEnB,IACC6R,EAAMhZ,UACP,CACE8F,aAAckT,EAAMhZ,WAEtB,IApBN,aAwBE,cAAC+Y,EAAD,aAAYC,MAAOA,GAAWnZ,OAG/B4M,KAAwB,MAAXA,IAAkB,cAACkL,GAAD,IAAY,UAxC7CqB,EAAMhS,eAjBQ+D,MAwG/B,cAAC,IAAD,CAAO/D,KAAK,IAAIC,UAAW6R,IA5B7B,UGlMSkB,UAJH,SAAAna,GAAK,OAAI,cAAC,GAAD,M,gCCNrB,oEAAO,IAAM4M,EAAYhF,KAAKC,MAAMjD,aAAaC,QAAQ,aAE5CuV,EAAe,CAC1B1W,QAAS,CACP,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,oCAChCC,cAAeiJ,GAAaA,EAAUqL,S,+GC2C7BqB,EAAiB,kBAAM1U,aAAaC,QAAQ,aAkB5C4G,EAAoB,SAAAD,GAAK,kCACjCA,GADiC,IAEpC6O,OAAO,2BACF7O,EAAM6O,QADL,IAEJC,UAAW,YACXC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,UAAW,gB","file":"static/js/10.08c1db5a.chunk.js","sourcesContent":["// ** React Imports\r\nimport { forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Badge } from 'reactstrap'\r\nimport classnames from 'classnames'\r\n\r\nconst Avatar = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    color,\r\n    className,\r\n    imgClassName,\r\n    initials,\r\n    size,\r\n    badgeUp,\r\n    content,\r\n    icon,\r\n    badgeColor,\r\n    badgeText,\r\n    img,\r\n    imgHeight,\r\n    imgWidth,\r\n    status,\r\n    tag: Tag,\r\n    contentStyles,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** Function to extract initials from content\r\n  const getInitials = str => {\r\n    const results = []\r\n    const wordArray = str.split(' ')\r\n    wordArray.forEach(e => {\r\n      results.push(e[0])\r\n    })\r\n    return results.join('')\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar', {\r\n        [className]: className,\r\n        [`bg-${color}`]: color,\r\n        [`avatar-${size}`]: size\r\n      })}\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {img === false || img === undefined ? (\r\n        <span\r\n          className={classnames('avatar-content', {\r\n            'position-relative': badgeUp\r\n          })}\r\n          style={contentStyles}\r\n        >\r\n          {initials ? getInitials(content) : content}\r\n\r\n          {icon ? icon : null}\r\n          {badgeUp ? (\r\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\r\n              {badgeText ? badgeText : '0'}\r\n            </Badge>\r\n          ) : null}\r\n        </span>\r\n      ) : (\r\n        <img\r\n          className={classnames({\r\n            [imgClassName]: imgClassName\r\n          })}\r\n          src={img}\r\n          alt='avatarImg'\r\n          height={imgHeight && !size ? imgHeight : 32}\r\n          width={imgWidth && !size ? imgWidth : 32}\r\n        />\r\n      )}\r\n      {status ? (\r\n        <span\r\n          className={classnames({\r\n            [`avatar-status-${status}`]: status,\r\n            [`avatar-status-${size}`]: size\r\n          })}\r\n        ></span>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n})\r\n\r\nexport default Avatar\r\n\r\n// ** PropTypes\r\nAvatar.propTypes = {\r\n  imgClassName: Proptypes.string,\r\n  className: Proptypes.string,\r\n  src: Proptypes.string,\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\r\n  badgeUp: Proptypes.bool,\r\n  content: Proptypes.string,\r\n  icon: Proptypes.node,\r\n  contentStyles: Proptypes.object,\r\n  badgeText: Proptypes.string,\r\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\r\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\r\n  badgeColor: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  color: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  initials(props) {\r\n    if (props['initials'] && props['content'] === undefined) {\r\n      return new Error('content prop is required with initials prop.')\r\n    }\r\n    if (props['initials'] && typeof props['content'] !== 'string') {\r\n      return new Error('content prop must be a string.')\r\n    }\r\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\r\n      return new Error('initials must be a boolean!')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nAvatar.defaultProps = {\r\n  tag: 'div'\r\n}\r\n","// ** Auth Endpoints\r\nexport default {\r\n  loginEndpoint: '/jwt/login',\r\n  registerEndpoint: '/jwt/register',\r\n  refreshEndpoint: '/jwt/refresh-token',\r\n  logoutEndpoint: '/jwt/logout',\r\n\r\n  // ** This will be prefixed in authorization header with token\r\n  // ? e.g. Authorization: Bearer <token>\r\n  tokenType: 'Bearer',\r\n\r\n  // ** Value of this property will be used as key to store JWT token in storage\r\n  storageTokenKeyName: 'accessToken',\r\n  storageRefreshTokenKeyName: 'refreshToken'\r\n}\r\n","import axios from 'axios'\r\nimport jwtDefaultConfig from './jwtDefaultConfig'\r\n\r\nexport default class JwtService {\r\n  // ** jwtConfig <= Will be used by this service\r\n  jwtConfig = { ...jwtDefaultConfig }\r\n\r\n  // ** For Refreshing Token\r\n  isAlreadyFetchingAccessToken = false\r\n\r\n  // ** For Refreshing Token\r\n  subscribers = []\r\n\r\n  constructor(jwtOverrideConfig) {\r\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\r\n\r\n    // ** Request Interceptor\r\n    axios.interceptors.request.use(\r\n      config => {\r\n        // ** Get token from localStorage\r\n        const accessToken = this.getToken()\r\n\r\n        // ** If token is present add it to request's Authorization Header\r\n        if (accessToken) {\r\n          // ** eslint-disable-next-line no-param-reassign\r\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n        }\r\n        return config\r\n      },\r\n      error => Promise.reject(error)\r\n    )\r\n\r\n    // ** Add request/response interceptor\r\n    axios.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        // ** const { config, response: { status } } = error\r\n        const { config, response } = error\r\n        const originalRequest = config\r\n\r\n        // ** if (status === 401) {\r\n        if (response && response.status === 401) {\r\n          if (!this.isAlreadyFetchingAccessToken) {\r\n            this.isAlreadyFetchingAccessToken = true\r\n            this.refreshToken().then(r => {\r\n              this.isAlreadyFetchingAccessToken = false\r\n\r\n              // ** Update accessToken in localStorage\r\n              this.setToken(r.data.accessToken)\r\n              this.setRefreshToken(r.data.refreshToken)\r\n\r\n              this.onAccessTokenFetched(r.data.accessToken)\r\n            })\r\n          }\r\n          const retryOriginalRequest = new Promise(resolve => {\r\n            this.addSubscriber(accessToken => {\r\n              // ** Make sure to assign accessToken according to your response.\r\n              // ** Check: https://pixinvent.ticksy.com/ticket/2413870\r\n              // ** Change Authorization header\r\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n              resolve(this.axios(originalRequest))\r\n            })\r\n          })\r\n          return retryOriginalRequest\r\n        }\r\n        return Promise.reject(error)\r\n      }\r\n    )\r\n  }\r\n\r\n  onAccessTokenFetched(accessToken) {\r\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\r\n  }\r\n\r\n  addSubscriber(callback) {\r\n    this.subscribers.push(callback)\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\r\n  }\r\n\r\n  getRefreshToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\r\n  }\r\n\r\n  setToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\r\n  }\r\n\r\n  setRefreshToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\r\n  }\r\n\r\n  login(...args) {\r\n    return axios.post(this.jwtConfig.loginEndpoint, ...args)\r\n  }\r\n\r\n  register(...args) {\r\n    return axios.post(this.jwtConfig.registerEndpoint, ...args)\r\n  }\r\n\r\n  refreshToken() {\r\n    return axios.post(this.jwtConfig.refreshEndpoint, {\r\n      refreshToken: this.getRefreshToken()\r\n    })\r\n  }\r\n}\r\n","// ** Core JWT Import\r\nimport useJwt from '@src/@core/auth/jwt/useJwt'\r\n\r\nconst { jwt } = useJwt({})\r\n\r\nexport default jwt\r\n","// ** JWT Service Import\r\nimport JwtService from './jwtService'\r\n\r\n// ** Export Service as useJwt\r\nexport default function useJwt(jwtOverrideConfig) {\r\n  const jwt = new JwtService(jwtOverrideConfig)\r\n\r\n  return {\r\n    jwt\r\n  }\r\n}\r\n","// ** Imports createContext function\r\nimport { createContext } from 'react'\r\n\r\n// ** Imports createContextualCan function\r\nimport { createContextualCan } from '@casl/react'\r\n\r\n// ** Create Context\r\nexport const AbilityContext = createContext()\r\n\r\n// ** Init Can Context\r\nexport const Can = createContextualCan(AbilityContext.Consumer)\r\n","// ** Handles Layout Content Width (full / boxed)\r\nexport const handleContentWidth = value => dispatch => dispatch({ type: 'HANDLE_CONTENT_WIDTH', value })\r\n\r\n// ** Handles Menu Collapsed State (Bool)\r\nexport const handleMenuCollapsed = value => dispatch => dispatch({ type: 'HANDLE_MENU_COLLAPSED', value })\r\n\r\n// ** Handles Menu Hidden State (Bool)\r\nexport const handleMenuHidden = value => dispatch => dispatch({ type: 'HANDLE_MENU_HIDDEN', value })\r\n\r\n// ** Handles RTL (Bool)\r\nexport const handleRTL = value => dispatch => dispatch({ type: 'HANDLE_RTL', value })\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/actions/layout'\r\n\r\n// ** Styles\r\nimport 'animate.css/animate.css'\r\n\r\nconst LayoutWrapper = props => {\r\n  // ** Props\r\n  const { layout, children, appLayout, wrapperClass, transition, routeMeta } = props\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state)\r\n  const navbarStore = store.navbar\r\n  const contentWidth = store.layout.contentWidth\r\n\r\n  //** Vars\r\n  const Tag = layout === 'HorizontalLayout' && !appLayout ? 'div' : Fragment\r\n\r\n  // ** Clean Up Function\r\n  const cleanUp = () => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth('full'))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth(routeMeta.contentWidth))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\r\n      }\r\n    }\r\n    return () => cleanUp()\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className={classnames('app-content content overflow-hidden', {\r\n        [wrapperClass]: wrapperClass,\r\n        'show-overlay': navbarStore.query.length\r\n      })}\r\n    >\r\n      <div className='content-overlay'></div>\r\n      <div className='header-navbar-shadow' />\r\n      <div\r\n        className={classnames({\r\n          'content-wrapper': !appLayout,\r\n          'content-area-wrapper': appLayout,\r\n          'container p-0': contentWidth === 'boxed',\r\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\r\n        })}\r\n      >\r\n        <Tag\r\n          /*eslint-disable */\r\n          {...(layout === 'HorizontalLayout' && !appLayout\r\n            ? { className: classnames({ 'content-body': !appLayout }) }\r\n            : {})}\r\n          /*eslint-enable */\r\n        >\r\n          {children}\r\n        </Tag>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayoutWrapper\r\n","import { lazy } from 'react';\r\n\r\nimport { Dashboard } from 'uppy';\r\n\r\n// ** Document title\r\nconst TemplateTitle = '%s - Vuexy React Admin Template';\r\n\r\n// ** Default Route\r\n\r\nconst DefaultRoute = '/dashboard';\r\n// ** Merge Routes\r\nconst Routes = [\r\n\t{\r\n\t\tpath: '/dashboard',\r\n\t\tcomponent: lazy(() => import('../../admin/components/Dashboard')),\r\n\t},\r\n\t{\r\n\t\tpath: '/chairman/list',\r\n\t\tcomponent: lazy(() => import('../../admin/components/chairman/list')),\r\n\t},\r\n\t{\r\n\t\tpath: '/chairman/add',\r\n\t\tcomponent: lazy(() =>\r\n\t\t\timport('../../admin/components/chairman/AddChairman')\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tpath: '/chairman/edit/:id',\r\n\t\tcomponent: lazy(() =>\r\n\t\t\timport('../../admin/components/chairman/EditChairman')\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tpath: '/chairman/view/:id',\r\n\t\tcomponent: lazy(() =>\r\n\t\t\timport('../../admin/components/chairman/ViewChairman')\r\n\t\t),\r\n\t},\r\n\r\n\t{\r\n\t\tpath: '/user/list',\r\n\t\tcomponent: lazy(() => import('../../admin/components/user/list')),\r\n\t},\r\n\t{\r\n\t\tpath: '/user/add',\r\n\t\tcomponent: lazy(() => import('../../admin/components/user/AddUser')),\r\n\t},\r\n\r\n\t{\r\n\t\tpath: '/user/edit/:id',\r\n\t\tcomponent: lazy(() => import('../../admin/components/user/EditUser')),\r\n\t},\r\n\t{\r\n\t\tpath: '/user/view/:id',\r\n\t\tcomponent: lazy(() => import('../../admin/components/user/ViewUser')),\r\n\t},\r\n\r\n\t{\r\n\t\tpath: '/vendor/list',\r\n\t\tcomponent: lazy(() => import('../../admin/components/vendor/list')),\r\n\t},\r\n\t{\r\n\t\tpath: '/vendor/add',\r\n\t\tcomponent: lazy(() =>\r\n\t\t\timport('../../admin/components/vendor/AddVendor')\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tpath: '/vendor/edit/:id',\r\n\t\tcomponent: lazy(() =>\r\n\t\t\timport('../../admin/components/vendor/EditVendor')\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tpath: '/vendor/view/:id',\r\n\t\tcomponent: lazy(() =>\r\n\t\t\timport('../../admin/components/vendor/ViewVendor')\r\n\t\t),\r\n\t},\r\n\r\n\t{\r\n\t\tpath: '/announcement/list',\r\n\t\tcomponent: lazy(() =>\r\n\t\t\timport('../../admin/components/announcement/list')\r\n\t\t),\r\n\t},\r\n\r\n\t{\r\n\t\tpath: '/announcement/add',\r\n\t\tcomponent: lazy(() =>\r\n\t\t\timport('../../admin/components/announcement/AddAnnouncement')\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tpath: '/announcement/edit/:id',\r\n\t\tcomponent: lazy(() =>\r\n\t\t\timport('../../admin/components/announcement/EditAnnouncement')\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tpath: '/announcement/view/:id',\r\n\t\tcomponent: lazy(() =>\r\n\t\t\timport('../../admin/components/announcement/ViewAnnouncement')\r\n\t\t),\r\n\t},\r\n\r\n\t{\r\n\t\tpath: '/complex/add',\r\n\t\tcomponent: lazy(() =>\r\n\t\t\timport('../../admin/components/complex/AddComplex')\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tpath: '/complex/view/:id',\r\n\t\tcomponent: lazy(() =>\r\n\t\t\timport('../../admin/components/complex/ViewComplex')\r\n\t\t),\r\n\t},\r\n\r\n\t{\r\n\t\tpath: '/profile',\r\n\t\tcomponent: lazy(() => import('../../admin/AuthComponents/Profile')),\r\n\t},\r\n\r\n\t{\r\n\t\tpath: '/complex/list',\r\n\t\tcomponent: lazy(() => import('../../admin/components/complex/list')),\r\n\t},\r\n\r\n\t{\r\n\t\tpath: '/login',\r\n\t\tcomponent: lazy(() => import('../../admin/AuthComponents/Login')),\r\n\t\tlayout: 'BlankLayout',\r\n\t\tmeta: {\r\n\t\t\tauthRoute: true,\r\n\t\t},\r\n\t},\r\n\r\n\t{\r\n\t\tpath: '/resetpassword/:link',\r\n\t\tcomponent: lazy(() =>\r\n\t\t\timport('../../admin/AuthComponents/ResetPassword')\r\n\t\t),\r\n\t\tlayout: 'BlankLayout',\r\n\r\n\t\tmeta: {\r\n\t\t\tauthRoute: true,\r\n\t\t},\r\n\t},\r\n\r\n\t{\r\n\t\tpath: '/forgotpassword',\r\n\t\tcomponent: lazy(() =>\r\n\t\t\timport('../../admin/AuthComponents/ForgotPassword')\r\n\t\t),\r\n\t\tlayout: 'BlankLayout',\r\n\r\n\t\tmeta: {\r\n\t\t\tauthRoute: true,\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tpath: '/error',\r\n\t\tcomponent: lazy(() => import('../../views/Error')),\r\n\t\tlayout: 'BlankLayout',\r\n\t},\r\n];\r\n\r\nexport { DefaultRoute, TemplateTitle, Routes };\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useSkin = () => {\r\n  // ** State\r\n  const [skin, setSkin] = useState(() => {\r\n    try {\r\n      // ** Get from local storage by key\r\n      const item = window.localStorage.getItem('skin')\r\n      // ** Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : themeConfig.layout.skin\r\n    } catch (error) {\r\n      // ** If error also return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.skin\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(skin) : value\r\n      // ** Set state\r\n      setSkin(valueToStore)\r\n      // ** Save to local storage\r\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get Body Tag\r\n    const element = window.document.body\r\n\r\n    // ** Define classnames for skins\r\n    const classNames = {\r\n      dark: 'dark-layout',\r\n      bordered: 'bordered-layout',\r\n      'semi-dark': 'semi-dark-layout'\r\n    }\r\n\r\n    // ** Remove all classes from Body on mount\r\n    element.classList.remove(...element.classList)\r\n\r\n    // ** If skin is not light add skin class\r\n    if (skin !== 'light') {\r\n      element.classList.add(classNames[skin])\r\n    }\r\n  }, [skin])\r\n\r\n  return [skin, setValue]\r\n}\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\n\r\nconst BlankLayout = ({ children, ...rest }) => {\r\n  // ** Hooks\r\n  const [skin, setSkin] = useSkin()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className='blank-page'>\r\n      <div className='app-content content'>\r\n        <div className='content-wrapper'>\r\n          <div className='content-body'>{children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlankLayout\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport classnames from 'classnames'\r\nimport { Settings, X } from 'react-feather'\r\nimport { CustomInput, FormGroup } from 'reactstrap'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst Customizer = props => {\r\n  // ** Props\r\n  const {\r\n    skin,\r\n    setSkin,\r\n    isRtl,\r\n    setIsRtl,\r\n    layout,\r\n    setLayout,\r\n    navbarType,\r\n    setNavbarType,\r\n    footerType,\r\n    setFooterType,\r\n    navbarColor,\r\n    setNavbarColor,\r\n    isHidden,\r\n    setIsHidden,\r\n    contentWidth,\r\n    setContentWidth,\r\n    menuCollapsed,\r\n    setMenuCollapsed,\r\n    transition,\r\n    setTransition\r\n  } = props\r\n\r\n  // ** State\r\n  const [openCustomizer, setOpenCustomizer] = useState(false)\r\n\r\n  // ** Toggles Customizer\r\n  const handleToggle = e => {\r\n    e.preventDefault()\r\n    setOpenCustomizer(!openCustomizer)\r\n  }\r\n\r\n  // ** Render Layout Skin Options\r\n  const renderSkinsRadio = () => {\r\n    const skinsArr = [\r\n      {\r\n        name: 'light',\r\n        label: 'Light',\r\n        checked: skin === 'light'\r\n      },\r\n      {\r\n        name: 'bordered',\r\n        label: 'Bordered',\r\n        checked: skin === 'bordered'\r\n      },\r\n      {\r\n        name: 'dark',\r\n        label: 'Dark',\r\n        checked: skin === 'dark'\r\n      },\r\n      {\r\n        name: 'semi-dark',\r\n        label: 'Semi Dark',\r\n        checked: skin === 'semi-dark'\r\n      }\r\n    ]\r\n\r\n    return skinsArr.map((radio, index) => {\r\n      const marginCondition = index !== skinsArr.length - 1\r\n\r\n      if (layout === 'HorizontalLayout' && radio.name === 'semi-dark') {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <CustomInput\r\n          key={index}\r\n          type='radio'\r\n          id={radio.name}\r\n          label={radio.label}\r\n          checked={radio.checked}\r\n          onChange={() => setSkin(radio.name)}\r\n          className={classnames({ 'mr-1': marginCondition })}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Render Navbar Colors Options\r\n  const renderNavbarColors = () => {\r\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\r\n\r\n    return colorsArr.map(color => (\r\n      <li\r\n        key={color}\r\n        className={classnames(`color-box bg-${color}`, {\r\n          selected: navbarColor === color,\r\n          border: color === 'white'\r\n        })}\r\n        onClick={() => setNavbarColor(color)}\r\n      ></li>\r\n    ))\r\n  }\r\n\r\n  // ** Render Navbar Type Options\r\n  const renderNavbarTypeRadio = () => {\r\n    const navbarTypeArr = [\r\n      {\r\n        name: 'floating',\r\n        label: 'Floating',\r\n        checked: navbarType === 'floating'\r\n      },\r\n      {\r\n        name: 'sticky',\r\n        label: 'Sticky',\r\n        checked: navbarType === 'sticky'\r\n      },\r\n      {\r\n        name: 'static',\r\n        label: 'Static',\r\n        checked: navbarType === 'static'\r\n      },\r\n      {\r\n        name: 'hidden',\r\n        label: 'Hidden',\r\n        checked: navbarType === 'hidden'\r\n      }\r\n    ]\r\n\r\n    return navbarTypeArr.map((radio, index) => {\r\n      const marginCondition = index !== navbarTypeArr.length - 1\r\n\r\n      if (layout === 'HorizontalLayout' && radio.name === 'hidden') {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <CustomInput\r\n          key={index}\r\n          type='radio'\r\n          id={radio.name}\r\n          label={radio.label}\r\n          checked={radio.checked}\r\n          onChange={() => setNavbarType(radio.name)}\r\n          className={classnames({ 'mr-1': marginCondition })}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Render Footer Type Options\r\n  const renderFooterTypeRadio = () => {\r\n    const footerTypeArr = [\r\n      {\r\n        name: 'sticky',\r\n        label: 'Sticky',\r\n        checked: footerType === 'sticky'\r\n      },\r\n      {\r\n        name: 'static',\r\n        label: 'Static',\r\n        checked: footerType === 'static'\r\n      },\r\n      {\r\n        name: 'hidden',\r\n        label: 'Hidden',\r\n        checked: footerType === 'hidden'\r\n      }\r\n    ]\r\n\r\n    return footerTypeArr.map((radio, index) => {\r\n      const marginCondition = index !== footerTypeArr.length - 1\r\n\r\n      return (\r\n        <CustomInput\r\n          key={index}\r\n          type='radio'\r\n          id={`footer-${radio.name}`}\r\n          label={radio.label}\r\n          checked={radio.checked}\r\n          onChange={() => setFooterType(radio.name)}\r\n          className={classnames({ 'mr-1': marginCondition })}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  // **  Router Transition Options\r\n  const transitionOptions = [\r\n    { value: 'fadeIn', label: 'Fade' },\r\n    { value: 'fadeInLeft', label: 'Fade In Left' },\r\n    { value: 'zoomIn', label: 'Zoom In' },\r\n    { value: 'none', label: 'None' }\r\n  ]\r\n\r\n  // ** Get Current Transition\r\n  const transitionValue = transitionOptions.find(i => i.value === transition)\r\n\r\n  return (\r\n    <div\r\n      className={classnames('customizer d-none d-md-block', {\r\n        open: openCustomizer\r\n      })}\r\n    >\r\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\r\n        <Settings size={14} className='spinner' />\r\n      </a>\r\n      <PerfectScrollbar className='customizer-content'>\r\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\r\n          <h4 className='mb-0'>Theme Customizer</h4>\r\n          <p className='m-0'>Customize & Preview in Real Time</p>\r\n          <a href='/' className='customizer-close' onClick={handleToggle}>\r\n            <X />\r\n          </a>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <FormGroup className='mb-2'>\r\n            <p className='font-weight-bold'>Skin</p>\r\n            <div className='d-flex'>{renderSkinsRadio()}</div>\r\n          </FormGroup>\r\n\r\n          <FormGroup className='mb-2'>\r\n            <p className='font-weight-bold'>Content Width</p>\r\n            <div className='d-flex'>\r\n              <CustomInput\r\n                type='radio'\r\n                id='full-width'\r\n                className='mr-1'\r\n                label='Full Width'\r\n                checked={contentWidth === 'full'}\r\n                onChange={() => setContentWidth('full')}\r\n              />\r\n              <CustomInput\r\n                type='radio'\r\n                id='boxes'\r\n                label='Boxed'\r\n                checked={contentWidth === 'boxed'}\r\n                onChange={() => setContentWidth('boxed')}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n\r\n          <FormGroup className='mb-2'>\r\n            <div className='d-flex'>\r\n              <p className='font-weight-bold mr-auto mb-0'>RTL</p>\r\n              <CustomInput type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\r\n            </div>\r\n          </FormGroup>\r\n\r\n          <FormGroup className='mb-2'>\r\n            <div className='d-flex justify-content-between align-items-center'>\r\n              <p className='font-weight-bold mb-0'>Router Transition</p>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                defaultValue={transitionOptions[0]}\r\n                value={transitionValue}\r\n                options={transitionOptions}\r\n                isClearable={false}\r\n                onChange={({ value }) => setTransition(value)}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <p className='font-weight-bold'>Menu Layout</p>\r\n          <FormGroup className='mb-2'>\r\n            <div className='d-flex align-items-center'>\r\n              <CustomInput\r\n                type='radio'\r\n                id='vertical-layout'\r\n                label='Vertical'\r\n                checked={layout === 'VerticalLayout'}\r\n                onChange={() => setLayout('vertical')}\r\n                className='mr-1'\r\n              />\r\n              <CustomInput\r\n                type='radio'\r\n                id='horizontal-layout'\r\n                label='Horizontal'\r\n                checked={layout === 'HorizontalLayout'}\r\n                onChange={() => setLayout('horizontal')}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n          {layout !== 'HorizontalLayout' ? (\r\n            <FormGroup className='mb-2'>\r\n              <div className='d-flex align-items-center'>\r\n                <p className='font-weight-bold mr-auto mb-0'>Menu Collapsed</p>\r\n                <CustomInput\r\n                  type='switch'\r\n                  id='menu-collapsed'\r\n                  name='menu-collapsed'\r\n                  checked={menuCollapsed}\r\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\r\n                />\r\n              </div>\r\n            </FormGroup>\r\n          ) : null}\r\n\r\n          <FormGroup className='mb-2'>\r\n            <div className='d-flex align-items-center'>\r\n              <p className='font-weight-bold mr-auto mb-0'>Menu Hidden</p>\r\n              <CustomInput\r\n                type='switch'\r\n                id='menu-hidden'\r\n                name='menu-hidden'\r\n                checked={isHidden}\r\n                onChange={() => setIsHidden(!isHidden)}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          {layout !== 'HorizontalLayout' ? (\r\n            <FormGroup className='mb-2'>\r\n              <p className='font-weight-bold'>Navbar Color</p>\r\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\r\n            </FormGroup>\r\n          ) : null}\r\n\r\n          <FormGroup className='mb-2'>\r\n            <p className='font-weight-bold'>{layout === 'HorizontalLayout' ? 'Menu' : 'Navbar'} Type</p>\r\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\r\n          </FormGroup>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <FormGroup className='mb-2'>\r\n            <p className='font-weight-bold'>Footer Type</p>\r\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\r\n          </FormGroup>\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Customizer\r\n","// ** Icons Import\r\nimport { Heart } from 'react-feather'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <p className='clearfix mb-0'>\r\n      <span className='float-md-left d-block d-md-inline-block mt-25'>\r\n        COPYRIGHT © {new Date().getFullYear()}{' '}\r\n        <a href='https://1.envato.market/pixinvent_portfolio' target='_blank' rel='noopener noreferrer'>\r\n          Pixinvent\r\n        </a>\r\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\r\n      </span>\r\n      <span className='float-md-right d-none d-md-block'>\r\n        Hand-crafted & Made with\r\n        <Heart size={14} />\r\n      </span>\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","// ** UseJWT import to get config\r\nimport useJwt from \"@src/auth/jwt/useJwt\";\r\n\r\nconst config = useJwt.jwtConfig;\r\n\r\n// ** Handle User Login\r\nexport const handleLogin = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      data,\r\n      config,\r\n      [config.storageTokenKeyName]: data[config.storageTokenKeyName],\r\n      [config.storageRefreshTokenKeyName]:\r\n        data[config.storageRefreshTokenKeyName],\r\n    });\r\n\r\n    // ** Add to user, accessToken & refreshToken to localStorage\r\n    localStorage.setItem(\"userData\", JSON.stringify(data));\r\n    localStorage.setItem(\r\n      config.storageTokenKeyName,\r\n      JSON.stringify(data.accessToken)\r\n    );\r\n    localStorage.setItem(\r\n      config.storageRefreshTokenKeyName,\r\n      JSON.stringify(data.refreshToken)\r\n    );\r\n  };\r\n};\r\n\r\n// ** Handle User Logout\r\nexport const handleLogout = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n      [config.storageTokenKeyName]: null,\r\n      [config.storageRefreshTokenKeyName]: null,\r\n    });\r\n    // ** Remove user, accessToken & refreshToken from localStorage\r\n    localStorage.removeItem(\"userData\");\r\n    localStorage.removeItem(config.storageTokenKeyName);\r\n    localStorage.removeItem(config.storageRefreshTokenKeyName);\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/avatar-s-11.1d46cc62.jpg\";","// ** React Imports\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// ** Custom Components\r\nimport Avatar from \"@components/avatar\";\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from \"@utils\";\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from \"react-redux\";\r\nimport { handleLogout } from \"@store/actions/auth\";\r\n\r\n// ** Third Party Components\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport {\r\n  User,\r\n  Mail,\r\n  CheckSquare,\r\n  MessageSquare,\r\n  Settings,\r\n  CreditCard,\r\n  HelpCircle,\r\n  Power\r\n} from \"react-feather\";\r\n\r\n// ** Default Avatar Image\r\nimport defaultAvatar from \"@src/assets/images/portrait/small/avatar-s-11.jpg\";\r\nimport { userdatas } from \"../../../../localstorage/localdata\";\r\n\r\nconst UserDropdown = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch();\r\n\r\n  const defaultAvatars =\r\n    \"https://grandimageinc.com/wp-content/uploads/2015/09/icon-user-default.png\";\r\n  const userAvatar = userdatas?.User_Details.profile_image\r\n    ? userdatas.User_Details.profile_image\r\n    : defaultAvatars;\r\n  return (\r\n    <UncontrolledDropdown tag=\"li\" className=\"dropdown-user nav-item\">\r\n      <DropdownToggle\r\n        href=\"/\"\r\n        tag=\"a\"\r\n        className=\"nav-link dropdown-user-link\"\r\n        onClick={(e) => e.preventDefault()}\r\n      >\r\n        <div className=\"user-nav d-sm-flex d-none\">\r\n          <span className=\"user-name font-weight-bold\">\r\n            {(userdatas &&\r\n              userdatas.User_Details.name.charAt(0).toUpperCase() +\r\n                userdatas.User_Details.name.slice(1)) ||\r\n              \"Admin\"}\r\n          </span>\r\n          <span className=\"user-status\">\r\n            {(userdatas &&\r\n              userdatas.User_Details.name.charAt(0).toUpperCase() +\r\n                userdatas.User_Details.name.slice(1)) ||\r\n              \"Admin\"}\r\n          </span>\r\n        </div>\r\n        <Avatar img={userAvatar} imgHeight=\"40\" imgWidth=\"40\" status=\"online\" />\r\n      </DropdownToggle>\r\n      <DropdownMenu right>\r\n        <Link to=\"/profile\">\r\n          <DropdownItem>\r\n            <User size={14} className=\"mr-75\" />\r\n            <span className=\"align-middle\">Profile</span>\r\n          </DropdownItem>\r\n        </Link>\r\n        <DropdownItem\r\n          tag={Link}\r\n          to=\"/login\"\r\n          onClick={() => dispatch(handleLogout())}\r\n        >\r\n          <Power size={14} className=\"mr-75\" />\r\n          <span className=\"align-middle\">Logout</span>\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  );\r\n};\r\n\r\nexport default UserDropdown;\r\n","// ** Dropdowns Imports\r\nimport { Fragment } from 'react'\r\n\r\nimport UserDropdown from './UserDropdown'\r\n\r\n// ** Third Party Components\r\nimport { Sun, Moon, Menu } from 'react-feather'\r\nimport { NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavbarUser = props => {\r\n  // ** Props\r\n  const { skin, setSkin, setMenuVisibility } = props\r\n\r\n  // ** Function to toggle Theme (Light/Dark)\r\n  const ThemeToggler = () => {\r\n    if (skin === 'dark') {\r\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\r\n    } else {\r\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className='navbar-nav d-xl-none d-flex align-items-center'>\r\n        <NavItem className='mobile-menu mr-auto'>\r\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\r\n            <Menu className='ficon' />\r\n          </NavLink>\r\n        </NavItem>\r\n      </ul>\r\n      <div className='bookmark-wrapper d-flex align-items-center'>\r\n        <NavItem className='d-none d-lg-block'>\r\n          <NavLink className='nav-link-style'>\r\n            <ThemeToggler />\r\n          </NavLink>\r\n        </NavItem>\r\n      </div>\r\n      <ul className='nav navbar-nav align-items-center ml-auto'>\r\n        <UserDropdown />\r\n      </ul>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default NavbarUser\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport NavbarUser from './NavbarUser'\r\n\r\nconst ThemeNavbar = props => {\r\n  // ** Props\r\n  const { skin, setSkin, setMenuVisibility } = props\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavbarUser skin={skin} setSkin={setSkin} setMenuVisibility={setMenuVisibility} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ThemeNavbar\r\n","import {\r\n\tMail,\r\n\tHome,\r\n\tFileText,\r\n\tCircle,\r\n\tUser,\r\n\tUsers,\r\n\tTool,\r\n\tSpeaker,\r\n} from 'react-feather';\r\nimport { userdatas } from '../../localstorage/localdata';\r\n\r\nvar rolecheck = userdatas?.User_Details?.role;\r\n\r\nexport default [\r\n\t{\r\n\t\tid: 'Dashboard',\r\n\t\ttitle: 'Dashboard',\r\n\t\ticon: <Home size={20} />,\r\n\t\tnavLink: '/dashboard',\r\n\t},\r\n\r\n\trolecheck == 'admin'\r\n\t\t? {\r\n\t\t\t\tid: 'chairmanApp',\r\n\t\t\t\ttitle: 'Chairman',\r\n\t\t\t\ticon: <Users size={20} />,\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: 'userManage',\r\n\t\t\t\t\t\ttitle: 'Lists',\r\n\t\t\t\t\t\ticon: <Circle size={12} />,\r\n\t\t\t\t\t\tnavLink: '/chairman/list',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t  }\r\n\t\t: {\r\n\t\t\t\tid: 'userApp',\r\n\t\t\t\ttitle: 'User',\r\n\t\t\t\ticon: <User size={20} />,\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: 'userManage',\r\n\t\t\t\t\t\ttitle: 'Lists',\r\n\t\t\t\t\t\ticon: <Circle size={12} />,\r\n\t\t\t\t\t\tnavLink: '/user/list',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t  },\r\n\r\n\t{\r\n\t\tid: 'complexApp',\r\n\t\ttitle: 'Complex',\r\n\t\ticon: <Home size={20} />,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tid: 'complexManage',\r\n\t\t\t\ttitle: 'Lists',\r\n\t\t\t\ticon: <Circle size={12} />,\r\n\t\t\t\tnavLink: '/complex/list',\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\r\n\t{\r\n\t\tid: 'VendorApp',\r\n\t\ttitle: 'Vendor',\r\n\t\ticon: <Tool size={20} />,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tid: 'complexManage',\r\n\t\t\t\ttitle: 'Lists',\r\n\t\t\t\ticon: <Circle size={12} />,\r\n\t\t\t\tnavLink: '/vendor/list',\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\r\n\t{\r\n\t\tid: 'AnnouncementApp',\r\n\t\ttitle: 'Announcement',\r\n\t\ticon: <Speaker size={20} />,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tid: 'announcementManage',\r\n\t\t\t\ttitle: 'Lists',\r\n\t\t\t\ticon: <Circle size={12} />,\r\n\t\t\t\tnavLink: '/announcement/list',\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport { Disc, X, Circle } from 'react-feather'\r\n\r\n// ** Config\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nconst VerticalMenuHeader = props => {\r\n  // ** Props\r\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\r\n\r\n  // ** Reset open group\r\n  useEffect(() => {\r\n    if (!menuHover && menuCollapsed) setGroupOpen([])\r\n  }, [menuHover, menuCollapsed])\r\n\r\n  // ** Menu toggler component\r\n  const Toggler = () => {\r\n    if (!menuCollapsed) {\r\n      return (\r\n        <Disc\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(true)}\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <Circle\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(false)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='navbar-header'>\r\n      <ul className='nav navbar-nav flex-row'>\r\n        <li className='nav-item mr-auto'>\r\n          <NavLink to='/' className='navbar-brand'>\r\n            <span className='brand-logo'>\r\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\r\n            </span>\r\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\r\n          </NavLink>\r\n        </li>\r\n        <li className='nav-item nav-toggle'>\r\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\r\n            <Toggler />\r\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalMenuHeader\r\n","// ** React Imports\r\nimport { useContext } from 'react'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveVerticalNavMenuItemComponent = item => {\r\n  if (item.header) return 'VerticalNavMenuSectionHeader'\r\n  if (item.children) return 'VerticalNavMenuGroup'\r\n  return 'VerticalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveHorizontalNavMenuItemComponent = item => {\r\n  if (item.children) return 'HorizontalNavMenuGroup'\r\n  return 'HorizontalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Check if nav-link is active\r\n * @param {Object} link nav-link object\r\n */\r\n// export const isNavLinkActive = (link, currentURL, match) => {\r\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\r\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\r\n//   return (\r\n//     currentURL === link ||\r\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\r\n//   )\r\n// }\r\n\r\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\r\n  return (\r\n    currentURL === link ||\r\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\r\n  )\r\n  // return currentURL === link\r\n}\r\n\r\n/**\r\n * Check if nav group is\r\n * @param {Array} children Group children\r\n */\r\n// export const isNavGroupActive = (children, currentURL, match) => {\r\n//   return children.some(child => {\r\n//     // If child have children => It's group => Go deeper(recursive)\r\n//     if (child.children) {\r\n//       return isNavGroupActive(child.children, currentURL, match)\r\n//     }\r\n//     // else it's link => Check for matched Route\r\n//     return isNavLinkActive(child.navLink, currentURL, match)\r\n//   })\r\n// }\r\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\r\n  return children.some(child => {\r\n    // If child have children => It's group => Go deeper(recursive)\r\n    if (child.children) {\r\n      return isNavGroupActive(child.children, currentURL, routerProps)\r\n    }\r\n    // else it's link => Check for matched Route\r\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\r\n  })\r\n}\r\n\r\n/**\r\n * Search for parent object\r\n * @param {Array} navigation Group children\r\n * @param {string} currentURL current URL\r\n */\r\n// export const search = (navigation, currentURL, match) => {\r\n//   let result\r\n//   navigation.some(child => {\r\n//     let children\r\n//     // If child have children => It's group => Go deeper(recursive)\r\n//     if (child.children && (children = search(child.children, currentURL, match))) {\r\n//       return (result = {\r\n//         id: child.id,\r\n//         children\r\n//       })\r\n//     }\r\n\r\n//     // else it's link => Check for matched Route\r\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\r\n//       return (result = {\r\n//         id: child.id\r\n//       })\r\n//     }\r\n//   })\r\n//   return result\r\n// }\r\n\r\nexport const search = (navigation, currentURL, routerProps) => {\r\n  let result\r\n  navigation.some(child => {\r\n    let children\r\n    // If child have children => It's group => Go deeper(recursive)\r\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\r\n      return (result = {\r\n        id: child.id,\r\n        children\r\n      })\r\n    }\r\n\r\n    // else it's link => Check for matched Route\r\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\r\n      return (result = {\r\n        id: child.id\r\n      })\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\n/**\r\n * Loop through nested object\r\n * @param {object} obj nested object\r\n */\r\nexport const getAllParents = (obj, match) => {\r\n  const res = []\r\n  const recurse = (obj, current) => {\r\n    for (const key in obj) {\r\n      const value = obj[key]\r\n      if (value !== undefined) {\r\n        if (value && typeof value === 'object') {\r\n          recurse(value, key)\r\n        } else {\r\n          if (key === match) {\r\n            res.push(value)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  recurse(obj)\r\n  return res\r\n}\r\n\r\nexport const canViewMenuGroup = item => {\r\n  const ability = useContext(AbilityContext)\r\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\r\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\r\n\r\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\r\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\r\n  if (!(item.action && item.resource)) {\r\n    return hasAnyVisibleChild\r\n  }\r\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\r\n}\r\n\r\nexport const canViewMenuItem = item => {\r\n  const ability = useContext(AbilityContext)\r\n  return ability.can(item.action, item.resource)\r\n}\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink, useLocation, matchPath, useParams } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport { Badge } from 'reactstrap'\r\nimport classnames from 'classnames'\r\n\r\n// ** Vertical Menu Array Of Items\r\nimport navigation from '@src/navigation/vertical'\r\n\r\n// ** Utils\r\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\r\n\r\nconst VerticalNavMenuLink = ({\r\n  item,\r\n  groupActive,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  groupOpen,\r\n  setGroupOpen,\r\n  toggleActiveGroup,\r\n  parentItem,\r\n  routerProps,\r\n  currentActiveItem\r\n}) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** URL Vars\r\n  const location = useLocation()\r\n  const currentURL = location.pathname\r\n\r\n  // ** To match path\r\n  const match = matchPath(currentURL, {\r\n    path: `${item.navLink}/:param`,\r\n    exact: true,\r\n    strict: false\r\n  })\r\n\r\n  // ** Search for current item parents\r\n  const searchParents = (navigation, currentURL) => {\r\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\r\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\r\n    return allParents\r\n  }\r\n\r\n  // ** URL Vars\r\n  const resetActiveGroup = navLink => {\r\n    const parents = search(navigation, navLink, match)\r\n    toggleActiveGroup(item.id, parents)\r\n  }\r\n\r\n  // ** Reset Active & Open Group Arrays\r\n  const resetActiveAndOpenGroups = () => {\r\n    setGroupActive([])\r\n    setGroupOpen([])\r\n  }\r\n\r\n  // ** Checks url & updates active item\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n      const arr = searchParents(navigation, currentURL)\r\n      setGroupActive([...arr])\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <li\r\n      className={classnames({\r\n        'nav-item': !item.children,\r\n        disabled: item.disabled,\r\n        active: item.navLink === activeItem\r\n      })}\r\n    >\r\n      <LinkTag\r\n        className='d-flex align-items-center'\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: (match, location) => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (match.url && match.url !== '' && match.url === item.navLink) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n        /*eslint-enable */\r\n        onClick={e => {\r\n          if (!item.navLink.length) {\r\n            e.preventDefault()\r\n          }\r\n          parentItem ? resetActiveGroup(item.navLink) : resetActiveAndOpenGroups()\r\n        }}\r\n      >\r\n        {item.icon}\r\n        <span className='menu-item text-truncate'>{item.title}</span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuLink\r\n","// ** React Imports\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Collapse, Badge } from 'reactstrap'\r\n\r\n// ** Vertical Menu Items Component\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\n// ** Utils\r\nimport { isNavGroupActive, getAllParents } from '@layouts/utils'\r\n\r\nconst VerticalNavMenuGroup = ({\r\n  item,\r\n  groupActive,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  groupOpen,\r\n  setGroupOpen,\r\n  parentItem,\r\n  menuCollapsed,\r\n  menuHover,\r\n  routerProps,\r\n  currentActiveItem\r\n}) => {\r\n  // ** Current Val\r\n  const currentURL = useLocation().pathname\r\n\r\n  // ** Toggles Open Group\r\n  const toggleOpenGroup = (item, parentItem) => {\r\n    let openArr = groupOpen\r\n    let allParents\r\n\r\n    if (parentItem) {\r\n      allParents = getAllParents(parentItem, 'id')\r\n      allParents.pop()\r\n    }\r\n\r\n    // ** If user clicked on menu group inside already opened group i.g. when user click on blog group inside pages group\r\n    if (groupOpen && allParents && groupOpen[0] === allParents[0]) {\r\n      groupOpen.includes(item) ? openArr.splice(openArr.indexOf(item), 1) : openArr.push(item)\r\n    } else {\r\n      openArr = []\r\n      if (!groupOpen.includes(item)) {\r\n        openArr.push(item)\r\n      }\r\n    }\r\n\r\n    // ** Set Open Group\r\n    setGroupOpen([...openArr])\r\n  }\r\n\r\n  // ** Toggle Active Group\r\n  const toggleActiveGroup = (item, parentItem) => {\r\n    let activeArr = groupActive\r\n    let allParents\r\n\r\n    if (parentItem) {\r\n      allParents = getAllParents(parentItem, 'id')\r\n      activeArr = allParents\r\n    } else {\r\n      activeArr.includes(item) ? activeArr.splice(activeArr.indexOf(item), 1) : activeArr.push(item)\r\n    }\r\n\r\n    // ** Set open group removing any activegroup item present in opengroup state\r\n    const openArr = groupOpen.filter(val => !activeArr.includes(val))\r\n    setGroupOpen([...openArr])\r\n\r\n    // **  Set Active Group\r\n    setGroupActive([...activeArr])\r\n  }\r\n\r\n  // ** On Group Item Click\r\n  const onCollapseClick = (e, item) => {\r\n    if ((groupActive && groupActive.includes(item.id)) || isNavGroupActive(item.children, currentURL, routerProps)) {\r\n      toggleActiveGroup(item.id)\r\n    } else {\r\n      toggleOpenGroup(item.id, parentItem)\r\n    }\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  // ** Returns condition to add open class\r\n  const openClassCondition = id => {\r\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\r\n      if (groupActive.includes(id) || groupOpen.includes(item.id)) {\r\n        return true\r\n      }\r\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\r\n      return false\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item has-sub', {\r\n        open: openClassCondition(item.id),\r\n        'menu-collapsed-open': groupActive.includes(item.id),\r\n        'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id)\r\n      })}\r\n    >\r\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\r\n        {item.icon}\r\n        <span className='menu-title text-truncate'>{item.title}</span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </Link>\r\n\r\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\r\n      <ul className='menu-content'>\r\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\r\n          <VerticalNavMenuItems\r\n            items={item.children}\r\n            groupActive={groupActive}\r\n            setGroupActive={setGroupActive}\r\n            groupOpen={groupOpen}\r\n            setGroupOpen={setGroupOpen}\r\n            toggleActiveGroup={toggleActiveGroup}\r\n            parentItem={item}\r\n            menuCollapsed={menuCollapsed}\r\n            menuHover={menuHover}\r\n            routerProps={routerProps}\r\n            currentActiveItem={currentActiveItem}\r\n            activeItem={activeItem}\r\n            setActiveItem={setActiveItem}\r\n          />\r\n        </Collapse>\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuGroup\r\n","// ** Third Party Components\r\nimport { MoreHorizontal } from 'react-feather'\r\n\r\nconst VerticalNavMenuSectionHeader = ({ item, index }) => {\r\n\r\n\r\n  return (\r\n    <li className='navigation-header'>\r\n      <span>{item.header}</span>\r\n      <MoreHorizontal className='feather-more-horizontal' />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuSectionHeader\r\n","// ** Vertical Menu Components\r\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\r\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\r\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\r\n\r\n// ** Utils\r\nimport { resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\r\n\r\nconst VerticalMenuNavItems = props => {\r\n  // ** Components Object\r\n  const Components = {\r\n    VerticalNavMenuSectionHeader,\r\n    VerticalNavMenuGroup,\r\n    VerticalNavMenuLink\r\n  }\r\n\r\n  // ** Render Nav Menu Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    const TagName = Components[resolveNavItemComponent(item)]\r\n\r\n    return <TagName key={item.id || item.header} item={item} {...props} />\r\n  })\r\n\r\n  return RenderNavItems\r\n}\r\n\r\nexport default VerticalMenuNavItems\r\n","// ** React Imports\r\nimport { Fragment, useState, useRef } from 'react'\r\n\r\n// ** Vertical Menu Items Array\r\nimport navigation from '@src/navigation/vertical'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Vertical Menu Components\r\nimport VerticalMenuHeader from './VerticalMenuHeader'\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const { menuCollapsed, routerProps, menu, currentActiveItem, skin } = props\r\n\r\n  // ** States\r\n  const [groupOpen, setGroupOpen] = useState([])\r\n  const [groupActive, setGroupActive] = useState([])\r\n  const [activeItem, setActiveItem] = useState(null)\r\n\r\n  // ** Menu Hover State\r\n  const [menuHover, setMenuHover] = useState(false)\r\n\r\n  // ** Ref\r\n  const shadowRef = useRef(null)\r\n\r\n  // ** Function to handle Mouse Enter\r\n  const onMouseEnter = () => {\r\n    if (menuCollapsed) {\r\n      setMenuHover(true)\r\n    }\r\n  }\r\n\r\n  // ** Scroll Menu\r\n  const scrollMenu = container => {\r\n    if (shadowRef && container.scrollTop > 0) {\r\n      if (!shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.add('d-block')\r\n      }\r\n    } else {\r\n      if (shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.remove('d-block')\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\r\n          expanded: menuHover || menuCollapsed === false,\r\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\r\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\r\n        })}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={() => setMenuHover(false)}\r\n      >\r\n        {menu ? (\r\n          menu(props)\r\n        ) : (\r\n          <Fragment>\r\n            {/* Vertical Menu Header */}\r\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\r\n            {/* Vertical Menu Header Shadow */}\r\n            <div className='shadow-bottom' ref={shadowRef}></div>\r\n            {/* Perfect Scrollbar */}\r\n            <PerfectScrollbar\r\n              className='main-menu-content'\r\n              options={{ wheelPropagation: false }}\r\n              onScrollY={container => scrollMenu(container)}\r\n            >\r\n              <ul className='navigation navigation-main'>\r\n                <VerticalNavMenuItems\r\n                  items={navigation}\r\n                  groupActive={groupActive}\r\n                  setGroupActive={setGroupActive}\r\n                  activeItem={activeItem}\r\n                  setActiveItem={setActiveItem}\r\n                  groupOpen={groupOpen}\r\n                  setGroupOpen={setGroupOpen}\r\n                  routerProps={routerProps}\r\n                  menuCollapsed={menuCollapsed}\r\n                  menuHover={menuHover}\r\n                  currentActiveItem={currentActiveItem}\r\n                />\r\n              </ul>\r\n            </PerfectScrollbar>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { handleRTL } from '@store/actions/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRTL = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const isRtl = useSelector(state => state.layout.isRTL)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(isRtl) : value\r\n      dispatch(handleRTL(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get HTML Tag\r\n    const element = document.getElementsByTagName('html')[0]\r\n\r\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\r\n    if (isRtl) {\r\n      element.setAttribute('dir', 'rtl')\r\n    } else {\r\n      element.setAttribute('dir', 'ltr')\r\n    }\r\n  }, [isRtl])\r\n\r\n  return [isRtl, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarType = () => {\r\n  // ** State\r\n  const [navbarType, setNavbarType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarType) : value\r\n\r\n      // ** Set state\r\n      setNavbarType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarType, setValue]\r\n}\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useFooterType = () => {\r\n  // ** State\r\n  const [footerType, setFooterType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.footer.type\r\n    } catch (error) {\r\n      // ** If error also initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.footer.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(footerType) : value\r\n\r\n      // ** Set state\r\n      setFooterType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [footerType, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarColor = () => {\r\n  // ** State\r\n  const [navbarColor, setNavbarColor] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarColor) : value\r\n\r\n      // ** Set state\r\n      setNavbarColor(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarColor, setValue]\r\n}\r\n","// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\nimport ScrollToTop from 'react-scroll-up'\r\nimport { Navbar, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\nimport Customizer from '@components/customizer'\r\nimport FooterComponent from './components/footer'\r\nimport NavbarComponent from './components/navbar'\r\nimport SidebarComponent from './components/menu/vertical-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\r\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\r\n\r\nconst VerticalLayout = props => {\r\n  // ** Props\r\n  const { children, navbar, footer, menu, routerProps, currentActiveItem } = props\r\n\r\n  // ** Hooks\r\n  const [skin, setSkin] = useSkin()\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const [navbarType, setNavbarType] = useNavbarType()\r\n  const [footerType, setFooterType] = useFooterType()\r\n  const [navbarColor, setNavbarColor] = useNavbarColor()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [menuVisibility, setMenuVisibility] = useState(false)\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Update Window Width\r\n  const handleWindowWidth = () => {\r\n    setWindowWidth(window.innerWidth)\r\n  }\r\n\r\n  // ** Vars\r\n  const location = useLocation()\r\n  const contentWidth = layoutStore.contentWidth\r\n  const menuCollapsed = layoutStore.menuCollapsed\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  // ** Toggles Menu Collapsed\r\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  //** This function will detect the Route Change and will hide the menu on menu item click\r\n  useEffect(() => {\r\n    if (menuVisibility && windowWidth < 1200) {\r\n      setMenuVisibility(false)\r\n    }\r\n  }, [location])\r\n\r\n  //** Sets Window Size & Layout Props\r\n  useEffect(() => {\r\n    if (window !== undefined) {\r\n      window.addEventListener('resize', handleWindowWidth)\r\n    }\r\n  }, [windowWidth])\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static',\r\n    hidden: 'navbar-hidden'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: 'floating-nav',\r\n    sticky: 'fixed-top',\r\n    static: 'navbar-static-top',\r\n    hidden: 'd-none'\r\n  }\r\n\r\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\r\n          footerClasses[footerType] || 'footer-static'\r\n        }`,\r\n        {\r\n          // Modern Menu\r\n          'vertical-menu-modern': windowWidth >= 1200,\r\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\r\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\r\n\r\n          // Overlay Menu\r\n          'vertical-overlay-menu': windowWidth < 1200,\r\n          'menu-hide': !menuVisibility && windowWidth < 1200,\r\n          'menu-open': menuVisibility && windowWidth < 1200\r\n        }\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      {!isHidden ? (\r\n        <SidebarComponent\r\n          skin={skin}\r\n          menu={menu}\r\n          menuCollapsed={menuCollapsed}\r\n          menuVisibility={menuVisibility}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          setMenuVisibility={setMenuVisibility}\r\n          routerProps={routerProps}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n        \r\n      ) : null}\r\n\r\n      <Navbar\r\n        expand='lg'\r\n        light={skin !== 'dark'}\r\n        dark={skin === 'dark' || bgColorCondition}\r\n        color={bgColorCondition ? navbarColor : undefined}\r\n        className={classnames(\r\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\r\n        )}\r\n      >\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? (\r\n            navbar({ setMenuVisibility, skin, setSkin })\r\n          ) : (\r\n            <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />\r\n          )}\r\n        </div>\r\n      </Navbar>\r\n      {children}\r\n\r\n      {/* Vertical Nav Menu Overlay */}\r\n      <div\r\n        className={classnames('sidenav-overlay', {\r\n          show: menuVisibility\r\n        })}\r\n        onClick={() => setMenuVisibility(false)}\r\n      ></div>\r\n      {/* Vertical Nav Menu Overlay */}\r\n\r\n      {themeConfig.layout.customizer === true ? (\r\n        <Customizer\r\n          skin={skin}\r\n          setSkin={setSkin}\r\n          footerType={footerType}\r\n          setFooterType={setFooterType}\r\n          navbarType={navbarType}\r\n          setNavbarType={setNavbarType}\r\n          navbarColor={navbarColor}\r\n          setNavbarColor={setNavbarColor}\r\n          isRtl={isRtl}\r\n          setIsRtl={setIsRtl}\r\n          layout={props.layout}\r\n          setLayout={props.setLayout}\r\n          isHidden={isHidden}\r\n          setIsHidden={setIsHidden}\r\n          contentWidth={contentWidth}\r\n          setContentWidth={setContentWidth}\r\n          menuCollapsed={menuCollapsed}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          transition={props.transition}\r\n          setTransition={props.setTransition}\r\n          themeConfig={themeConfig}\r\n        />\r\n      ) : null}\r\n      <footer\r\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\r\n          'd-none': footerType === 'hidden'\r\n        })}\r\n      >\r\n        {footer ? (\r\n          footer({ footerType, footerClasses })\r\n        ) : (\r\n          <FooterComponent footerType={footerType} footerClasses={footerClasses} />\r\n        )}\r\n      </footer>\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalLayout\r\n","// !Do not remove the Layout import\r\nimport Layout from '@layouts/VerticalLayout'\r\n\r\n// ** Components\r\n// import CustomMenu from './components/Menu'\r\n// import CustomNavbar from './components/Navbar'\r\n// import CustomFooter from './components/Footer'\r\n\r\nconst VerticalLayout = props => (\r\n  \r\n  <Layout\r\n    // menu={props => <CustomMenu {...props} />}\r\n    // navbar={props => <CustomNavbar {...props} />}\r\n    // footer={props => <CustomFooter {...props} />}\r\n    {...props}\r\n  >\r\n    {props.children}\r\n  </Layout>\r\n\r\n\r\n\r\n)\r\n\r\nexport default VerticalLayout\r\n","import { Mail, Home } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'home',\r\n    title: 'Home',\r\n    icon: <Home size={20} />,\r\n    navLink: '/home'\r\n  },\r\n  {\r\n    id: 'secondPage',\r\n    title: 'Second Page',\r\n    icon: <Mail size={20} />,\r\n    navLink: '/second-page'\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\n\r\n// ** Horizontal menu items array\r\nimport navigation from '@src/navigation/horizontal'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Utils\r\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\r\n\r\nconst HorizontalNavMenuLink = ({\r\n  item,\r\n  setOpenDropdown,\r\n  setGroupActive,\r\n  activeItem,\r\n  setActiveItem,\r\n  routerProps,\r\n  currentActiveItem,\r\n  isChild\r\n}) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\n\r\n  // ** URL Vars\r\n  const location = useLocation()\r\n  const currentURL = location.pathname\r\n\r\n  const navLinkActive = isNavLinkActive(item.navLink, currentURL, routerProps)\r\n\r\n  // ** Get parents of current items\r\n  const searchParents = (navigation, currentURL) => {\r\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\r\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\r\n    allParents.pop()\r\n    return allParents\r\n  }\r\n\r\n  // ** Remove all items from OpenDropdown array\r\n  const resetOpenDropdowns = () => setOpenDropdown([])\r\n\r\n  // ** On mount update active group array\r\n  useEffect(() => {\r\n    if (currentActiveItem !== null) {\r\n      setActiveItem(currentActiveItem)\r\n      const arr = searchParents(navigation, currentURL)\r\n      setGroupActive([...arr])\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item', {\r\n        active: item.navLink === activeItem,\r\n        disabled: item.disabled\r\n      })}\r\n      onClick={resetOpenDropdowns}\r\n    >\r\n      <LinkTag\r\n        className={classnames('d-flex align-items-center', {\r\n          'dropdown-item': isChild,\r\n          'nav-link': !isChild\r\n        })}\r\n        tag={LinkTag}\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              isActive: (match, location) => {\r\n                if (!match) {\r\n                  return false\r\n                }\r\n\r\n                if (match.url && match.url !== '' && match.url === item.navLink) {\r\n                  currentActiveItem = item.navLink\r\n                }\r\n              }\r\n            })}\r\n        /*eslint-enable */\r\n      >\r\n        {item.icon}\r\n        <span>{item.title}</span>\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuLink\r\n","// ** React Imports\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { isNavGroupActive } from '@layouts/utils'\r\n\r\n// ** Horizontal Menu Items Component\r\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\r\n\r\nconst HorizontalNavMenuGroup = props => {\r\n  // ** Props\r\n  const {\r\n    item,\r\n    submenu,\r\n    groupActive,\r\n    onMouseEnter,\r\n    onMouseLeave,\r\n    openDropdown,\r\n    setGroupActive,\r\n    activeItem,\r\n    setActiveItem,\r\n    routerProps,\r\n    setOpenDropdown,\r\n    currentActiveItem\r\n  } = props\r\n\r\n  // ** URL Var\r\n  const currentURL = useLocation().pathname\r\n\r\n  // ** Dropdown menu modifiers\r\n  const menuModifiers = {\r\n    setMaxHeight: {\r\n      enabled: true,\r\n      fn: data => {\r\n        const pageHeight = window.innerHeight,\r\n          ddTop = data.instance.reference.getBoundingClientRect().top,\r\n          ddHeight = data.popper.height\r\n        let maxHeight, stylesObj\r\n\r\n        // ** Calculate and set height\r\n        if (pageHeight - ddTop - ddHeight - 28 < 1) {\r\n          maxHeight = pageHeight - ddTop - 25\r\n          stylesObj = {\r\n            maxHeight,\r\n            overflowY: 'auto'\r\n          }\r\n        }\r\n\r\n        const ddRef = data.instance.popper.getBoundingClientRect()\r\n\r\n        // ** If there is not space left to open sub menu open it to the right\r\n        if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\r\n          data.instance.popper.closest('.dropdown').classList.add('openLeft')\r\n        }\r\n\r\n        return {\r\n          ...data,\r\n          styles: {\r\n            ...stylesObj\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <Dropdown\r\n      tag='li'\r\n      className={classnames({\r\n        'nav-item': submenu === false,\r\n        'dropdown-submenu': submenu === true,\r\n        'sidebar-group-active active':\r\n          isNavGroupActive(item.children, currentURL, routerProps) || groupActive.includes(item.id)\r\n      })}\r\n      isOpen={openDropdown.includes(item.id)}\r\n      toggle={() => onMouseEnter(item.id)}\r\n      onMouseEnter={() => onMouseEnter(item.id)}\r\n      onMouseLeave={() => onMouseLeave(item.id)}\r\n    >\r\n      <DropdownToggle\r\n        to='/'\r\n        tag={Link}\r\n        className={classnames('dropdown-toggle d-flex align-items-center', {\r\n          'dropdown-item': submenu === true,\r\n          'nav-link': submenu === false\r\n        })}\r\n        onClick={e => e.preventDefault()}\r\n      >\r\n        {item.icon}\r\n        <span>{item.title}</span>\r\n      </DropdownToggle>\r\n      <DropdownMenu tag='ul' modifiers={menuModifiers}>\r\n        <HorizontalNavMenuItems\r\n          submenu={true}\r\n          parentItem={item}\r\n          items={item.children}\r\n          activeItem={activeItem}\r\n          groupActive={groupActive}\r\n          routerProps={routerProps}\r\n          openDropdown={openDropdown}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          setActiveItem={setActiveItem}\r\n          setGroupActive={setGroupActive}\r\n          isChild={true}\r\n          setOpenDropdown={setOpenDropdown}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuGroup\r\n","// ** Menu Components Imports\r\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\r\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\r\nimport { resolveHorizontalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\r\n\r\nconst HorizontalNavMenuItems = props => {\r\n  // ** Components Object\r\n  const Components = {\r\n    HorizontalNavMenuGroup,\r\n    HorizontalNavMenuLink\r\n  }\r\n\r\n  // ** Render Nav Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    const TagName = Components[resolveNavItemComponent(item)]\r\n\r\n    return <TagName item={item} index={index} key={item.id} {...props} />\r\n  })\r\n\r\n  return RenderNavItems\r\n}\r\n\r\nexport default HorizontalNavMenuItems\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Horizontal Menu Array\r\nimport navigation from '@src/navigation/horizontal'\r\n\r\n// ** Horizontal Menu Components\r\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\r\n\r\nconst HorizontalMenu = ({ currentActiveItem, routerProps }) => {\r\n  // ** States\r\n  const [activeItem, setActiveItem] = useState(null)\r\n  const [groupActive, setGroupActive] = useState([])\r\n  const [openDropdown, setOpenDropdown] = useState([])\r\n\r\n  // ** On mouse enter push the ID to openDropdown array\r\n  const onMouseEnter = id => {\r\n    const arr = openDropdown\r\n    arr.push(id)\r\n    setOpenDropdown([...arr])\r\n  }\r\n\r\n  // ** On mouse leave remove the ID to openDropdown array\r\n  const onMouseLeave = id => {\r\n    const arr = openDropdown\r\n    arr.splice(arr.indexOf(id), 1)\r\n    setOpenDropdown([...arr])\r\n  }\r\n\r\n  return (\r\n    <div className='navbar-container main-menu-content'>\r\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\r\n        <HorizontalNavMenuItems\r\n          submenu={false}\r\n          items={navigation}\r\n          activeItem={activeItem}\r\n          groupActive={groupActive}\r\n          routerProps={routerProps}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          openDropdown={openDropdown}\r\n          setActiveItem={setActiveItem}\r\n          setGroupActive={setGroupActive}\r\n          setOpenDropdown={setOpenDropdown}\r\n          currentActiveItem={currentActiveItem}\r\n        />\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HorizontalMenu\r\n","// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleMenuHidden, handleContentWidth } from '@store/actions/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\nimport ScrollToTop from 'react-scroll-up'\r\nimport { Navbar, NavItem, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\nimport Customizer from '@components/customizer'\r\nimport NavbarComponent from './components/navbar'\r\nimport FooterComponent from './components/footer'\r\nimport MenuComponent from './components/menu/horizontal-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\r\n\r\nconst HorizontalLayout = props => {\r\n  // ** Props\r\n  const { children, navbar, footer, menu, currentActiveItem, routerProps } = props\r\n\r\n  // ** Hooks\r\n  const [skin, setSkin] = useSkin()\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const [navbarType, setNavbarType] = useNavbarType()\r\n  const [footerType, setFooterType] = useFooterType()\r\n  const [navbarColor, setNavbarColor] = useNavbarColor()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Vars\r\n  const contentWidth = layoutStore.contentWidth\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  // ** UseEffect Cleanup\r\n  const cleanup = () => {\r\n    setIsMounted(false)\r\n    setNavbarScrolled(false)\r\n  }\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    window.addEventListener('scroll', function () {\r\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\r\n        setNavbarScrolled(true)\r\n      }\r\n      if (window.pageYOffset < 65) {\r\n        setNavbarScrolled(false)\r\n      }\r\n    })\r\n    return () => cleanup()\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: 'floating-nav',\r\n    sticky: 'fixed-top'\r\n  }\r\n\r\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\r\n          footerClasses[footerType] || 'footer-static'\r\n        } menu-expanded`\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      <Navbar\r\n        expand='lg'\r\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\r\n          'navbar-scrolled': navbarScrolled\r\n        })}\r\n      >\r\n        {!navbar && (\r\n          <div className='navbar-header d-xl-block d-none'>\r\n            <ul className='nav navbar-nav'>\r\n              <NavItem>\r\n                <Link to='/' className='navbar-brand'>\r\n                  <span className='brand-logo'>\r\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\r\n                  </span>\r\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\r\n                </Link>\r\n              </NavItem>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? navbar({ skin, setSkin }) : <NavbarComponent skin={skin} setSkin={setSkin} />}\r\n        </div>\r\n      </Navbar>\r\n      {!isHidden ? (\r\n        <div className='horizontal-menu-wrapper'>\r\n          <Navbar\r\n            tag='div'\r\n            expand='sm'\r\n            light={skin !== 'dark'}\r\n            dark={skin === 'dark' || bgColorCondition}\r\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\r\n              [navbarClasses[navbarType]]: navbarType !== 'static',\r\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\r\n            })}\r\n          >\r\n            {menu ? (\r\n              menu({ routerProps, currentActiveItem })\r\n            ) : (\r\n              <MenuComponent routerProps={routerProps} currentActiveItem={currentActiveItem} />\r\n            )}\r\n          </Navbar>\r\n        </div>\r\n      ) : null}\r\n\r\n      {children}\r\n      {themeConfig.layout.customizer === true ? (\r\n        <Customizer\r\n          skin={skin}\r\n          setSkin={setSkin}\r\n          footerType={footerType}\r\n          setFooterType={setFooterType}\r\n          navbarType={navbarType}\r\n          setNavbarType={setNavbarType}\r\n          navbarColor={navbarColor}\r\n          setNavbarColor={setNavbarColor}\r\n          isRtl={isRtl}\r\n          setIsRtl={setIsRtl}\r\n          layout={props.layout}\r\n          setLayout={props.setLayout}\r\n          isHidden={isHidden}\r\n          setIsHidden={setIsHidden}\r\n          contentWidth={contentWidth}\r\n          setContentWidth={setContentWidth}\r\n          transition={props.transition}\r\n          setTransition={props.setTransition}\r\n          themeConfig={themeConfig}\r\n        />\r\n      ) : null}\r\n      <footer\r\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\r\n          'd-none': footerType === 'hidden'\r\n        })}\r\n      >\r\n        {footer ? (\r\n          footer({ footerType, footerClasses })\r\n        ) : (\r\n          <FooterComponent footerType={footerType} footerClasses={footerClasses} />\r\n        )}\r\n      </footer>\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\nexport default HorizontalLayout\r\n","// !Do not remove the Layout import\r\nimport Layout from '@layouts/HorizontalLayout'\r\n\r\n// ** Components\r\n// import CustomMenu from './components/Menu'\r\n// import CustomNavbar from './components/Navbar'\r\n// import CustomFooter from './components/Footer'\r\n\r\nconst HorizontalLayout = props => (\r\n  <Layout\r\n    // menu={props => <CustomMenu {...props} />}\r\n    // navbar={props => <CustomNavbar {...props} />}\r\n    // footer={props => <CustomFooter {...props} />}\r\n    {...props}\r\n  >\r\n    {props.children}\r\n  </Layout>\r\n)\r\n\r\nexport default HorizontalLayout\r\n","import React from 'react';\r\nimport { userdatas } from '../localstorage/localdata';\r\nimport jwt_decode from 'jwt-decode';\r\nimport moment from 'moment';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport default function Logout() {\r\n\tconst decoded = jwt_decode(userdatas.Token);\r\n\tconst currentTime = Date.now() / 1000;\r\n\tif (decoded.exp < currentTime) {\r\n\t\tlocalStorage.clear();\r\n\t\t// Redirect To Login\r\n\t\twindow.location.href = '/login';\r\n\t}\r\n\treturn <></>;\r\n}\r\n","// ** React Imports\r\nimport { Suspense, useContext, lazy } from 'react'\r\n\r\n// ** Utils\r\n\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Custom Components\r\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\r\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\r\n\r\n// ** Router Components\r\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n// ** Routes & Default Routes\r\nimport { DefaultRoute, Routes } from './routes'\r\n\r\n\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\nimport {isUserLoggedIn} from '@utils'\r\nimport Logout from '../LogoutTime/Logout'\r\nimport { userdatas } from '../localstorage/localdata'\r\nimport { ToastContainer } from 'react-toastify'\r\n\r\n\r\nconst Router = () => {\r\n  // ** Hooks\r\n  const [layout, setLayout] = useLayout()\r\n  const [transition, setTransition] = useRouterTransition()\r\n\r\n  // ** ACL Ability Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Default Layout\r\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\r\n\r\n  // ** All of the available layouts\r\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\r\n\r\n  // ** Current Active Item\r\n  const currentActiveItem = null\r\n\r\n  // ** Return Filtered Array of Routes & Paths\r\n  const LayoutRoutesAndPaths = layout => {\r\n    const LayoutRoutes = []\r\n    const LayoutPaths = []\r\n\r\n    if (Routes) {\r\n      Routes.filter(route => {\r\n        // ** Checks if Route layout or Default layout matches current layout\r\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\r\n          LayoutRoutes.push(route)\r\n          LayoutPaths.push(route.path)\r\n        }\r\n      })\r\n    }\r\n\r\n    return { LayoutRoutes, LayoutPaths }\r\n  }\r\n\r\n  const NotAuthorized = lazy(() => import('@src/views/NotAuthorized'))\r\n\r\n  // ** Init Error Component\r\n  const Error = lazy(() => import('@src/views/Error'))\r\n\r\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\r\n  const FinalRoute = props => {\r\n    const route = props.route\r\n    let action, resource\r\n\r\n    // ** Assign vars based on route meta\r\n    if (route.meta) {\r\n      action = route.meta.action ? route.meta.action : null\r\n      resource = route.meta.resource ? route.meta.resource : null\r\n    }\r\n\r\n    if (\r\n      (!isUserLoggedIn() && route.meta === undefined) ||\r\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\r\n    ) {\r\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\r\n\r\n      return <Redirect to='/login' />\r\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\r\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\r\n      return <Redirect to='/dashboard' />\r\n    }  else {\r\n      // ** If none of the above render component\r\n      return <route.component {...props} />\r\n    }\r\n  }\r\n\r\n  // ** Return Route to Render\r\n  const ResolveRoutes = () => {\r\n    return Object.keys(Layouts).map((layout, index) => {\r\n\r\n\r\n      // ** Convert Layout parameter to Layout Component\r\n      // ? Note: make sure to keep layout and component name equal\r\n\r\n      const LayoutTag = Layouts[layout]\r\n\r\n      // ** Get Routes and Paths of the Layout\r\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\r\n\r\n      // ** We have freedom to display different layout for different route\r\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\r\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\r\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\r\n\r\n      // ** RouterProps to pass them to Layouts\r\n      const routerProps = {}\r\n\r\n      return (\r\n        \r\n        <Route path={LayoutPaths} key={index} >\r\n           <ToastContainer\r\n            \r\n            />\r\n          <LayoutTag\r\n            routerProps={routerProps}\r\n            layout={layout}\r\n            setLayout={setLayout}\r\n            transition={transition}\r\n            setTransition={setTransition}\r\n            currentActiveItem={currentActiveItem}\r\n          >\r\n            <Switch>\r\n              {LayoutRoutes.map(route => {\r\n                return (\r\n                  \r\n                  <Route\r\n                    key={route.path}\r\n                    path={route.path}\r\n                    exact={route.exact === true}\r\n                    render={props => {\r\n                      // ** Assign props to routerProps\r\n                      Object.assign(routerProps, {\r\n                        ...props,\r\n                        meta: route.meta\r\n                      })\r\n\r\n                      return (\r\n                        <Suspense fallback={null}>\r\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\r\n                          <LayoutWrapper\r\n                            layout={DefaultLayout}\r\n                            transition={transition}\r\n                            setTransition={setTransition}\r\n                            /* Conditional props */\r\n                            /*eslint-disable */\r\n                            {...(route.appLayout\r\n                              ? {\r\n                                  appLayout: route.appLayout\r\n                                }\r\n                              : {})}\r\n                            {...(route.meta\r\n                              ? {\r\n                                  routeMeta: route.meta\r\n                                }\r\n                              : {})}\r\n                            {...(route.className\r\n                              ? {\r\n                                  wrapperClass: route.className\r\n                                }\r\n                              : {})}\r\n                            /*eslint-enable */\r\n                          >\r\n                            {/* <route.component {...props} /> */}\r\n                            <FinalRoute route={route} {...props} />\r\n                            \r\n                          </LayoutWrapper>\r\n                          {userdatas && userdatas!=null ? <Logout/> : null}\r\n                                \r\n                        </Suspense>\r\n                      )\r\n                    }}\r\n                  />\r\n                )\r\n              })}\r\n            </Switch>\r\n            \r\n          </LayoutTag>\r\n        </Route>\r\n      )\r\n    })\r\n  }\r\n  \r\n  return (\r\n    \r\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\r\n      <Switch>\r\n     \r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/login' />\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return <Redirect to={DefaultRoute} />\r\n          }}\r\n        />\r\n        {/* Not Auth Route */}\r\n        <Route\r\n          exact\r\n          path='/not-authorized'\r\n          render={props => (\r\n            <Layouts.BlankLayout>\r\n              <NotAuthorized />\r\n            </Layouts.BlankLayout>\r\n          )}\r\n        />\r\n        {ResolveRoutes()}\r\n         {/* NotFound Error page */}\r\n        <Route path='*' component={Error} />/\r\n      </Switch>\r\n    </AppRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useLayout = () => {\r\n  // ** States\r\n  const [lastLayout, setLastLayout] = useState(null)\r\n  const [layout, setLayout] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(layout) : value\r\n\r\n      // ** Set state\r\n      setLayout(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleLayout = () => {\r\n    // ** If layout is horizontal & screen size is equals to or below 1200\r\n    if (layout === 'horizontal' && window.innerWidth <= 1200) {\r\n      setLayout('vertical')\r\n      setLastLayout('horizontal')\r\n    }\r\n    // ** If lastLayout is horizontal & screen size is equals to or above 1200\r\n    if (lastLayout === 'horizontal' && window.innerWidth >= 1200) {\r\n      setLayout('horizontal')\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    handleLayout()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // ** Window Resize Event\r\n    window.addEventListener('resize', handleLayout)\r\n  }, [layout, lastLayout])\r\n\r\n  return [layout, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useRouterTransition = () => {\r\n  // ** State\r\n  const [transition, setTransition] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.routerTransition\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.routerTransition\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(transition) : value\r\n\r\n      // ** Set state\r\n      setTransition(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [transition, setValue]\r\n}\r\n","// ** Router Import\r\n\r\n\r\n// const App = (props) => <Router />;\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Router from './router/Router'\r\nconst App = props => <Router />\r\n\r\n\r\n\r\nexport default App;\r\n","export const userdatas = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\nexport const configHeader = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n    Authorization: userdatas && userdatas.Token\r\n  }\r\n};\r\n","// ** Checks if an object is empty (returns boolean)\r\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\r\n\r\n// ** Returns K format from a number\r\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\r\n\r\n// ** Converts HTML to string\r\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\r\n\r\n// ** Checks if the passed date is today\r\nconst isToday = date => {\r\n  const today = new Date()\r\n  return (\r\n    /* eslint-disable operator-linebreak */\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n    /* eslint-enable */\r\n  )\r\n}\r\n\r\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\r\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\r\n  if (!value) return value\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n// ** Returns short month of passed date\r\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\r\n  const date = new Date(value)\r\n  let formatting = { month: 'short', day: 'numeric' }\r\n\r\n  if (toTimeForCurrentDay && isToday(date)) {\r\n    formatting = { hour: 'numeric', minute: 'numeric' }\r\n  }\r\n\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\r\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\r\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\r\n\r\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\r\nexport const getHomeRouteForLoggedInUser = userRole => {\r\n  if (userRole === 'admin') return '/'\r\n  if (userRole === 'client') return '/access-control'\r\n  return '/login'\r\n}\r\n\r\n// ** React Select Theme Colors\r\nexport const selectThemeColors = theme => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary25: '#7367f01a', // for option hover bg-color\r\n    primary: '#7367f0', // for selected option bg-color\r\n    neutral10: '#7367f0', // for tags bg-color\r\n    neutral20: '#ededed', // for input border-color\r\n    neutral30: '#ededed' // for input hover border-color\r\n  }\r\n})\r\n"],"sourceRoot":""}