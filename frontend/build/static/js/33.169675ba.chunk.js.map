{"version":3,"sources":["admin/components/user/EditUser.js","redux/actions/apislogic/userapis.js"],"names":["EditUser","id","useParams","history","useHistory","dispatch","useDispatch","useState","filesend","setFileSend","UserGetData","useSelector","state","userRecords","getUsersRecords","error","EditDatMessage","EditUSerData","errorUserEditData","UserEditData","useEffect","push","name","mobile_no","email","gender","profile_image","user","setUser","img","setImg","onInputChange","e","target","value","UserGetAction","type","USER_EDIT_RESET","sm","onSubmit","preventDefault","formData","FormData","append","undefined","EditRegisterAction","md","for","placeholder","onChange","className","inline","label","checked","src","height","width","body","Ripple","tag","Label","color","size","hidden","accept","files","reader","FileReader","onload","result","readAsDataURL","outline","onClick","borderless","striped","responsive","defaultChecked","Link","to","UserRegisterAction","registerdata","a","USER_REGISTER_REQUEST","axios","post","configHeader","data","USER_REGISTER_SUCCESS","payload","USER_REGISTER_ERROR","response","errors","message","updateid","userdata","USER_EDIT_REQUEST","put","USER_EDIT_SUCCESS","USER_EDIT_ERROR","UserDeleteAction","deleteid","USER_DELETE_REQUEST","delete","USER_DELETE_SUCCESS","USER_DELETE_ERROR","MultiDeleteAction","multiid","MULTI_DELETE_REQUEST","MULTI_DELETE_SUCCESS","MULTI_DELETE_ERROR","UserListAction","queryString","USER_LIST_REQUEST","get","USER_LIST_SUCCESS","USER_LIST_ERROR","userid","USER_GET_REQUEST","USER_GET_SUCCESS","USER_GET_ERROR"],"mappings":"iWAoVeA,UA3TE,WACf,IAAQC,EAAOC,cAAPD,GACFE,EAAUC,cACVC,EAAWC,cACjB,EAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMC,eACfC,GAAoBJ,EAAhDK,MAAgDL,EAApBI,iBAE5BE,EAAiBL,aAAY,SAACC,GAAD,OAAWA,EAAMK,gBACvCC,EAAoCF,EAA1CD,MAAyBI,EAAiBH,EAAjBG,aAEhCC,qBAAU,WACJD,GACFhB,EAAQkB,KAAK,gBAEd,CAACF,IAEJ,MAAwBZ,mBAAS,CAC/Be,KAAM,GACNC,UAAW,GACXC,MAAO,GACPC,OAAQ,GACRC,cAAe,KALjB,mBAAOC,EAAP,KAAaC,EAAb,KAOA,EAAsBrB,qBAAtB,mBAAOsB,EAAP,KAAYC,EAAZ,KA2BMC,EAAgB,SAACC,GACrBJ,EAAQ,2BAAKD,GAAN,kBAAaK,EAAEC,OAAOX,KAAOU,EAAEC,OAAOC,UAa/Cd,qBAAU,WACRf,EAAS8B,YAAclC,IACvBI,EAAS,CAAC+B,KAAKC,SACd,IAEHjB,qBAAU,WACRQ,EAAQ,CACNN,KAAMR,GAAmBA,EAAe,KAAf,KACzBS,UAAWT,GAAmBA,EAAe,KAAf,UAC9BU,MAAOV,GAAmBA,EAAe,KAAf,MAC1BW,OAAQX,GAAmBA,EAAe,KAAf,OAC3BY,cAAeZ,GAAmBA,EAAe,KAAf,kBAEnC,CAACA,IAeJ,OACE,eAAC,WAAD,WACE,2CACCa,GACC,cAAC,IAAD,UACE,cAAC,IAAD,CAAKW,GAAG,KAAR,SACE,cAAC,IAAD,CAAMC,SAAU,SAACP,GAAD,OAnBT,SAACA,GAChBA,EAAEQ,iBAEF,IAAQlB,EAAkDK,EAAlDL,KAAME,EAA4CG,EAA5CH,MAAOD,EAAqCI,EAArCJ,UAAWE,EAA0BE,EAA1BF,OAC5BgB,GADsDd,EAAlBD,cACzB,IAAIgB,UACnBD,EAASE,OAAO,OAAQrB,GACxBmB,EAASE,OAAO,QAASnB,GACzBiB,EAASE,OAAO,YAAapB,GAC7BkB,EAASE,OAAO,SAAUlB,QAChBmB,GAAVpC,GAAuBiC,EAASE,OAAO,gBAAgBnC,GACvDH,EAASwC,YAAmB5C,EAAIwC,IASDF,CAASP,IAAhC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKc,GAAG,IAAIR,GAAG,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOS,IAAI,OAAX,kBACA,cAAC,IAAD,CACEX,KAAK,OACLnC,GAAG,OACHqB,KAAK,OACL0B,YAAY,OACZd,MAAOP,EAAKL,KACZ2B,SAAU,SAACjB,GAAD,OAAOD,EAAcC,MAE5Bd,GAAqBA,EAAkBI,KAC5C,qBAAK4B,UAAU,QAAf,SAAwBhC,EAAkBI,OACxC,UAGN,cAAC,IAAD,CAAKwB,GAAG,IAAIR,GAAG,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOS,IAAI,QAAX,mBACA,cAAC,IAAD,CACEX,KAAK,OACLnC,GAAG,QACHqB,KAAK,QACL0B,YAAY,QACZd,MAAOP,EAAKH,MACZyB,SAAU,SAACjB,GAAD,OAAOD,EAAcC,WAIrC,cAAC,IAAD,CAAKc,GAAG,IAAIR,GAAG,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOS,IAAI,YAAX,uBACA,cAAC,IAAD,CACEX,KAAK,OACLnC,GAAG,YACHqB,KAAK,YACL0B,YAAY,YACZd,MAAOP,EAAKJ,UACZ0B,SAAU,SAACjB,GAAD,OAAOD,EAAcC,MAE7Bd,GAAqBA,EAAkBK,UAC3C,qBAAK2B,UAAU,QAAf,SAAwBhC,EAAkBK,YACxC,UAGN,eAAC,IAAD,CAAKuB,GAAG,IAAIR,GAAG,KAAf,UACE,cAAC,IAAD,CAAOS,IAAI,SAAX,oBACA,uBACA,cAAC,IAAD,CACEX,KAAK,QACLnC,GAAG,UACHqB,KAAK,SACL6B,QAAM,EACNC,MAAM,OACNlB,MAAM,OACNmB,QAAyB,SAAhB1B,EAAKF,OACdwB,SAAU,SAACjB,GAAD,OAAOD,EAAcC,MAEjC,cAAC,IAAD,CACEI,KAAK,QACLnC,GAAG,UACHqB,KAAK,SACL6B,QAAM,EACNC,MAAM,SACNlB,MAAM,SACNmB,QAAyB,WAAhB1B,EAAKF,OACdwB,SAAU,SAACjB,GAAD,OAAOD,EAAcC,MAE9Bd,GAAqBA,EAAkBO,OACxC,qBAAKyB,UAAU,QAAf,SAAwBhC,EAAkBO,SACxC,QAGN,eAAC,IAAD,CAAKa,GAAG,KAAR,UACE,cAAC,IAAD,CAAOS,IAAI,QAAX,2BACA,eAAC,IAAD,CAAOG,UAAU,OAAjB,UAtJH,MAAPrB,EAEA,qBACEqB,UAAU,gDACVI,IAAKzB,EACL0B,OAAO,KACPC,MAAM,OAKR,qBACEN,UAAU,gDACVI,IACyB,YAAvB3B,EAAKD,cACD,qDACAC,EAAKD,cAEX6B,OAAO,KACPC,MAAM,OA2II,cAAC,IAAD,CAAON,UAAU,QAAQO,MAAI,EAA7B,SACE,sBAAKP,UAAU,6BAAf,UACE,eAAC,IAAOQ,OAAR,CACEzD,GAAG,aACH0D,IAAKC,IACLV,UAAU,aACVW,MAAM,UAJR,UAME,sBAAMX,UAAU,oBAAhB,oBACA,sBAAMA,UAAU,oBAAhB,SACE,cAAC,IAAD,CAAMY,KAAM,OAEd,cAAC,IAAD,CACE1B,KAAK,OACL2B,QAAM,EACN9D,GAAG,aACH+D,OAAO,UACPf,SAAU,SAACjB,GAAD,OAlJnB,SAACA,GAChBvB,EAAYuB,EAAEC,OAAOgC,MAAM,IAC3B,IAAMC,EAAS,IAAIC,WACjBF,EAAQjC,EAAEC,OAAOgC,MACnBC,EAAOE,OAAS,WACdtC,EAAOoC,EAAOG,SAEhBH,EAAOI,cAAcL,EAAM,IA2IchB,CAASjB,SAG9B,eAAC,IAAO0B,OAAR,CACEG,MAAM,YACNU,SAAO,EACPC,QAAS,kBAAM/D,KAHjB,UAKE,sBAAMyC,UAAU,oBAAhB,oBACA,sBAAMA,UAAU,oBAAhB,SACE,cAAC,IAAD,CAAQY,KAAM,qBAQ1B,cAAC,IAAD,CAAKxB,GAAG,KAAR,SACE,sBAAKY,UAAU,0BAAf,UACE,qBAAIA,UAAU,+BAAd,UACE,cAAC,IAAD,CAAMY,KAAM,GAAIZ,UAAU,UAC1B,sBAAMA,UAAU,eAAhB,4BAEF,eAAC,IAAD,CAAOuB,YAAU,EAACC,SAAO,EAACC,YAAU,EAApC,UACE,uBAAOzB,UAAU,cAAjB,SACE,+BACE,wCACA,sCACA,uCACA,wCACA,6CAGJ,kCACE,+BACE,uCACA,6BACE,cAAC,IAAD,CACEd,KAAK,WACLnC,GAAG,UACHmD,MAAM,GACNwB,gBAAc,MAGlB,6BACE,cAAC,IAAD,CACExC,KAAK,WACLnC,GAAG,UACHmD,MAAM,OAGV,6BACE,cAAC,IAAD,CACEhB,KAAK,WACLnC,GAAG,UACHmD,MAAM,OAGV,6BACE,cAAC,IAAD,CACEhB,KAAK,WACLnC,GAAG,UACHmD,MAAM,UAKZ,+BACE,sCACA,6BACE,cAAC,IAAD,CAAahB,KAAK,WAAWnC,GAAG,SAASmD,MAAM,OAEjD,6BACE,cAAC,IAAD,CAAahB,KAAK,WAAWnC,GAAG,SAASmD,MAAM,OAEjD,6BACE,cAAC,IAAD,CAAahB,KAAK,WAAWnC,GAAG,SAASmD,MAAM,OAEjD,6BACE,cAAC,IAAD,CAAahB,KAAK,WAAWnC,GAAG,SAASmD,MAAM,qBAO3D,eAAC,IAAD,CAAKF,UAAU,sCAAsCZ,GAAG,KAAxD,UACE,cAAC,IAAOoB,OAAR,CACER,UAAU,4BACVd,KAAK,SACLyB,MAAM,UAHR,0BAOA,cAAC,IAAOH,OAAR,CACEG,MAAM,YACNF,IAAKkB,IACLC,GAAG,aACHP,SAAO,EAJT,qC,8TCxSLQ,EAAqB,SAACC,GAAD,8CAAkB,WAAO3E,GAAP,iBAAA4E,EAAA,sEAEhD5E,EAAS,CACP+B,KAAM8C,OAHwC,SAMzBC,IAAMC,KAAN,sBAErBJ,EACAK,KAT8C,gBAMxCC,EANwC,EAMxCA,KAMRjF,EAAS,CACP+B,KAAMmD,KACNC,QAASF,IAdqC,gDAiBhDjF,EAAS,CACP+B,KAAMqD,KACND,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKK,OAClC,KAAMD,SAASJ,KAAKK,OACpB,KAAMC,UAtBkC,yDAAlB,uDA2BrB/C,EAAqB,SAACgD,EAAUC,GAAX,8CAAwB,WAAOzF,GAAP,iBAAA4E,EAAA,sEAEtD5E,EAAS,CACP+B,KAAM2D,OAH8C,SAM/BZ,IAAMa,IAAN,sBAAyBH,GAAYC,EAAU,CACpET,mBAPoD,gBAM9CC,EAN8C,EAM9CA,KAIRjF,EAAS,CACP+B,KAAM6D,KACNT,QAASF,IAZ2C,gDAetDjF,EAAS,CACP+B,KAAM8D,KACNV,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKK,OAClC,KAAMD,SAASJ,KAAKK,OACpB,KAAMC,UApBwC,yDAAxB,uDAyBrBO,EAAmB,SAACC,GAAD,8CAAc,WAAO/F,GAAP,iBAAA4E,EAAA,sEAE1C5E,EAAS,CACP+B,KAAMiE,OAHkC,SAMnBlB,IAAMmB,OAAN,sBACNF,GACff,KARwC,gBAMlCC,EANkC,EAMlCA,KAKRjF,EAAS,CACP+B,KAAMmE,KACNf,QAASF,IAb+B,gDAgB1CjF,EAAS,CACP+B,KAAMoE,KACNhB,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKK,OAClC,KAAMD,SAASJ,KAAKK,OACpB,KAAMC,UArB4B,yDAAd,uDA0BnBa,EAAoB,SAACC,GAAD,8CAAa,WAAOrG,GAAP,iBAAA4E,EAAA,sEAE1C5E,EAAS,CACP+B,KAAMuE,MAHkC,SAMnBxB,IAAMC,KAAN,oBAErBsB,EACArB,KATwC,gBAMlCC,EANkC,EAMlCA,KAMRjF,EAAS,CACP+B,KAAMwE,IACNpB,QAASF,IAd+B,gDAiB1CjF,EAAS,CACP+B,KAAMyE,IACNrB,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKK,OAClC,KAAMD,SAASJ,KAAKK,OACpB,KAAMC,UAtB4B,yDAAb,uDA2BpBkB,EAAiB,SAACC,GAAD,8CAAiB,WAAO1G,GAAP,iBAAA4E,EAAA,sEAE3C5E,EAAS,CACP+B,KAAM4E,OAHmC,SAMpB7B,IAAM8B,IAC3B,qBAAuBF,EACvB1B,KARyC,gBAMnCC,EANmC,EAMnCA,KAKRjF,EAAS,CACP+B,KAAM8E,KACN1B,QAASF,IAbgC,gDAgB3CjF,EAAS,CACP+B,KAAM+E,KACN3B,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKK,OAClC,KAAMD,SAASJ,KAAKK,OACpB,KAAMC,UArB6B,yDAAjB,uDA0BjBzD,EAAgB,SAACiF,GAAD,8CAAY,WAAO/G,GAAP,iBAAA4E,EAAA,sEAErC5E,EAAS,CACP+B,KAAMiF,OAH6B,SAKdlC,IAAM8B,IAAN,wBAA2BG,GAAU/B,KALvB,gBAK7BC,EAL6B,EAK7BA,KAERjF,EAAS,CACP+B,KAAMkF,KACN9B,QAASF,IAT0B,gDAYrCjF,EAAS,CACP+B,KAAMmF,KACN/B,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKK,OAClC,KAAMD,SAASJ,KAAKK,OACpB,KAAMC,UAjBuB,yDAAZ","file":"static/js/33.169675ba.chunk.js","sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  EditRegisterAction,\r\n  UserGetAction\r\n} from \"../../../redux/actions/apislogic/userapis\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Lock, Edit, Trash2 } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Col,\r\n  CustomInput,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  Media,\r\n  Row,\r\n  Table,\r\n  Button,\r\n  FormGroup,\r\n  Card\r\n} from \"reactstrap\";\r\nimport { USER_EDIT_RESET } from \"../../../redux/Constants/userConstants\";\r\n\r\nconst EditUser = () => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [filesend, setFileSend] = useState();\r\n\r\n  const UserGetData = useSelector((state) => state.userRecords);\r\n  var { error:errorgetUsersRecords, getUsersRecords } = UserGetData;\r\n  \r\n  const EditDatMessage = useSelector((state) => state.EditUSerData);\r\n  const {error:errorUserEditData, UserEditData } = EditDatMessage;\r\n\r\n  useEffect(() => {\r\n    if (UserEditData) {\r\n      history.push(\"/user/list\");\r\n    }\r\n  }, [UserEditData]);\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    mobile_no: \"\",\r\n    email: \"\",\r\n    gender: \"\",\r\n    profile_image: \"\"\r\n  });\r\n  const [img, setImg] = useState();\r\n  const renderimagefun = () => {\r\n    if (img != null) {\r\n      return (\r\n        <img\r\n          className=\"user-avatar rounded mr-2 my-25 cursor-pointer\"\r\n          src={img}\r\n          height=\"90\"\r\n          width=\"90\"\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <img\r\n          className=\"user-avatar rounded mr-2 my-25 cursor-pointer\"\r\n          src={\r\n            user.profile_image === \"Testing\"\r\n              ? \"https://bootdey.com/img/Content/avatar/avatar7.png\"\r\n              : user.profile_image\r\n          }\r\n          height=\"90\"\r\n          width=\"90\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const onInputChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setFileSend(e.target.files[0]);\r\n    const reader = new FileReader(),\r\n      files = e.target.files;\r\n    reader.onload = function () {\r\n      setImg(reader.result);\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(UserGetAction(id));\r\n    dispatch({type:USER_EDIT_RESET})\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setUser({\r\n      name: getUsersRecords && getUsersRecords[\"data\"][\"name\"],\r\n      mobile_no: getUsersRecords && getUsersRecords[\"data\"][\"mobile_no\"],\r\n      email: getUsersRecords && getUsersRecords[\"data\"][\"email\"],\r\n      gender: getUsersRecords && getUsersRecords[\"data\"][\"gender\"],\r\n      profile_image: getUsersRecords && getUsersRecords[\"data\"][\"profile_image\"]\r\n    });\r\n  }, [getUsersRecords]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, mobile_no, gender, profile_image } = user;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"mobile_no\", mobile_no);\r\n    formData.append(\"gender\", gender);\r\n    filesend!=undefined ?  formData.append(\"profile_image\",filesend) : null\r\n    dispatch(EditRegisterAction(id, formData));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h3>Edit User</h3>\r\n      {user && (\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <Form onSubmit={(e) => onSubmit(e)}>\r\n              <Row>\r\n                <Col md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"name\">Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Name\"\r\n                      value={user.name}\r\n                      onChange={(e) => onInputChange(e)}\r\n                    />\r\n                        {errorUserEditData && errorUserEditData.name ? (\r\n                    <div className=\"error\">{errorUserEditData.name}</div>\r\n                  ) : null}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"email\">Email</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={user.email}\r\n                      onChange={(e) => onInputChange(e)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"mobile_no\">Mobile No</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      id=\"mobile_no\"\r\n                      name=\"mobile_no\"\r\n                      placeholder=\"Mobile No\"\r\n                      value={user.mobile_no}\r\n                      onChange={(e) => onInputChange(e)}\r\n                    />\r\n                       {errorUserEditData && errorUserEditData.mobile_no ? (\r\n                    <div className=\"error\">{errorUserEditData.mobile_no}</div>\r\n                  ) : null}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\" sm=\"12\">\r\n                  <Label for=\"gender\">Gender</Label>\r\n                  <br></br>\r\n                  <CustomInput\r\n                    type=\"radio\"\r\n                    id=\"gender1\"\r\n                    name=\"gender\"\r\n                    inline\r\n                    label=\"Male\"\r\n                    value=\"male\"\r\n                    checked={user.gender === \"male\"}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                  <CustomInput\r\n                    type=\"radio\"\r\n                    id=\"gender2\"\r\n                    name=\"gender\"\r\n                    inline\r\n                    label=\"Female\"\r\n                    value=\"female\"\r\n                    checked={user.gender === \"female\"}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                    {errorUserEditData && errorUserEditData.gender ? (\r\n                    <div className=\"error\">{errorUserEditData.gender}</div>\r\n                  ) : null}\r\n                </Col>\r\n\r\n                <Col sm=\"12\">\r\n                  <Label for=\"image\">Profile Image</Label>\r\n                  <Media className=\"mb-2\">\r\n                    {renderimagefun()}\r\n                    {/* <img\r\n                      className=\"user-avatar rounded mr-2 my-25 cursor-pointer\"\r\n                      src={img}\r\n                      height=\"90\"\r\n                      width=\"90\"\r\n                    /> */}\r\n                    <Media className=\"mt-50\" body>\r\n                      <div className=\"d-flex flex-wrap mt-1 px-0\">\r\n                        <Button.Ripple\r\n                          id=\"change-img\"\r\n                          tag={Label}\r\n                          className=\"mr-75 mb-0\"\r\n                          color=\"primary\"\r\n                        >\r\n                          <span className=\"d-none d-sm-block\">Upload</span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <Edit size={14} />\r\n                          </span>\r\n                          <Input\r\n                            type=\"file\"\r\n                            hidden\r\n                            id=\"change-img\"\r\n                            accept=\"image/*\"\r\n                            onChange={(e) => onChange(e)}\r\n                          />\r\n                        </Button.Ripple>\r\n                        <Button.Ripple\r\n                          color=\"secondary\"\r\n                          outline\r\n                          onClick={() => setFileSend()}\r\n                        >\r\n                          <span className=\"d-none d-sm-block\">Remove</span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <Trash2 size={14} />\r\n                          </span>\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </Media>\r\n                  </Media>\r\n                </Col>\r\n\r\n                <Col sm=\"12\">\r\n                  <div className=\"permissions border mt-1\">\r\n                    <h6 className=\"py-1 mx-1 mb-0 font-medium-2\">\r\n                      <Lock size={18} className=\"mr-25\" />\r\n                      <span className=\"align-middle\">Permissions</span>\r\n                    </h6>\r\n                    <Table borderless striped responsive>\r\n                      <thead className=\"thead-light\">\r\n                        <tr>\r\n                          <th>Module</th>\r\n                          <th>Read</th>\r\n                          <th>Write</th>\r\n                          <th>Create</th>\r\n                          <th>Delete</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>Admin</td>\r\n                          <td>\r\n                            <CustomInput\r\n                              type=\"checkbox\"\r\n                              id=\"admin-1\"\r\n                              label=\"\"\r\n                              defaultChecked\r\n                            />\r\n                          </td>\r\n                          <td>\r\n                            <CustomInput\r\n                              type=\"checkbox\"\r\n                              id=\"admin-2\"\r\n                              label=\"\"\r\n                            />\r\n                          </td>\r\n                          <td>\r\n                            <CustomInput\r\n                              type=\"checkbox\"\r\n                              id=\"admin-3\"\r\n                              label=\"\"\r\n                            />\r\n                          </td>\r\n                          <td>\r\n                            <CustomInput\r\n                              type=\"checkbox\"\r\n                              id=\"admin-4\"\r\n                              label=\"\"\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                          <td>User</td>\r\n                          <td>\r\n                            <CustomInput type=\"checkbox\" id=\"user-1\" label=\"\" />\r\n                          </td>\r\n                          <td>\r\n                            <CustomInput type=\"checkbox\" id=\"user-2\" label=\"\" />\r\n                          </td>\r\n                          <td>\r\n                            <CustomInput type=\"checkbox\" id=\"user-3\" label=\"\" />\r\n                          </td>\r\n                          <td>\r\n                            <CustomInput type=\"checkbox\" id=\"user-4\" label=\"\" />\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </Table>\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"d-flex flex-sm-row flex-column mt-2\" sm=\"12\">\r\n                  <Button.Ripple\r\n                    className=\"mb-1 mb-sm-0 mr-0 mr-sm-1\"\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                  >\r\n                    Save Changes\r\n                  </Button.Ripple>\r\n                  <Button.Ripple\r\n                    color=\"secondary\"\r\n                    tag={Link}\r\n                    to=\"/user/list\"\r\n                    outline\r\n                  >\r\n                    Cancel\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","import axios from \"axios\";\r\nimport { configHeader, userdatas } from \"../../../localstorage/localdata\";\r\n\r\nimport {\r\n  MULTI_DELETE_ERROR,\r\n  MULTI_DELETE_REQUEST,\r\n  MULTI_DELETE_SUCCESS,\r\n  USER_DELETE_ERROR,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_RESET,\r\n  USER_DELETE_SUCCESS,\r\n  USER_EDIT_ERROR,\r\n  USER_EDIT_REQUEST,\r\n  USER_EDIT_SUCCESS,\r\n  USER_GET_ERROR,\r\n  USER_GET_REQUEST,\r\n  USER_GET_SUCCESS,\r\n  USER_LIST_ERROR,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_REGISTER_ERROR,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_RESET,\r\n  USER_REGISTER_SUCCESS\r\n} from \"../../Constants/userConstants\";\r\n\r\nexport const UserRegisterAction = (registerdata) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST\r\n    });\r\n\r\n    const { data } = await axios.post(\r\n      `/api/user_register/`,\r\n      registerdata,\r\n      configHeader\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_ERROR,\r\n      payload:\r\n        error.response && error.response.data.errors\r\n          ? error.response.data.errors\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const EditRegisterAction = (updateid, userdata) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_EDIT_REQUEST\r\n    });\r\n    \r\n    const { data } = await axios.put(`/api/update/${updateid}`, userdata, {\r\n      configHeader\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_EDIT_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_EDIT_ERROR,\r\n      payload:\r\n        error.response && error.response.data.errors\r\n          ? error.response.data.errors\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const UserDeleteAction = (deleteid) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST\r\n    });\r\n\r\n    const { data } = await axios.delete(\r\n      `/api/delete/${deleteid}`,\r\n      configHeader\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_ERROR,\r\n      payload:\r\n        error.response && error.response.data.errors\r\n          ? error.response.data.errors\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const MultiDeleteAction = (multiid) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: MULTI_DELETE_REQUEST\r\n    });\r\n\r\n    const { data } = await axios.post(\r\n      `/api/delete_many/`,\r\n      multiid,\r\n      configHeader\r\n    );\r\n\r\n    dispatch({\r\n      type: MULTI_DELETE_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MULTI_DELETE_ERROR,\r\n      payload:\r\n        error.response && error.response.data.errors\r\n          ? error.response.data.errors\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const UserListAction = (queryString) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST\r\n    });\r\n\r\n    const { data } = await axios.get(\r\n      \"/api/get_all_user?\" + queryString,\r\n      configHeader\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_ERROR,\r\n      payload:\r\n        error.response && error.response.data.errors\r\n          ? error.response.data.errors\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const UserGetAction = (userid) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_GET_REQUEST\r\n    });\r\n    const { data } = await axios.get(`/api/get_data/${userid}`, configHeader);\r\n\r\n    dispatch({\r\n      type: USER_GET_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_GET_ERROR,\r\n      payload:\r\n        error.response && error.response.data.errors\r\n          ? error.response.data.errors\r\n          : error.message\r\n    });\r\n  }\r\n};\r\n"],"sourceRoot":""}